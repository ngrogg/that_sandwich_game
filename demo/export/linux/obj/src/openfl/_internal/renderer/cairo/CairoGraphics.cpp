// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_lime_graphics_Image
#include <lime/graphics/Image.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo_Cairo
#include <lime/graphics/cairo/Cairo.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoImageSurface_CairoImageSurface_Impl_
#include <lime/graphics/cairo/_CairoImageSurface/CairoImageSurface_Impl_.h>
#endif
#ifndef INCLUDED_lime_graphics_cairo__CairoPattern_CairoPattern_Impl_
#include <lime/graphics/cairo/_CairoPattern/CairoPattern_Impl_.h>
#endif
#ifndef INCLUDED_lime_math_Matrix3
#include <lime/math/Matrix3.h>
#endif
#ifndef INCLUDED_lime_math_Vector2
#include <lime/math/Vector2.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool
#include <lime/utils/ObjectPool.h>
#endif
#ifndef INCLUDED_openfl__Vector_FloatVector
#include <openfl/_Vector/FloatVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_IntVector
#include <openfl/_Vector/IntVector.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandBuffer
#include <openfl/_internal/renderer/DrawCommandBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandReader
#include <openfl/_internal/renderer/DrawCommandReader.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_DrawCommandType
#include <openfl/_internal/renderer/DrawCommandType.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_ShaderBuffer
#include <openfl/_internal/renderer/ShaderBuffer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_cairo_CairoGraphics
#include <openfl/_internal/renderer/cairo/CairoGraphics.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_CairoRenderer
#include <openfl/display/CairoRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectRenderer
#include <openfl/display/DisplayObjectRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_geom_Matrix
#include <openfl/geom/Matrix.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif
#ifndef INCLUDED_openfl_geom_Rectangle
#include <openfl/geom/Rectangle.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_72_closePath,"openfl._internal.renderer.cairo.CairoGraphics","closePath",0x6dffa481,"openfl._internal.renderer.cairo.CairoGraphics.closePath","openfl/_internal/renderer/cairo/CairoGraphics.hx",72,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_100_createGradientPattern,"openfl._internal.renderer.cairo.CairoGraphics","createGradientPattern",0x9888a3a8,"openfl._internal.renderer.cairo.CairoGraphics.createGradientPattern","openfl/_internal/renderer/cairo/CairoGraphics.hx",100,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_177_createImagePattern,"openfl._internal.renderer.cairo.CairoGraphics","createImagePattern",0x42487dcd,"openfl._internal.renderer.cairo.CairoGraphics.createImagePattern","openfl/_internal/renderer/cairo/CairoGraphics.hx",177,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_195_drawRoundRect,"openfl._internal.renderer.cairo.CairoGraphics","drawRoundRect",0xa42fd4f2,"openfl._internal.renderer.cairo.CairoGraphics.drawRoundRect","openfl/_internal/renderer/cairo/CairoGraphics.hx",195,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_229_endFill,"openfl._internal.renderer.cairo.CairoGraphics","endFill",0x21233e02,"openfl._internal.renderer.cairo.CairoGraphics.endFill","openfl/_internal/renderer/cairo/CairoGraphics.hx",229,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_238_endStroke,"openfl._internal.renderer.cairo.CairoGraphics","endStroke",0xaaf640f7,"openfl._internal.renderer.cairo.CairoGraphics.endStroke","openfl/_internal/renderer/cairo/CairoGraphics.hx",238,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_250_hitTest,"openfl._internal.renderer.cairo.CairoGraphics","hitTest",0xddc21649,"openfl._internal.renderer.cairo.CairoGraphics.hitTest","openfl/_internal/renderer/cairo/CairoGraphics.hx",250,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_489_isCCW,"openfl._internal.renderer.cairo.CairoGraphics","isCCW",0x5353f111,"openfl._internal.renderer.cairo.CairoGraphics.isCCW","openfl/_internal/renderer/cairo/CairoGraphics.hx",489,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_494_normalizeUVT,"openfl._internal.renderer.cairo.CairoGraphics","normalizeUVT",0xc9c604e2,"openfl._internal.renderer.cairo.CairoGraphics.normalizeUVT","openfl/_internal/renderer/cairo/CairoGraphics.hx",494,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_543_playCommands,"openfl._internal.renderer.cairo.CairoGraphics","playCommands",0xcc85aa58,"openfl._internal.renderer.cairo.CairoGraphics.playCommands","openfl/_internal/renderer/cairo/CairoGraphics.hx",543,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1224_quadraticCurveTo,"openfl._internal.renderer.cairo.CairoGraphics","quadraticCurveTo",0x01a3b18e,"openfl._internal.renderer.cairo.CairoGraphics.quadraticCurveTo","openfl/_internal/renderer/cairo/CairoGraphics.hx",1224,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1251_render,"openfl._internal.renderer.cairo.CairoGraphics","render",0x3c3e61d2,"openfl._internal.renderer.cairo.CairoGraphics.render","openfl/_internal/renderer/cairo/CairoGraphics.hx",1251,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_1593_renderMask,"openfl._internal.renderer.cairo.CairoGraphics","renderMask",0x2ed81fde,"openfl._internal.renderer.cairo.CairoGraphics.renderMask","openfl/_internal/renderer/cairo/CairoGraphics.hx",1593,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_49_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",49,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_50_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",50,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_57_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",57,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_66_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",66,0x744ae94c)
HX_LOCAL_STACK_FRAME(_hx_pos_7c423d109b848e15_68_boot,"openfl._internal.renderer.cairo.CairoGraphics","boot",0x820ca3ae,"openfl._internal.renderer.cairo.CairoGraphics.boot","openfl/_internal/renderer/cairo/CairoGraphics.hx",68,0x744ae94c)
namespace openfl{
namespace _internal{
namespace renderer{
namespace cairo{

void CairoGraphics_obj::__construct() { }

Dynamic CairoGraphics_obj::__CreateEmpty() { return new CairoGraphics_obj; }

void *CairoGraphics_obj::_hx_vtable = 0;

Dynamic CairoGraphics_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CairoGraphics_obj > _hx_result = new CairoGraphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CairoGraphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5163c976;
}

Float CairoGraphics_obj::SIN45;

Float CairoGraphics_obj::TAN22;

bool CairoGraphics_obj::allowSmoothing;

 ::openfl::display::BitmapData CairoGraphics_obj::bitmapFill;

bool CairoGraphics_obj::bitmapRepeat;

 ::openfl::geom::Rectangle CairoGraphics_obj::bounds;

 ::lime::graphics::cairo::Cairo CairoGraphics_obj::cairo;

 ::openfl::_internal::renderer::DrawCommandBuffer CairoGraphics_obj::fillCommands;

 ::Dynamic CairoGraphics_obj::fillPattern;

 ::openfl::geom::Matrix CairoGraphics_obj::fillPatternMatrix;

 ::openfl::display::Graphics CairoGraphics_obj::graphics;

bool CairoGraphics_obj::hasFill;

bool CairoGraphics_obj::hasStroke;

bool CairoGraphics_obj::hitTesting;

 ::openfl::geom::Matrix CairoGraphics_obj::inversePendingMatrix;

 ::openfl::geom::Matrix CairoGraphics_obj::pendingMatrix;

 ::openfl::_internal::renderer::DrawCommandBuffer CairoGraphics_obj::strokeCommands;

 ::Dynamic CairoGraphics_obj::strokePattern;

 ::lime::math::Matrix3 CairoGraphics_obj::tempMatrix3;

Float CairoGraphics_obj::worldAlpha;

void CairoGraphics_obj::closePath(hx::Null< bool >  __o_strokeBefore){
bool strokeBefore = __o_strokeBefore.Default(false);
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_72_closePath)
HXLINE(  74)		if (hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern )) {
HXLINE(  76)			return;
            		}
HXLINE(  80)		if (!(strokeBefore)) {
HXLINE(  82)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  86)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern);
HXLINE(  87)		if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(  87)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->strokePreserve();
            		}
HXLINE(  89)		if (strokeBefore) {
HXLINE(  91)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            		}
HXLINE(  95)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CairoGraphics_obj,closePath,(void))

 ::Dynamic CairoGraphics_obj::createGradientPattern( ::Dynamic type,::cpp::VirtualArray colors,::cpp::VirtualArray alphas,::cpp::VirtualArray ratios, ::openfl::geom::Matrix matrix, ::Dynamic spreadMethod, ::Dynamic interpolationMethod,Float focalPointRatio){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_100_createGradientPattern)
HXLINE( 102)		 ::Dynamic pattern = null();
HXDLIN( 102)		 ::openfl::geom::Point point = null();
HXDLIN( 102)		 ::openfl::geom::Point point2 = null();
HXDLIN( 102)		bool releaseMatrix = false;
HXLINE( 104)		if (hx::IsNull( matrix )) {
HXLINE( 106)			matrix = ::openfl::geom::Matrix_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Matrix >();
HXLINE( 107)			releaseMatrix = true;
            		}
HXLINE( 111)		 ::Dynamic _hx_switch_0 = type;
            		if (  (_hx_switch_0==(int)0) ){
HXLINE( 126)			point = ::openfl::geom::Point_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Point >();
HXLINE( 127)			point->setTo(((Float)-819.2),(int)0);
HXLINE( 128)			{
HXLINE( 128)				Float px = point->x;
HXDLIN( 128)				Float py = point->y;
HXDLIN( 128)				Float _hx_tmp = (px * matrix->a);
HXDLIN( 128)				point->x = ((_hx_tmp + (py * matrix->c)) + matrix->tx);
HXDLIN( 128)				Float _hx_tmp1 = (px * matrix->b);
HXDLIN( 128)				point->y = ((_hx_tmp1 + (py * matrix->d)) + matrix->ty);
            			}
HXLINE( 130)			point2 = ::openfl::geom::Point_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Point >();
HXLINE( 131)			point2->setTo(((Float)819.2),(int)0);
HXLINE( 132)			{
HXLINE( 132)				Float px1 = point2->x;
HXDLIN( 132)				Float py1 = point2->y;
HXDLIN( 132)				Float _hx_tmp2 = (px1 * matrix->a);
HXDLIN( 132)				point2->x = ((_hx_tmp2 + (py1 * matrix->c)) + matrix->tx);
HXDLIN( 132)				Float _hx_tmp3 = (px1 * matrix->b);
HXDLIN( 132)				point2->y = ((_hx_tmp3 + (py1 * matrix->d)) + matrix->ty);
            			}
HXLINE( 134)			 ::openfl::geom::Point point1 = point;
HXDLIN( 134)			point1->x = (point1->x + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 135)			 ::openfl::geom::Point point21 = point2;
HXDLIN( 135)			point21->x = (point21->x + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 136)			 ::openfl::geom::Point point3 = point;
HXDLIN( 136)			point3->y = (point3->y + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 137)			 ::openfl::geom::Point point22 = point2;
HXDLIN( 137)			point22->y = (point22->y + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 139)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createLinear(point->x,point->y,point2->x,point2->y);
HXLINE( 124)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==(int)1) ){
HXLINE( 115)			point = ::openfl::geom::Point_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Point >();
HXLINE( 116)			point->setTo(((Float)1638.4),(int)0);
HXLINE( 117)			{
HXLINE( 117)				Float px2 = point->x;
HXDLIN( 117)				Float py2 = point->y;
HXDLIN( 117)				Float _hx_tmp4 = (px2 * matrix->a);
HXDLIN( 117)				point->x = ((_hx_tmp4 + (py2 * matrix->c)) + matrix->tx);
HXDLIN( 117)				Float _hx_tmp5 = (px2 * matrix->b);
HXDLIN( 117)				point->y = ((_hx_tmp5 + (py2 * matrix->d)) + matrix->ty);
            			}
HXLINE( 119)			Float x = (matrix->tx + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->x);
HXLINE( 120)			Float y = (matrix->ty + ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds->y);
HXLINE( 122)			pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRadial(x,y,(int)0,x,y,::Math_obj::abs(((Float)(point->x - matrix->tx) / (Float)(int)2)));
HXLINE( 113)			goto _hx_goto_1;
            		}
            		_hx_goto_1:;
HXLINE( 143)		int rgb;
HXDLIN( 143)		Float alpha;
HXDLIN( 143)		Float r;
HXDLIN( 143)		Float g;
HXDLIN( 143)		Float b;
HXDLIN( 143)		Float ratio;
HXLINE( 145)		{
HXLINE( 145)			int _g1 = (int)0;
HXDLIN( 145)			int _g = colors->get_length();
HXDLIN( 145)			while((_g1 < _g)){
HXLINE( 145)				_g1 = (_g1 + (int)1);
HXDLIN( 145)				int i = (_g1 - (int)1);
HXLINE( 147)				rgb = ( (int)(colors->__get(i)) );
HXLINE( 148)				alpha = ( (Float)(alphas->__get(i)) );
HXLINE( 149)				r = ((Float)hx::UShr(((int)rgb & (int)(int)16711680),(int)16) / (Float)(int)255);
HXLINE( 150)				g = ((Float)hx::UShr(((int)rgb & (int)(int)65280),(int)8) / (Float)(int)255);
HXLINE( 151)				b = ((Float)((int)rgb & (int)(int)255) / (Float)(int)255);
HXLINE( 153)				ratio = ((Float)ratios->__get(i) / (Float)(int)255);
HXLINE( 154)				if ((ratio < (int)0)) {
HXLINE( 154)					ratio = (int)0;
            				}
HXLINE( 155)				if ((ratio > (int)1)) {
HXLINE( 155)					ratio = (int)1;
            				}
HXLINE( 157)				::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::addColorStopRGBA(pattern,ratio,r,g,b,alpha);
            			}
            		}
HXLINE( 161)		if (hx::IsNotNull( point )) {
HXLINE( 161)			::openfl::geom::Point_obj::_hx___pool->release(point);
            		}
HXLINE( 162)		if (hx::IsNotNull( point2 )) {
HXLINE( 162)			::openfl::geom::Point_obj::_hx___pool->release(point2);
            		}
HXLINE( 163)		if (releaseMatrix) {
HXLINE( 163)			::openfl::geom::Matrix_obj::_hx___pool->release(matrix);
            		}
HXLINE( 165)		 ::lime::math::Matrix3 mat = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_matrix(pattern);
HXLINE( 167)		mat->tx = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x;
HXLINE( 168)		mat->ty = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y;
HXLINE( 170)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(pattern,mat);
HXLINE( 172)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(CairoGraphics_obj,createGradientPattern,return )

 ::Dynamic CairoGraphics_obj::createImagePattern( ::openfl::display::BitmapData bitmapFill, ::openfl::geom::Matrix matrix,bool bitmapRepeat,bool smooth){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_177_createImagePattern)
HXLINE( 179)		 ::Dynamic pattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createForSurface(bitmapFill->getSurface());
HXLINE( 180)		int _hx_tmp;
HXDLIN( 180)		bool _hx_tmp1;
HXDLIN( 180)		if (smooth) {
HXLINE( 180)			_hx_tmp1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::allowSmoothing;
            		}
            		else {
HXLINE( 180)			_hx_tmp1 = false;
            		}
HXDLIN( 180)		if (_hx_tmp1) {
HXLINE( 180)			_hx_tmp = (int)1;
            		}
            		else {
HXLINE( 180)			_hx_tmp = (int)3;
            		}
HXDLIN( 180)		::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_filter(pattern,_hx_tmp);
HXLINE( 182)		if (bitmapRepeat) {
HXLINE( 184)			::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(pattern,(int)1);
            		}
HXLINE( 188)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = matrix;
HXLINE( 190)		return pattern;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,createImagePattern,return )

void CairoGraphics_obj::drawRoundRect(Float x,Float y,Float width,Float height,Float ellipseWidth, ::Dynamic ellipseHeight){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_195_drawRoundRect)
HXLINE( 197)		if (hx::IsNull( ellipseHeight )) {
HXLINE( 197)			ellipseHeight = ellipseWidth;
            		}
HXLINE( 199)		ellipseWidth = (ellipseWidth * ((Float)0.5));
HXLINE( 200)		ellipseHeight = (ellipseHeight * ((Float)0.5));
HXLINE( 202)		if ((ellipseWidth > ((Float)width / (Float)(int)2))) {
HXLINE( 202)			ellipseWidth = ((Float)width / (Float)(int)2);
            		}
HXLINE( 203)		if (hx::IsGreater( ellipseHeight,((Float)height / (Float)(int)2) )) {
HXLINE( 203)			ellipseHeight = ((Float)height / (Float)(int)2);
            		}
HXLINE( 205)		Float xe = (x + width);
HXDLIN( 205)		Float ye = (y + height);
HXDLIN( 205)		Float cx1 = (-(ellipseWidth) + (ellipseWidth * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::SIN45));
HXDLIN( 205)		Float cx2 = (-(ellipseWidth) + (ellipseWidth * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::TAN22));
HXDLIN( 205)		Float cy1 = (-(ellipseHeight) + (ellipseHeight * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::SIN45));
HXDLIN( 205)		Float cy2 = (-(ellipseHeight) + (ellipseHeight * ::openfl::_internal::renderer::cairo::CairoGraphics_obj::TAN22));
HXLINE( 212)		 ::lime::graphics::cairo::Cairo _hx_tmp = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 212)		_hx_tmp->moveTo(xe,(ye - ellipseHeight));
HXLINE( 213)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(xe,(ye + cy2),(xe + cx1),(ye + cy1));
HXLINE( 214)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((xe + cx2),ye,(xe - ellipseWidth),ye);
HXLINE( 215)		 ::lime::graphics::cairo::Cairo _hx_tmp1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 215)		_hx_tmp1->lineTo((x + ellipseWidth),ye);
HXLINE( 216)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((x - cx2),ye,(x - cx1),(ye + cy1));
HXLINE( 217)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(x,(ye + cy2),x,(ye - ellipseHeight));
HXLINE( 218)		 ::lime::graphics::cairo::Cairo _hx_tmp2 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 218)		_hx_tmp2->lineTo(x,(y + ellipseHeight));
HXLINE( 219)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(x,(y - cy2),(x - cx1),(y - cy1));
HXLINE( 220)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((x - cx2),y,(x + ellipseWidth),y);
HXLINE( 221)		 ::lime::graphics::cairo::Cairo _hx_tmp3 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 221)		_hx_tmp3->lineTo((xe - ellipseWidth),y);
HXLINE( 222)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo((xe + cx2),y,(xe + cx1),(y - cy1));
HXLINE( 223)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(xe,(y - cy2),xe,(y + ellipseHeight));
HXLINE( 224)		 ::lime::graphics::cairo::Cairo _hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 224)		_hx_tmp4->lineTo(xe,(ye - ellipseHeight));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,drawRoundRect,(void))

void CairoGraphics_obj::endFill(){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_229_endFill)
HXLINE( 231)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 232)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::playCommands(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands,false);
HXLINE( 233)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endFill,(void))

void CairoGraphics_obj::endStroke(){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_238_endStroke)
HXLINE( 240)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 241)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::playCommands(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands,true);
HXLINE( 242)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE( 243)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(CairoGraphics_obj,endStroke,(void))

bool CairoGraphics_obj::hitTest( ::openfl::display::Graphics graphics,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_250_hitTest)
HXLINE( 253)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics = graphics;
HXLINE( 254)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE( 256)		bool _hx_tmp;
HXDLIN( 256)		bool _hx_tmp1;
HXDLIN( 256)		bool _hx_tmp2;
HXDLIN( 256)		bool _hx_tmp3;
HXDLIN( 256)		if ((graphics->_hx___commands->get_length() != (int)0)) {
HXLINE( 256)			_hx_tmp3 = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE( 256)			_hx_tmp3 = true;
            		}
HXDLIN( 256)		if (!(_hx_tmp3)) {
HXLINE( 256)			_hx_tmp2 = (::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width == (int)0);
            		}
            		else {
HXLINE( 256)			_hx_tmp2 = true;
            		}
HXDLIN( 256)		if (!(_hx_tmp2)) {
HXLINE( 256)			_hx_tmp1 = (::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height == (int)0);
            		}
            		else {
HXLINE( 256)			_hx_tmp1 = true;
            		}
HXDLIN( 256)		if (!(_hx_tmp1)) {
HXLINE( 256)			_hx_tmp = !(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->contains(x,y));
            		}
            		else {
HXLINE( 256)			_hx_tmp = true;
            		}
HXDLIN( 256)		if (_hx_tmp) {
HXLINE( 258)			return false;
            		}
            		else {
HXLINE( 262)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting = true;
HXLINE( 264)			x = (x - ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x);
HXLINE( 265)			y = (y - ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y);
HXLINE( 267)			if (hx::IsNull( graphics->_hx___cairo )) {
HXLINE( 269)				int bitmap = ::Math_obj::floor(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width);
HXDLIN( 269)				 ::openfl::display::BitmapData bitmap1 =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,bitmap,::Math_obj::floor(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height),true,(int)0);
HXLINE( 270)				 ::Dynamic surface = bitmap1->getSurface();
HXLINE( 271)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface);
            			}
HXLINE( 276)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE( 278)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
HXLINE( 279)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
HXLINE( 281)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE( 282)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
HXLINE( 284)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = null();
HXLINE( 285)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = null();
HXLINE( 287)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 288)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
HXLINE( 290)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE( 292)			{
HXLINE( 292)				int _g = (int)0;
HXDLIN( 292)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN( 292)				while((_g < _g1->length)){
HXLINE( 292)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN( 292)					_g = (_g + (int)1);
HXLINE( 294)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)0: case (int)1: case (int)2: case (int)3: {
HXLINE( 361)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE( 363)							bool _hx_tmp4;
HXDLIN( 363)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 363)								_hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 363)								_hx_tmp4 = false;
            							}
HXDLIN( 363)							if (_hx_tmp4) {
HXLINE( 365)								data->destroy();
HXLINE( 366)								return true;
            							}
HXLINE( 370)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE( 372)							bool _hx_tmp5;
HXDLIN( 372)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 372)								_hx_tmp5 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 372)								_hx_tmp5 = false;
            							}
HXDLIN( 372)							if (_hx_tmp5) {
HXLINE( 374)								data->destroy();
HXLINE( 375)								return true;
            							}
HXLINE( 379)							if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE( 381)								{
HXLINE( 381)									 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN( 381)									switch((int)(_hx_getEnumValueIndex(_g2))){
            										case (int)0: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN( 381)											data1->oPos = (data1->oPos + (int)2);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN( 381)											data2->bPos = (data2->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN( 381)											data3->iPos = (data3->iPos + (int)1);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN( 381)											data4->fPos = (data4->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN( 381)											data5->oPos = (data5->oPos + (int)4);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN( 381)											data6->iiPos = (data6->iiPos + (int)2);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN( 381)											data7->ffPos = (data7->ffPos + (int)1);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN( 381)											data8->fPos = (data8->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN( 381)											data9->oPos = (data9->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN( 381)											data10->fPos = (data10->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN( 381)											data11->fPos = (data11->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN( 381)											data12->fPos = (data12->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN( 381)											data13->fPos = (data13->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN( 381)											data14->oPos = (data14->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN( 381)											data15->fPos = (data15->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN( 381)											data16->fPos = (data16->fPos + (int)5);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN( 381)											data17->oPos = (data17->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN( 381)											data18->oPos = (data18->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN( 381)											data19->oPos = (data19->oPos + (int)2);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN( 381)											data20->bPos = (data20->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN( 381)											data21->oPos = (data21->oPos + (int)4);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN( 381)											data22->iiPos = (data22->iiPos + (int)2);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN( 381)											data23->ffPos = (data23->ffPos + (int)1);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN( 381)											data24->fPos = (data24->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN( 381)											data25->oPos = (data25->oPos + (int)4);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN( 381)											data26->iPos = (data26->iPos + (int)1);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN( 381)											data27->fPos = (data27->fPos + (int)2);
HXDLIN( 381)											 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN( 381)											data28->bPos = (data28->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN( 381)											data29->fPos = (data29->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN( 381)											data30->fPos = (data30->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN( 381)											data31->oPos = (data31->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE( 381)											 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN( 381)											data32->oPos = (data32->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 381)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 381)								 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN( 381)								 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE( 382)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp6 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 382)								 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 382)								::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN( 382)								 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN( 382)								bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN( 382)								::Array< bool > c5 = c->buffer->b;
HXDLIN( 382)								_hx_tmp6->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE( 383)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp7 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 383)								 ::openfl::display::BitmapData c6 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 383)								::cpp::VirtualArray c7 = c->buffer->o;
HXDLIN( 383)								 ::openfl::geom::Matrix c8 = ( ( ::openfl::geom::Matrix)(c7->__get((c->oPos + (int)1))) );
HXDLIN( 383)								bool c9 = c->buffer->b->__get(c->bPos);
HXDLIN( 383)								::Array< bool > c10 = c->buffer->b;
HXDLIN( 383)								_hx_tmp7->beginBitmapFill(c6,c8,c9,c10->__get((c->bPos + (int)1)));
            							}
            							else {
HXLINE( 385)								if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE( 387)									{
HXLINE( 387)										 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN( 387)										switch((int)(_hx_getEnumValueIndex(_g3))){
            											case (int)0: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN( 387)												data33->oPos = (data33->oPos + (int)2);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN( 387)												data34->bPos = (data34->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN( 387)												data35->iPos = (data35->iPos + (int)1);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN( 387)												data36->fPos = (data36->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN( 387)												data37->oPos = (data37->oPos + (int)4);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN( 387)												data38->iiPos = (data38->iiPos + (int)2);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN( 387)												data39->ffPos = (data39->ffPos + (int)1);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN( 387)												data40->fPos = (data40->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN( 387)												data41->oPos = (data41->oPos + (int)1);
            											}
            											break;
            											case (int)4: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN( 387)												data42->fPos = (data42->fPos + (int)6);
            											}
            											break;
            											case (int)5: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN( 387)												data43->fPos = (data43->fPos + (int)4);
            											}
            											break;
            											case (int)6: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN( 387)												data44->fPos = (data44->fPos + (int)3);
            											}
            											break;
            											case (int)7: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN( 387)												data45->fPos = (data45->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN( 387)												data46->oPos = (data46->oPos + (int)3);
            											}
            											break;
            											case (int)9: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN( 387)												data47->fPos = (data47->fPos + (int)4);
            											}
            											break;
            											case (int)10: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN( 387)												data48->fPos = (data48->fPos + (int)5);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN( 387)												data49->oPos = (data49->oPos + (int)1);
            											}
            											break;
            											case (int)12: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN( 387)												data50->oPos = (data50->oPos + (int)4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN( 387)												data51->oPos = (data51->oPos + (int)2);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN( 387)												data52->bPos = (data52->bPos + (int)2);
            											}
            											break;
            											case (int)15: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN( 387)												data53->oPos = (data53->oPos + (int)4);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN( 387)												data54->iiPos = (data54->iiPos + (int)2);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN( 387)												data55->ffPos = (data55->ffPos + (int)1);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN( 387)												data56->fPos = (data56->fPos + (int)1);
            											}
            											break;
            											case (int)16: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN( 387)												data57->oPos = (data57->oPos + (int)4);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN( 387)												data58->iPos = (data58->iPos + (int)1);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN( 387)												data59->fPos = (data59->fPos + (int)2);
HXDLIN( 387)												 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN( 387)												data60->bPos = (data60->bPos + (int)1);
            											}
            											break;
            											case (int)17: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN( 387)												data61->fPos = (data61->fPos + (int)2);
            											}
            											break;
            											case (int)18: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN( 387)												data62->fPos = (data62->fPos + (int)2);
            											}
            											break;
            											case (int)19: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN( 387)												data63->oPos = (data63->oPos + (int)1);
            											}
            											break;
            											case (int)20: {
HXLINE( 387)												 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN( 387)												data64->oPos = (data64->oPos + (int)1);
            											}
            											break;
            											case (int)21: case (int)22: {
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE( 387)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 387)									 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN( 387)									 ::openfl::_internal::renderer::DrawCommandReader c11 = this2;
HXLINE( 388)									::Array< ::Dynamic> c12 = c11->buffer->ii;
HXDLIN( 388)									::cpp::VirtualArray c13 = c11->buffer->o;
HXDLIN( 388)									::cpp::VirtualArray c14 = c11->buffer->o;
HXDLIN( 388)									::cpp::VirtualArray c15 = c11->buffer->o;
HXDLIN( 388)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c12->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->__get((c11->oPos + (int)1))) ),c14->__get((c11->oPos + (int)2)),c15->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
HXLINE( 389)									::Array< ::Dynamic> c16 = c11->buffer->ii;
HXDLIN( 389)									::cpp::VirtualArray c17 = c11->buffer->o;
HXDLIN( 389)									::cpp::VirtualArray c18 = c11->buffer->o;
HXDLIN( 389)									::cpp::VirtualArray c19 = c11->buffer->o;
HXDLIN( 389)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c16->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c17->__get((c11->oPos + (int)1))) ),c18->__get((c11->oPos + (int)2)),c19->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
            								}
            								else {
HXLINE( 391)									if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn() )) {
HXLINE( 393)										{
HXLINE( 393)											 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN( 393)											switch((int)(_hx_getEnumValueIndex(_g4))){
            												case (int)0: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN( 393)													data65->oPos = (data65->oPos + (int)2);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN( 393)													data66->bPos = (data66->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN( 393)													data67->iPos = (data67->iPos + (int)1);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN( 393)													data68->fPos = (data68->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN( 393)													data69->oPos = (data69->oPos + (int)4);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN( 393)													data70->iiPos = (data70->iiPos + (int)2);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN( 393)													data71->ffPos = (data71->ffPos + (int)1);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN( 393)													data72->fPos = (data72->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN( 393)													data73->oPos = (data73->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN( 393)													data74->fPos = (data74->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN( 393)													data75->fPos = (data75->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN( 393)													data76->fPos = (data76->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN( 393)													data77->fPos = (data77->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN( 393)													data78->oPos = (data78->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN( 393)													data79->fPos = (data79->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN( 393)													data80->fPos = (data80->fPos + (int)5);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN( 393)													data81->oPos = (data81->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN( 393)													data82->oPos = (data82->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN( 393)													data83->oPos = (data83->oPos + (int)2);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN( 393)													data84->bPos = (data84->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN( 393)													data85->oPos = (data85->oPos + (int)4);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN( 393)													data86->iiPos = (data86->iiPos + (int)2);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN( 393)													data87->ffPos = (data87->ffPos + (int)1);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN( 393)													data88->fPos = (data88->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN( 393)													data89->oPos = (data89->oPos + (int)4);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN( 393)													data90->iPos = (data90->iPos + (int)1);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN( 393)													data91->fPos = (data91->fPos + (int)2);
HXDLIN( 393)													 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN( 393)													data92->bPos = (data92->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN( 393)													data93->fPos = (data93->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN( 393)													data94->fPos = (data94->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN( 393)													data95->oPos = (data95->oPos + (int)1);
            												}
            												break;
            												case (int)20: {
HXLINE( 393)													 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN( 393)													data96->oPos = (data96->oPos + (int)1);
            												}
            												break;
            												case (int)21: case (int)22: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE( 393)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN( 393)										 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN( 393)										 ::openfl::_internal::renderer::DrawCommandReader c20 = this3;
HXLINE( 394)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
HXLINE( 395)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
            									}
            									else {
HXLINE( 399)										{
HXLINE( 399)											 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN( 399)											switch((int)(_hx_getEnumValueIndex(_g5))){
            												case (int)0: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN( 399)													data97->oPos = (data97->oPos + (int)2);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN( 399)													data98->bPos = (data98->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN( 399)													data99->iPos = (data99->iPos + (int)1);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN( 399)													data100->fPos = (data100->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN( 399)													data101->oPos = (data101->oPos + (int)4);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN( 399)													data102->iiPos = (data102->iiPos + (int)2);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN( 399)													data103->ffPos = (data103->ffPos + (int)1);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN( 399)													data104->fPos = (data104->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN( 399)													data105->oPos = (data105->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN( 399)													data106->fPos = (data106->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN( 399)													data107->fPos = (data107->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN( 399)													data108->fPos = (data108->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN( 399)													data109->fPos = (data109->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN( 399)													data110->oPos = (data110->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN( 399)													data111->fPos = (data111->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN( 399)													data112->fPos = (data112->fPos + (int)5);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN( 399)													data113->oPos = (data113->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN( 399)													data114->oPos = (data114->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN( 399)													data115->oPos = (data115->oPos + (int)2);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN( 399)													data116->bPos = (data116->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN( 399)													data117->oPos = (data117->oPos + (int)4);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN( 399)													data118->iiPos = (data118->iiPos + (int)2);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN( 399)													data119->ffPos = (data119->ffPos + (int)1);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN( 399)													data120->fPos = (data120->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN( 399)													data121->oPos = (data121->oPos + (int)4);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN( 399)													data122->iPos = (data122->iPos + (int)1);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN( 399)													data123->fPos = (data123->fPos + (int)2);
HXDLIN( 399)													 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN( 399)													data124->bPos = (data124->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN( 399)													data125->fPos = (data125->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN( 399)													data126->fPos = (data126->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN( 399)													data127->oPos = (data127->oPos + (int)1);
            												}
            												break;
            												case (int)20: {
HXLINE( 399)													 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN( 399)													data128->oPos = (data128->oPos + (int)1);
            												}
            												break;
            												case (int)21: case (int)22: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE( 399)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 399)										 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN( 399)										 ::openfl::_internal::renderer::DrawCommandReader c21 = this4;
HXLINE( 400)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp8 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 400)										_hx_tmp8->beginFill(c21->buffer->i->__get(c21->iPos),(int)1);
HXLINE( 401)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 401)										_hx_tmp9->beginFill(c21->buffer->i->__get(c21->iPos),(int)1);
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE( 298)							{
HXLINE( 298)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN( 298)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN( 298)										data129->oPos = (data129->oPos + (int)2);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN( 298)										data130->bPos = (data130->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN( 298)										data131->iPos = (data131->iPos + (int)1);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN( 298)										data132->fPos = (data132->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN( 298)										data133->oPos = (data133->oPos + (int)4);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN( 298)										data134->iiPos = (data134->iiPos + (int)2);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN( 298)										data135->ffPos = (data135->ffPos + (int)1);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN( 298)										data136->fPos = (data136->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN( 298)										data137->oPos = (data137->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN( 298)										data138->fPos = (data138->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN( 298)										data139->fPos = (data139->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN( 298)										data140->fPos = (data140->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN( 298)										data141->fPos = (data141->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN( 298)										data142->oPos = (data142->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN( 298)										data143->fPos = (data143->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN( 298)										data144->fPos = (data144->fPos + (int)5);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN( 298)										data145->oPos = (data145->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN( 298)										data146->oPos = (data146->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN( 298)										data147->oPos = (data147->oPos + (int)2);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN( 298)										data148->bPos = (data148->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN( 298)										data149->oPos = (data149->oPos + (int)4);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN( 298)										data150->iiPos = (data150->iiPos + (int)2);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN( 298)										data151->ffPos = (data151->ffPos + (int)1);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN( 298)										data152->fPos = (data152->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN( 298)										data153->oPos = (data153->oPos + (int)4);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN( 298)										data154->iPos = (data154->iPos + (int)1);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN( 298)										data155->fPos = (data155->fPos + (int)2);
HXDLIN( 298)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN( 298)										data156->bPos = (data156->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN( 298)										data157->fPos = (data157->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN( 298)										data158->fPos = (data158->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN( 298)										data159->oPos = (data159->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 298)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN( 298)										data160->oPos = (data160->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 298)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 298)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN( 298)							 ::openfl::_internal::renderer::DrawCommandReader c22 = this5;
HXLINE( 299)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp10 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 299)							Float c23 = c22->buffer->f->__get(c22->fPos);
HXDLIN( 299)							::Array< Float > c24 = c22->buffer->f;
HXDLIN( 299)							Float c25 = c24->__get((c22->fPos + (int)1));
HXDLIN( 299)							::Array< Float > c26 = c22->buffer->f;
HXDLIN( 299)							Float c27 = c26->__get((c22->fPos + (int)2));
HXDLIN( 299)							::Array< Float > c28 = c22->buffer->f;
HXDLIN( 299)							Float c29 = c28->__get((c22->fPos + (int)3));
HXDLIN( 299)							::Array< Float > c30 = c22->buffer->f;
HXDLIN( 299)							Float c31 = c30->__get((c22->fPos + (int)4));
HXDLIN( 299)							::Array< Float > c32 = c22->buffer->f;
HXDLIN( 299)							_hx_tmp10->cubicCurveTo(c23,c25,c27,c29,c31,c32->__get((c22->fPos + (int)5)));
HXLINE( 300)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp11 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 300)							Float c33 = c22->buffer->f->__get(c22->fPos);
HXDLIN( 300)							::Array< Float > c34 = c22->buffer->f;
HXDLIN( 300)							Float c35 = c34->__get((c22->fPos + (int)1));
HXDLIN( 300)							::Array< Float > c36 = c22->buffer->f;
HXDLIN( 300)							Float c37 = c36->__get((c22->fPos + (int)2));
HXDLIN( 300)							::Array< Float > c38 = c22->buffer->f;
HXDLIN( 300)							Float c39 = c38->__get((c22->fPos + (int)3));
HXDLIN( 300)							::Array< Float > c40 = c22->buffer->f;
HXDLIN( 300)							Float c41 = c40->__get((c22->fPos + (int)4));
HXDLIN( 300)							::Array< Float > c42 = c22->buffer->f;
HXDLIN( 300)							_hx_tmp11->cubicCurveTo(c33,c35,c37,c39,c41,c42->__get((c22->fPos + (int)5)));
            						}
            						break;
            						case (int)5: {
HXLINE( 304)							{
HXLINE( 304)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN( 304)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN( 304)										data161->oPos = (data161->oPos + (int)2);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN( 304)										data162->bPos = (data162->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN( 304)										data163->iPos = (data163->iPos + (int)1);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN( 304)										data164->fPos = (data164->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN( 304)										data165->oPos = (data165->oPos + (int)4);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN( 304)										data166->iiPos = (data166->iiPos + (int)2);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN( 304)										data167->ffPos = (data167->ffPos + (int)1);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN( 304)										data168->fPos = (data168->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN( 304)										data169->oPos = (data169->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN( 304)										data170->fPos = (data170->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN( 304)										data171->fPos = (data171->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN( 304)										data172->fPos = (data172->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN( 304)										data173->fPos = (data173->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN( 304)										data174->oPos = (data174->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN( 304)										data175->fPos = (data175->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN( 304)										data176->fPos = (data176->fPos + (int)5);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN( 304)										data177->oPos = (data177->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN( 304)										data178->oPos = (data178->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN( 304)										data179->oPos = (data179->oPos + (int)2);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN( 304)										data180->bPos = (data180->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN( 304)										data181->oPos = (data181->oPos + (int)4);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN( 304)										data182->iiPos = (data182->iiPos + (int)2);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN( 304)										data183->ffPos = (data183->ffPos + (int)1);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN( 304)										data184->fPos = (data184->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN( 304)										data185->oPos = (data185->oPos + (int)4);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN( 304)										data186->iPos = (data186->iPos + (int)1);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN( 304)										data187->fPos = (data187->fPos + (int)2);
HXDLIN( 304)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN( 304)										data188->bPos = (data188->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN( 304)										data189->fPos = (data189->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN( 304)										data190->fPos = (data190->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN( 304)										data191->oPos = (data191->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 304)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN( 304)										data192->oPos = (data192->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 304)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 304)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN( 304)							 ::openfl::_internal::renderer::DrawCommandReader c43 = this6;
HXLINE( 305)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 305)							Float c44 = c43->buffer->f->__get(c43->fPos);
HXDLIN( 305)							::Array< Float > c45 = c43->buffer->f;
HXDLIN( 305)							Float c46 = c45->__get((c43->fPos + (int)1));
HXDLIN( 305)							::Array< Float > c47 = c43->buffer->f;
HXDLIN( 305)							Float c48 = c47->__get((c43->fPos + (int)2));
HXDLIN( 305)							::Array< Float > c49 = c43->buffer->f;
HXDLIN( 305)							_hx_tmp12->curveTo(c44,c46,c48,c49->__get((c43->fPos + (int)3)));
HXLINE( 306)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 306)							Float c50 = c43->buffer->f->__get(c43->fPos);
HXDLIN( 306)							::Array< Float > c51 = c43->buffer->f;
HXDLIN( 306)							Float c52 = c51->__get((c43->fPos + (int)1));
HXDLIN( 306)							::Array< Float > c53 = c43->buffer->f;
HXDLIN( 306)							Float c54 = c53->__get((c43->fPos + (int)2));
HXDLIN( 306)							::Array< Float > c55 = c43->buffer->f;
HXDLIN( 306)							_hx_tmp13->curveTo(c50,c52,c54,c55->__get((c43->fPos + (int)3)));
            						}
            						break;
            						case (int)6: {
HXLINE( 407)							{
HXLINE( 407)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN( 407)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN( 407)										data193->oPos = (data193->oPos + (int)2);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN( 407)										data194->bPos = (data194->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN( 407)										data195->iPos = (data195->iPos + (int)1);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN( 407)										data196->fPos = (data196->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN( 407)										data197->oPos = (data197->oPos + (int)4);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN( 407)										data198->iiPos = (data198->iiPos + (int)2);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN( 407)										data199->ffPos = (data199->ffPos + (int)1);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN( 407)										data200->fPos = (data200->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN( 407)										data201->oPos = (data201->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN( 407)										data202->fPos = (data202->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN( 407)										data203->fPos = (data203->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN( 407)										data204->fPos = (data204->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN( 407)										data205->fPos = (data205->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN( 407)										data206->oPos = (data206->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN( 407)										data207->fPos = (data207->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN( 407)										data208->fPos = (data208->fPos + (int)5);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN( 407)										data209->oPos = (data209->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN( 407)										data210->oPos = (data210->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN( 407)										data211->oPos = (data211->oPos + (int)2);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN( 407)										data212->bPos = (data212->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN( 407)										data213->oPos = (data213->oPos + (int)4);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN( 407)										data214->iiPos = (data214->iiPos + (int)2);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN( 407)										data215->ffPos = (data215->ffPos + (int)1);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN( 407)										data216->fPos = (data216->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN( 407)										data217->oPos = (data217->oPos + (int)4);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN( 407)										data218->iPos = (data218->iPos + (int)1);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN( 407)										data219->fPos = (data219->fPos + (int)2);
HXDLIN( 407)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN( 407)										data220->bPos = (data220->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN( 407)										data221->fPos = (data221->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN( 407)										data222->fPos = (data222->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN( 407)										data223->oPos = (data223->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 407)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN( 407)										data224->oPos = (data224->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 407)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 407)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN( 407)							 ::openfl::_internal::renderer::DrawCommandReader c56 = this7;
HXLINE( 408)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 408)							Float c57 = c56->buffer->f->__get(c56->fPos);
HXDLIN( 408)							::Array< Float > c58 = c56->buffer->f;
HXDLIN( 408)							Float c59 = c58->__get((c56->fPos + (int)1));
HXDLIN( 408)							::Array< Float > c60 = c56->buffer->f;
HXDLIN( 408)							_hx_tmp14->drawCircle(c57,c59,c60->__get((c56->fPos + (int)2)));
HXLINE( 409)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 409)							Float c61 = c56->buffer->f->__get(c56->fPos);
HXDLIN( 409)							::Array< Float > c62 = c56->buffer->f;
HXDLIN( 409)							Float c63 = c62->__get((c56->fPos + (int)1));
HXDLIN( 409)							::Array< Float > c64 = c56->buffer->f;
HXDLIN( 409)							_hx_tmp15->drawCircle(c61,c63,c64->__get((c56->fPos + (int)2)));
            						}
            						break;
            						case (int)7: {
HXLINE( 413)							{
HXLINE( 413)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN( 413)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN( 413)										data225->oPos = (data225->oPos + (int)2);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN( 413)										data226->bPos = (data226->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN( 413)										data227->iPos = (data227->iPos + (int)1);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN( 413)										data228->fPos = (data228->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN( 413)										data229->oPos = (data229->oPos + (int)4);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN( 413)										data230->iiPos = (data230->iiPos + (int)2);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN( 413)										data231->ffPos = (data231->ffPos + (int)1);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN( 413)										data232->fPos = (data232->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN( 413)										data233->oPos = (data233->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN( 413)										data234->fPos = (data234->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN( 413)										data235->fPos = (data235->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN( 413)										data236->fPos = (data236->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN( 413)										data237->fPos = (data237->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN( 413)										data238->oPos = (data238->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN( 413)										data239->fPos = (data239->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN( 413)										data240->fPos = (data240->fPos + (int)5);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN( 413)										data241->oPos = (data241->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN( 413)										data242->oPos = (data242->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN( 413)										data243->oPos = (data243->oPos + (int)2);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN( 413)										data244->bPos = (data244->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN( 413)										data245->oPos = (data245->oPos + (int)4);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN( 413)										data246->iiPos = (data246->iiPos + (int)2);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN( 413)										data247->ffPos = (data247->ffPos + (int)1);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN( 413)										data248->fPos = (data248->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN( 413)										data249->oPos = (data249->oPos + (int)4);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN( 413)										data250->iPos = (data250->iPos + (int)1);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN( 413)										data251->fPos = (data251->fPos + (int)2);
HXDLIN( 413)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN( 413)										data252->bPos = (data252->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN( 413)										data253->fPos = (data253->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN( 413)										data254->fPos = (data254->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN( 413)										data255->oPos = (data255->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 413)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN( 413)										data256->oPos = (data256->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 413)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 413)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN( 413)							 ::openfl::_internal::renderer::DrawCommandReader c65 = this8;
HXLINE( 414)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 414)							Float c66 = c65->buffer->f->__get(c65->fPos);
HXDLIN( 414)							::Array< Float > c67 = c65->buffer->f;
HXDLIN( 414)							Float c68 = c67->__get((c65->fPos + (int)1));
HXDLIN( 414)							::Array< Float > c69 = c65->buffer->f;
HXDLIN( 414)							Float c70 = c69->__get((c65->fPos + (int)2));
HXDLIN( 414)							::Array< Float > c71 = c65->buffer->f;
HXDLIN( 414)							_hx_tmp16->drawEllipse(c66,c68,c70,c71->__get((c65->fPos + (int)3)));
HXLINE( 415)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp17 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 415)							Float c72 = c65->buffer->f->__get(c65->fPos);
HXDLIN( 415)							::Array< Float > c73 = c65->buffer->f;
HXDLIN( 415)							Float c74 = c73->__get((c65->fPos + (int)1));
HXDLIN( 415)							::Array< Float > c75 = c65->buffer->f;
HXDLIN( 415)							Float c76 = c75->__get((c65->fPos + (int)2));
HXDLIN( 415)							::Array< Float > c77 = c65->buffer->f;
HXDLIN( 415)							_hx_tmp17->drawEllipse(c72,c74,c76,c77->__get((c65->fPos + (int)3)));
            						}
            						break;
            						case (int)9: {
HXLINE( 419)							{
HXLINE( 419)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN( 419)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN( 419)										data257->oPos = (data257->oPos + (int)2);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN( 419)										data258->bPos = (data258->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN( 419)										data259->iPos = (data259->iPos + (int)1);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN( 419)										data260->fPos = (data260->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN( 419)										data261->oPos = (data261->oPos + (int)4);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN( 419)										data262->iiPos = (data262->iiPos + (int)2);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN( 419)										data263->ffPos = (data263->ffPos + (int)1);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN( 419)										data264->fPos = (data264->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN( 419)										data265->oPos = (data265->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN( 419)										data266->fPos = (data266->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN( 419)										data267->fPos = (data267->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN( 419)										data268->fPos = (data268->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN( 419)										data269->fPos = (data269->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN( 419)										data270->oPos = (data270->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN( 419)										data271->fPos = (data271->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN( 419)										data272->fPos = (data272->fPos + (int)5);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN( 419)										data273->oPos = (data273->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN( 419)										data274->oPos = (data274->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN( 419)										data275->oPos = (data275->oPos + (int)2);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN( 419)										data276->bPos = (data276->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN( 419)										data277->oPos = (data277->oPos + (int)4);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN( 419)										data278->iiPos = (data278->iiPos + (int)2);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN( 419)										data279->ffPos = (data279->ffPos + (int)1);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN( 419)										data280->fPos = (data280->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN( 419)										data281->oPos = (data281->oPos + (int)4);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN( 419)										data282->iPos = (data282->iPos + (int)1);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN( 419)										data283->fPos = (data283->fPos + (int)2);
HXDLIN( 419)										 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN( 419)										data284->bPos = (data284->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN( 419)										data285->fPos = (data285->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN( 419)										data286->fPos = (data286->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN( 419)										data287->oPos = (data287->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 419)										 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN( 419)										data288->oPos = (data288->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 419)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 419)							 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN( 419)							 ::openfl::_internal::renderer::DrawCommandReader c78 = this9;
HXLINE( 420)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 420)							Float c79 = c78->buffer->f->__get(c78->fPos);
HXDLIN( 420)							::Array< Float > c80 = c78->buffer->f;
HXDLIN( 420)							Float c81 = c80->__get((c78->fPos + (int)1));
HXDLIN( 420)							::Array< Float > c82 = c78->buffer->f;
HXDLIN( 420)							Float c83 = c82->__get((c78->fPos + (int)2));
HXDLIN( 420)							::Array< Float > c84 = c78->buffer->f;
HXDLIN( 420)							_hx_tmp18->drawRect(c79,c81,c83,c84->__get((c78->fPos + (int)3)));
HXLINE( 421)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 421)							Float c85 = c78->buffer->f->__get(c78->fPos);
HXDLIN( 421)							::Array< Float > c86 = c78->buffer->f;
HXDLIN( 421)							Float c87 = c86->__get((c78->fPos + (int)1));
HXDLIN( 421)							::Array< Float > c88 = c78->buffer->f;
HXDLIN( 421)							Float c89 = c88->__get((c78->fPos + (int)2));
HXDLIN( 421)							::Array< Float > c90 = c78->buffer->f;
HXDLIN( 421)							_hx_tmp19->drawRect(c85,c87,c89,c90->__get((c78->fPos + (int)3)));
            						}
            						break;
            						case (int)10: {
HXLINE( 425)							{
HXLINE( 425)								 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN( 425)								switch((int)(_hx_getEnumValueIndex(_g11))){
            									case (int)0: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN( 425)										data289->oPos = (data289->oPos + (int)2);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN( 425)										data290->bPos = (data290->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN( 425)										data291->iPos = (data291->iPos + (int)1);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN( 425)										data292->fPos = (data292->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN( 425)										data293->oPos = (data293->oPos + (int)4);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN( 425)										data294->iiPos = (data294->iiPos + (int)2);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN( 425)										data295->ffPos = (data295->ffPos + (int)1);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN( 425)										data296->fPos = (data296->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN( 425)										data297->oPos = (data297->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN( 425)										data298->fPos = (data298->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN( 425)										data299->fPos = (data299->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN( 425)										data300->fPos = (data300->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN( 425)										data301->fPos = (data301->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN( 425)										data302->oPos = (data302->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN( 425)										data303->fPos = (data303->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN( 425)										data304->fPos = (data304->fPos + (int)5);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN( 425)										data305->oPos = (data305->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN( 425)										data306->oPos = (data306->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN( 425)										data307->oPos = (data307->oPos + (int)2);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN( 425)										data308->bPos = (data308->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN( 425)										data309->oPos = (data309->oPos + (int)4);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN( 425)										data310->iiPos = (data310->iiPos + (int)2);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN( 425)										data311->ffPos = (data311->ffPos + (int)1);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN( 425)										data312->fPos = (data312->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN( 425)										data313->oPos = (data313->oPos + (int)4);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN( 425)										data314->iPos = (data314->iPos + (int)1);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN( 425)										data315->fPos = (data315->fPos + (int)2);
HXDLIN( 425)										 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN( 425)										data316->bPos = (data316->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN( 425)										data317->fPos = (data317->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN( 425)										data318->fPos = (data318->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN( 425)										data319->oPos = (data319->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 425)										 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 425)										data320->oPos = (data320->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 425)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 425)							 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN( 425)							 ::openfl::_internal::renderer::DrawCommandReader c91 = this10;
HXLINE( 426)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 426)							Float c92 = c91->buffer->f->__get(c91->fPos);
HXDLIN( 426)							::Array< Float > c93 = c91->buffer->f;
HXDLIN( 426)							Float c94 = c93->__get((c91->fPos + (int)1));
HXDLIN( 426)							::Array< Float > c95 = c91->buffer->f;
HXDLIN( 426)							Float c96 = c95->__get((c91->fPos + (int)2));
HXDLIN( 426)							::Array< Float > c97 = c91->buffer->f;
HXDLIN( 426)							Float c98 = c97->__get((c91->fPos + (int)3));
HXDLIN( 426)							::Array< Float > c99 = c91->buffer->f;
HXDLIN( 426)							_hx_tmp20->drawRoundRect(c92,c94,c96,c98,c99->__get((c91->fPos + (int)4)),c91->buffer->o->__get(c91->oPos));
HXLINE( 427)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 427)							Float c100 = c91->buffer->f->__get(c91->fPos);
HXDLIN( 427)							::Array< Float > c101 = c91->buffer->f;
HXDLIN( 427)							Float c102 = c101->__get((c91->fPos + (int)1));
HXDLIN( 427)							::Array< Float > c103 = c91->buffer->f;
HXDLIN( 427)							Float c104 = c103->__get((c91->fPos + (int)2));
HXDLIN( 427)							::Array< Float > c105 = c91->buffer->f;
HXDLIN( 427)							Float c106 = c105->__get((c91->fPos + (int)3));
HXDLIN( 427)							::Array< Float > c107 = c91->buffer->f;
HXDLIN( 427)							_hx_tmp21->drawRoundRect(c100,c102,c104,c106,c107->__get((c91->fPos + (int)4)),c91->buffer->o->__get(c91->oPos));
            						}
            						break;
            						case (int)13: {
HXLINE( 337)							{
HXLINE( 337)								{
HXLINE( 337)									 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN( 337)									switch((int)(_hx_getEnumValueIndex(_g12))){
            										case (int)0: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 337)											data321->oPos = (data321->oPos + (int)2);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 337)											data322->bPos = (data322->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 337)											data323->iPos = (data323->iPos + (int)1);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 337)											data324->fPos = (data324->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 337)											data325->oPos = (data325->oPos + (int)4);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 337)											data326->iiPos = (data326->iiPos + (int)2);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 337)											data327->ffPos = (data327->ffPos + (int)1);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 337)											data328->fPos = (data328->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 337)											data329->oPos = (data329->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 337)											data330->fPos = (data330->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 337)											data331->fPos = (data331->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 337)											data332->fPos = (data332->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 337)											data333->fPos = (data333->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 337)											data334->oPos = (data334->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 337)											data335->fPos = (data335->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 337)											data336->fPos = (data336->fPos + (int)5);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 337)											data337->oPos = (data337->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 337)											data338->oPos = (data338->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 337)											data339->oPos = (data339->oPos + (int)2);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 337)											data340->bPos = (data340->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 337)											data341->oPos = (data341->oPos + (int)4);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 337)											data342->iiPos = (data342->iiPos + (int)2);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 337)											data343->ffPos = (data343->ffPos + (int)1);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 337)											data344->fPos = (data344->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 337)											data345->oPos = (data345->oPos + (int)4);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 337)											data346->iPos = (data346->iPos + (int)1);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 337)											data347->fPos = (data347->fPos + (int)2);
HXDLIN( 337)											 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 337)											data348->bPos = (data348->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 337)											data349->fPos = (data349->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 337)											data350->fPos = (data350->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 337)											data351->oPos = (data351->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE( 337)											 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 337)											data352->oPos = (data352->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 337)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN( 337)								 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
            							}
HXLINE( 338)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE( 340)							bool _hx_tmp22;
HXDLIN( 340)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 340)								_hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            							}
            							else {
HXLINE( 340)								_hx_tmp22 = false;
            							}
HXDLIN( 340)							if (_hx_tmp22) {
HXLINE( 342)								data->destroy();
HXLINE( 343)								return true;
            							}
HXLINE( 347)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE( 349)							bool _hx_tmp23;
HXDLIN( 349)							if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 349)								_hx_tmp23 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            							}
            							else {
HXLINE( 349)								_hx_tmp23 = false;
            							}
HXDLIN( 349)							if (_hx_tmp23) {
HXLINE( 351)								data->destroy();
HXLINE( 352)								return true;
            							}
HXLINE( 356)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE( 357)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            						}
            						break;
            						case (int)14: {
HXLINE( 332)							{
HXLINE( 332)								 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 332)								switch((int)(_hx_getEnumValueIndex(_g13))){
            									case (int)0: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 332)										data353->oPos = (data353->oPos + (int)2);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 332)										data354->bPos = (data354->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 332)										data355->iPos = (data355->iPos + (int)1);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 332)										data356->fPos = (data356->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 332)										data357->oPos = (data357->oPos + (int)4);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 332)										data358->iiPos = (data358->iiPos + (int)2);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 332)										data359->ffPos = (data359->ffPos + (int)1);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 332)										data360->fPos = (data360->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 332)										data361->oPos = (data361->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 332)										data362->fPos = (data362->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 332)										data363->fPos = (data363->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 332)										data364->fPos = (data364->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 332)										data365->fPos = (data365->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 332)										data366->oPos = (data366->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 332)										data367->fPos = (data367->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 332)										data368->fPos = (data368->fPos + (int)5);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 332)										data369->oPos = (data369->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 332)										data370->oPos = (data370->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 332)										data371->oPos = (data371->oPos + (int)2);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 332)										data372->bPos = (data372->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 332)										data373->oPos = (data373->oPos + (int)4);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 332)										data374->iiPos = (data374->iiPos + (int)2);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 332)										data375->ffPos = (data375->ffPos + (int)1);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 332)										data376->fPos = (data376->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 332)										data377->oPos = (data377->oPos + (int)4);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 332)										data378->iPos = (data378->iPos + (int)1);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 332)										data379->fPos = (data379->fPos + (int)2);
HXDLIN( 332)										 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 332)										data380->bPos = (data380->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 332)										data381->fPos = (data381->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 332)										data382->fPos = (data382->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 332)										data383->oPos = (data383->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 332)										 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 332)										data384->oPos = (data384->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 332)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 332)							 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 332)							 ::openfl::_internal::renderer::DrawCommandReader c108 = this12;
HXLINE( 333)							::cpp::VirtualArray c109 = c108->buffer->o;
HXDLIN( 333)							::Array< bool > c110 = c108->buffer->b;
HXDLIN( 333)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c108->buffer->o->__get(c108->oPos)) ),( ( ::openfl::geom::Matrix)(c109->__get((c108->oPos + (int)1))) ),c108->buffer->b->__get(c108->bPos),c110->__get((c108->bPos + (int)1)));
            						}
            						break;
            						case (int)15: {
HXLINE( 327)							{
HXLINE( 327)								 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 327)								switch((int)(_hx_getEnumValueIndex(_g14))){
            									case (int)0: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 327)										data385->oPos = (data385->oPos + (int)2);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 327)										data386->bPos = (data386->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 327)										data387->iPos = (data387->iPos + (int)1);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 327)										data388->fPos = (data388->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 327)										data389->oPos = (data389->oPos + (int)4);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 327)										data390->iiPos = (data390->iiPos + (int)2);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 327)										data391->ffPos = (data391->ffPos + (int)1);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 327)										data392->fPos = (data392->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 327)										data393->oPos = (data393->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 327)										data394->fPos = (data394->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 327)										data395->fPos = (data395->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 327)										data396->fPos = (data396->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 327)										data397->fPos = (data397->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 327)										data398->oPos = (data398->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 327)										data399->fPos = (data399->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 327)										data400->fPos = (data400->fPos + (int)5);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 327)										data401->oPos = (data401->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 327)										data402->oPos = (data402->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 327)										data403->oPos = (data403->oPos + (int)2);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 327)										data404->bPos = (data404->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 327)										data405->oPos = (data405->oPos + (int)4);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 327)										data406->iiPos = (data406->iiPos + (int)2);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 327)										data407->ffPos = (data407->ffPos + (int)1);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 327)										data408->fPos = (data408->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 327)										data409->oPos = (data409->oPos + (int)4);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 327)										data410->iPos = (data410->iPos + (int)1);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 327)										data411->fPos = (data411->fPos + (int)2);
HXDLIN( 327)										 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 327)										data412->bPos = (data412->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 327)										data413->fPos = (data413->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 327)										data414->fPos = (data414->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 327)										data415->oPos = (data415->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 327)										 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 327)										data416->oPos = (data416->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 327)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 327)							 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 327)							 ::openfl::_internal::renderer::DrawCommandReader c111 = this13;
HXLINE( 328)							::Array< ::Dynamic> c112 = c111->buffer->ii;
HXDLIN( 328)							::cpp::VirtualArray c113 = c111->buffer->o;
HXDLIN( 328)							::cpp::VirtualArray c114 = c111->buffer->o;
HXDLIN( 328)							::cpp::VirtualArray c115 = c111->buffer->o;
HXDLIN( 328)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineGradientStyle(c111->buffer->o->__get(c111->oPos),c111->buffer->ii->__get(c111->iiPos).StaticCast< ::Array< int > >(),c111->buffer->ff->__get(c111->ffPos).StaticCast< ::Array< Float > >(),c112->__get((c111->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c113->__get((c111->oPos + (int)1))) ),c114->__get((c111->oPos + (int)2)),c115->__get((c111->oPos + (int)3)),c111->buffer->f->__get(c111->fPos));
            						}
            						break;
            						case (int)16: {
HXLINE( 322)							{
HXLINE( 322)								 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 322)								switch((int)(_hx_getEnumValueIndex(_g15))){
            									case (int)0: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 322)										data417->oPos = (data417->oPos + (int)2);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 322)										data418->bPos = (data418->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 322)										data419->iPos = (data419->iPos + (int)1);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 322)										data420->fPos = (data420->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 322)										data421->oPos = (data421->oPos + (int)4);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 322)										data422->iiPos = (data422->iiPos + (int)2);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 322)										data423->ffPos = (data423->ffPos + (int)1);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 322)										data424->fPos = (data424->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 322)										data425->oPos = (data425->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 322)										data426->fPos = (data426->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 322)										data427->fPos = (data427->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 322)										data428->fPos = (data428->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 322)										data429->fPos = (data429->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 322)										data430->oPos = (data430->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 322)										data431->fPos = (data431->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 322)										data432->fPos = (data432->fPos + (int)5);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 322)										data433->oPos = (data433->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 322)										data434->oPos = (data434->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 322)										data435->oPos = (data435->oPos + (int)2);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 322)										data436->bPos = (data436->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 322)										data437->oPos = (data437->oPos + (int)4);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 322)										data438->iiPos = (data438->iiPos + (int)2);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 322)										data439->ffPos = (data439->ffPos + (int)1);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 322)										data440->fPos = (data440->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 322)										data441->oPos = (data441->oPos + (int)4);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 322)										data442->iPos = (data442->iPos + (int)1);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 322)										data443->fPos = (data443->fPos + (int)2);
HXDLIN( 322)										 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 322)										data444->bPos = (data444->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 322)										data445->fPos = (data445->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 322)										data446->fPos = (data446->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 322)										data447->oPos = (data447->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 322)										 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 322)										data448->oPos = (data448->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 322)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 322)							 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 322)							 ::openfl::_internal::renderer::DrawCommandReader c116 = this14;
HXLINE( 323)							::cpp::VirtualArray c117 = c116->buffer->o;
HXDLIN( 323)							::cpp::VirtualArray c118 = c116->buffer->o;
HXDLIN( 323)							::cpp::VirtualArray c119 = c116->buffer->o;
HXDLIN( 323)							::Array< Float > c120 = c116->buffer->f;
HXDLIN( 323)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineStyle(c116->buffer->o->__get(c116->oPos),c116->buffer->i->__get(c116->iPos),(int)1,c116->buffer->b->__get(c116->bPos),c117->__get((c116->oPos + (int)1)),c118->__get((c116->oPos + (int)2)),c119->__get((c116->oPos + (int)3)),c120->__get((c116->fPos + (int)1)));
            						}
            						break;
            						case (int)17: {
HXLINE( 310)							{
HXLINE( 310)								 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 310)								switch((int)(_hx_getEnumValueIndex(_g16))){
            									case (int)0: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 310)										data449->oPos = (data449->oPos + (int)2);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 310)										data450->bPos = (data450->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 310)										data451->iPos = (data451->iPos + (int)1);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 310)										data452->fPos = (data452->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 310)										data453->oPos = (data453->oPos + (int)4);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 310)										data454->iiPos = (data454->iiPos + (int)2);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 310)										data455->ffPos = (data455->ffPos + (int)1);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 310)										data456->fPos = (data456->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 310)										data457->oPos = (data457->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 310)										data458->fPos = (data458->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 310)										data459->fPos = (data459->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 310)										data460->fPos = (data460->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 310)										data461->fPos = (data461->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 310)										data462->oPos = (data462->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 310)										data463->fPos = (data463->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 310)										data464->fPos = (data464->fPos + (int)5);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN( 310)										data465->oPos = (data465->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN( 310)										data466->oPos = (data466->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN( 310)										data467->oPos = (data467->oPos + (int)2);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN( 310)										data468->bPos = (data468->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN( 310)										data469->oPos = (data469->oPos + (int)4);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN( 310)										data470->iiPos = (data470->iiPos + (int)2);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN( 310)										data471->ffPos = (data471->ffPos + (int)1);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN( 310)										data472->fPos = (data472->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN( 310)										data473->oPos = (data473->oPos + (int)4);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN( 310)										data474->iPos = (data474->iPos + (int)1);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN( 310)										data475->fPos = (data475->fPos + (int)2);
HXDLIN( 310)										 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN( 310)										data476->bPos = (data476->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN( 310)										data477->fPos = (data477->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN( 310)										data478->fPos = (data478->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN( 310)										data479->oPos = (data479->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 310)										 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN( 310)										data480->oPos = (data480->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 310)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 310)							 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 310)							 ::openfl::_internal::renderer::DrawCommandReader c121 = this15;
HXLINE( 311)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp24 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 311)							Float c122 = c121->buffer->f->__get(c121->fPos);
HXDLIN( 311)							::Array< Float > c123 = c121->buffer->f;
HXDLIN( 311)							_hx_tmp24->lineTo(c122,c123->__get((c121->fPos + (int)1)));
HXLINE( 312)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp25 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 312)							Float c124 = c121->buffer->f->__get(c121->fPos);
HXDLIN( 312)							::Array< Float > c125 = c121->buffer->f;
HXDLIN( 312)							_hx_tmp25->lineTo(c124,c125->__get((c121->fPos + (int)1)));
            						}
            						break;
            						case (int)18: {
HXLINE( 316)							{
HXLINE( 316)								 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 316)								switch((int)(_hx_getEnumValueIndex(_g17))){
            									case (int)0: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN( 316)										data481->oPos = (data481->oPos + (int)2);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN( 316)										data482->bPos = (data482->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN( 316)										data483->iPos = (data483->iPos + (int)1);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN( 316)										data484->fPos = (data484->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN( 316)										data485->oPos = (data485->oPos + (int)4);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN( 316)										data486->iiPos = (data486->iiPos + (int)2);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN( 316)										data487->ffPos = (data487->ffPos + (int)1);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN( 316)										data488->fPos = (data488->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN( 316)										data489->oPos = (data489->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN( 316)										data490->fPos = (data490->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN( 316)										data491->fPos = (data491->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN( 316)										data492->fPos = (data492->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN( 316)										data493->fPos = (data493->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN( 316)										data494->oPos = (data494->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN( 316)										data495->fPos = (data495->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN( 316)										data496->fPos = (data496->fPos + (int)5);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN( 316)										data497->oPos = (data497->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN( 316)										data498->oPos = (data498->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN( 316)										data499->oPos = (data499->oPos + (int)2);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN( 316)										data500->bPos = (data500->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN( 316)										data501->oPos = (data501->oPos + (int)4);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN( 316)										data502->iiPos = (data502->iiPos + (int)2);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN( 316)										data503->ffPos = (data503->ffPos + (int)1);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN( 316)										data504->fPos = (data504->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN( 316)										data505->oPos = (data505->oPos + (int)4);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN( 316)										data506->iPos = (data506->iPos + (int)1);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN( 316)										data507->fPos = (data507->fPos + (int)2);
HXDLIN( 316)										 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN( 316)										data508->bPos = (data508->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN( 316)										data509->fPos = (data509->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN( 316)										data510->fPos = (data510->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN( 316)										data511->oPos = (data511->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 316)										 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN( 316)										data512->oPos = (data512->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 316)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 316)							 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN( 316)							 ::openfl::_internal::renderer::DrawCommandReader c126 = this16;
HXLINE( 317)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp26 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN( 317)							Float c127 = c126->buffer->f->__get(c126->fPos);
HXDLIN( 317)							::Array< Float > c128 = c126->buffer->f;
HXDLIN( 317)							_hx_tmp26->moveTo(c127,c128->__get((c126->fPos + (int)1)));
HXLINE( 318)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp27 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN( 318)							Float c129 = c126->buffer->f->__get(c126->fPos);
HXDLIN( 318)							::Array< Float > c130 = c126->buffer->f;
HXDLIN( 318)							_hx_tmp27->moveTo(c129,c130->__get((c126->fPos + (int)1)));
            						}
            						break;
            						case (int)21: {
HXLINE( 431)							{
HXLINE( 431)								{
HXLINE( 431)									 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN( 431)									switch((int)(_hx_getEnumValueIndex(_g18))){
            										case (int)0: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN( 431)											data513->oPos = (data513->oPos + (int)2);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN( 431)											data514->bPos = (data514->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN( 431)											data515->iPos = (data515->iPos + (int)1);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN( 431)											data516->fPos = (data516->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN( 431)											data517->oPos = (data517->oPos + (int)4);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN( 431)											data518->iiPos = (data518->iiPos + (int)2);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN( 431)											data519->ffPos = (data519->ffPos + (int)1);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN( 431)											data520->fPos = (data520->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN( 431)											data521->oPos = (data521->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN( 431)											data522->fPos = (data522->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN( 431)											data523->fPos = (data523->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN( 431)											data524->fPos = (data524->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN( 431)											data525->fPos = (data525->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN( 431)											data526->oPos = (data526->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN( 431)											data527->fPos = (data527->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN( 431)											data528->fPos = (data528->fPos + (int)5);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN( 431)											data529->oPos = (data529->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN( 431)											data530->oPos = (data530->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN( 431)											data531->oPos = (data531->oPos + (int)2);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN( 431)											data532->bPos = (data532->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN( 431)											data533->oPos = (data533->oPos + (int)4);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN( 431)											data534->iiPos = (data534->iiPos + (int)2);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN( 431)											data535->ffPos = (data535->ffPos + (int)1);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN( 431)											data536->fPos = (data536->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN( 431)											data537->oPos = (data537->oPos + (int)4);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN( 431)											data538->iPos = (data538->iPos + (int)1);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN( 431)											data539->fPos = (data539->fPos + (int)2);
HXDLIN( 431)											 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN( 431)											data540->bPos = (data540->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN( 431)											data541->fPos = (data541->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN( 431)											data542->fPos = (data542->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN( 431)											data543->oPos = (data543->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE( 431)											 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN( 431)											data544->oPos = (data544->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 431)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN( 431)								 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
            							}
HXLINE( 432)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
            						}
            						break;
            						case (int)22: {
HXLINE( 436)							{
HXLINE( 436)								{
HXLINE( 436)									 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN( 436)									switch((int)(_hx_getEnumValueIndex(_g19))){
            										case (int)0: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN( 436)											data545->oPos = (data545->oPos + (int)2);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN( 436)											data546->bPos = (data546->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN( 436)											data547->iPos = (data547->iPos + (int)1);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN( 436)											data548->fPos = (data548->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN( 436)											data549->oPos = (data549->oPos + (int)4);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN( 436)											data550->iiPos = (data550->iiPos + (int)2);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN( 436)											data551->ffPos = (data551->ffPos + (int)1);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN( 436)											data552->fPos = (data552->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN( 436)											data553->oPos = (data553->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN( 436)											data554->fPos = (data554->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN( 436)											data555->fPos = (data555->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN( 436)											data556->fPos = (data556->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN( 436)											data557->fPos = (data557->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN( 436)											data558->oPos = (data558->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN( 436)											data559->fPos = (data559->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN( 436)											data560->fPos = (data560->fPos + (int)5);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN( 436)											data561->oPos = (data561->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN( 436)											data562->oPos = (data562->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN( 436)											data563->oPos = (data563->oPos + (int)2);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN( 436)											data564->bPos = (data564->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN( 436)											data565->oPos = (data565->oPos + (int)4);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN( 436)											data566->iiPos = (data566->iiPos + (int)2);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN( 436)											data567->ffPos = (data567->ffPos + (int)1);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN( 436)											data568->fPos = (data568->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN( 436)											data569->oPos = (data569->oPos + (int)4);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN( 436)											data570->iPos = (data570->iPos + (int)1);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN( 436)											data571->fPos = (data571->fPos + (int)2);
HXDLIN( 436)											 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN( 436)											data572->bPos = (data572->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN( 436)											data573->fPos = (data573->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN( 436)											data574->fPos = (data574->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN( 436)											data575->oPos = (data575->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE( 436)											 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN( 436)											data576->oPos = (data576->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE( 436)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN( 436)								 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
            							}
HXLINE( 437)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)0);
            						}
            						break;
            						default:{
HXLINE( 441)							{
HXLINE( 441)								 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN( 441)								switch((int)(_hx_getEnumValueIndex(_g20))){
            									case (int)0: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN( 441)										data577->oPos = (data577->oPos + (int)2);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN( 441)										data578->bPos = (data578->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN( 441)										data579->iPos = (data579->iPos + (int)1);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN( 441)										data580->fPos = (data580->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN( 441)										data581->oPos = (data581->oPos + (int)4);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN( 441)										data582->iiPos = (data582->iiPos + (int)2);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN( 441)										data583->ffPos = (data583->ffPos + (int)1);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN( 441)										data584->fPos = (data584->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN( 441)										data585->oPos = (data585->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN( 441)										data586->fPos = (data586->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN( 441)										data587->fPos = (data587->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN( 441)										data588->fPos = (data588->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN( 441)										data589->fPos = (data589->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data590 = data;
HXDLIN( 441)										data590->oPos = (data590->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data591 = data;
HXDLIN( 441)										data591->fPos = (data591->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data592 = data;
HXDLIN( 441)										data592->fPos = (data592->fPos + (int)5);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data593 = data;
HXDLIN( 441)										data593->oPos = (data593->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data594 = data;
HXDLIN( 441)										data594->oPos = (data594->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data595 = data;
HXDLIN( 441)										data595->oPos = (data595->oPos + (int)2);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data596 = data;
HXDLIN( 441)										data596->bPos = (data596->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data597 = data;
HXDLIN( 441)										data597->oPos = (data597->oPos + (int)4);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data598 = data;
HXDLIN( 441)										data598->iiPos = (data598->iiPos + (int)2);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data599 = data;
HXDLIN( 441)										data599->ffPos = (data599->ffPos + (int)1);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data600 = data;
HXDLIN( 441)										data600->fPos = (data600->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data601 = data;
HXDLIN( 441)										data601->oPos = (data601->oPos + (int)4);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data602 = data;
HXDLIN( 441)										data602->iPos = (data602->iPos + (int)1);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data603 = data;
HXDLIN( 441)										data603->fPos = (data603->fPos + (int)2);
HXDLIN( 441)										 ::openfl::_internal::renderer::DrawCommandReader data604 = data;
HXDLIN( 441)										data604->bPos = (data604->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data605 = data;
HXDLIN( 441)										data605->fPos = (data605->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data606 = data;
HXDLIN( 441)										data606->fPos = (data606->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data607 = data;
HXDLIN( 441)										data607->oPos = (data607->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE( 441)										 ::openfl::_internal::renderer::DrawCommandReader data608 = data;
HXDLIN( 441)										data608->oPos = (data608->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE( 441)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE( 447)			bool hitTest = false;
HXLINE( 449)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->get_length() > (int)0)) {
HXLINE( 451)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
            			}
HXLINE( 455)			bool _hx_tmp28;
HXDLIN( 455)			if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE( 455)				_hx_tmp28 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inFill(x,y);
            			}
            			else {
HXLINE( 455)				_hx_tmp28 = false;
            			}
HXDLIN( 455)			if (_hx_tmp28) {
HXLINE( 457)				hitTest = true;
            			}
HXLINE( 461)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->get_length() > (int)0)) {
HXLINE( 463)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
            			}
HXLINE( 467)			bool _hx_tmp29;
HXDLIN( 467)			if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke) {
HXLINE( 467)				_hx_tmp29 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->inStroke(x,y);
            			}
            			else {
HXLINE( 467)				_hx_tmp29 = false;
            			}
HXDLIN( 467)			if (_hx_tmp29) {
HXLINE( 469)				hitTest = true;
            			}
HXLINE( 473)			data->destroy();
HXLINE( 475)			return hitTest;
            		}
HXLINE( 256)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(CairoGraphics_obj,hitTest,return )

bool CairoGraphics_obj::isCCW(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_489_isCCW)
HXDLIN( 489)		return ((((x2 - x1) * (y3 - y1)) - ((y2 - y1) * (x3 - x1))) < (int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(CairoGraphics_obj,isCCW,return )

 ::Dynamic CairoGraphics_obj::normalizeUVT( ::openfl::_Vector::FloatVector uvt,hx::Null< bool >  __o_skipT){
bool skipT = __o_skipT.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_494_normalizeUVT)
HXLINE( 496)		Float max = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 497)		Float tmp = ::Math_obj::NEGATIVE_INFINITY;
HXLINE( 498)		int len = uvt->get_length();
HXLINE( 500)		{
HXLINE( 500)			int _g1 = (int)1;
HXDLIN( 500)			int _g = (len + (int)1);
HXDLIN( 500)			while((_g1 < _g)){
HXLINE( 500)				_g1 = (_g1 + (int)1);
HXDLIN( 500)				int t = (_g1 - (int)1);
HXLINE( 502)				bool _hx_tmp;
HXDLIN( 502)				if (skipT) {
HXLINE( 502)					_hx_tmp = (hx::Mod(t,(int)3) == (int)0);
            				}
            				else {
HXLINE( 502)					_hx_tmp = false;
            				}
HXDLIN( 502)				if (_hx_tmp) {
HXLINE( 504)					continue;
            				}
HXLINE( 508)				tmp = uvt->get((t - (int)1));
HXLINE( 510)				if ((max < tmp)) {
HXLINE( 512)					max = tmp;
            				}
            			}
            		}
HXLINE( 518)		if (!(skipT)) {
HXLINE( 520)			return  ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("max",a4,0a,53,00),max)
            				->setFixed(1,HX_("uvt",f3,2e,59,00),uvt));
            		}
HXLINE( 524)		int length = null();
HXDLIN( 524)		bool fixed = null();
HXDLIN( 524)		 ::openfl::_Vector::FloatVector result =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length,fixed,null(),true);
HXLINE( 526)		{
HXLINE( 526)			int _g11 = (int)1;
HXDLIN( 526)			int _g2 = (len + (int)1);
HXDLIN( 526)			while((_g11 < _g2)){
HXLINE( 526)				_g11 = (_g11 + (int)1);
HXDLIN( 526)				int t1 = (_g11 - (int)1);
HXLINE( 528)				bool _hx_tmp1;
HXDLIN( 528)				if (skipT) {
HXLINE( 528)					_hx_tmp1 = (hx::Mod(t1,(int)3) == (int)0);
            				}
            				else {
HXLINE( 528)					_hx_tmp1 = false;
            				}
HXDLIN( 528)				if (_hx_tmp1) {
HXLINE( 530)					continue;
            				}
HXLINE( 534)				result->push(uvt->get((t1 - (int)1)));
            			}
            		}
HXLINE( 538)		return  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("max",a4,0a,53,00),max)
            			->setFixed(1,HX_("uvt",f3,2e,59,00),result));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,normalizeUVT,return )

void CairoGraphics_obj::playCommands( ::openfl::_internal::renderer::DrawCommandBuffer commands,hx::Null< bool >  __o_stroke){
bool stroke = __o_stroke.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_543_playCommands)
HXLINE( 545)		if ((commands->get_length() == (int)0)) {
HXLINE( 545)			return;
            		}
HXLINE( 547)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___bounds;
HXLINE( 549)		Float offsetX = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x;
HXLINE( 550)		Float offsetY = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y;
HXLINE( 552)		Float positionX = ((Float)0.0);
HXLINE( 553)		Float positionY = ((Float)0.0);
HXLINE( 555)		bool closeGap = false;
HXLINE( 556)		Float startX = ((Float)0.0);
HXLINE( 557)		Float startY = ((Float)0.0);
HXLINE( 558)		bool setStart = false;
HXLINE( 560)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
HXLINE( 561)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_antialias((int)3);
HXLINE( 563)		bool hasPath = false;
HXLINE( 565)		 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,commands);
HXLINE( 567)		Float x;
HXDLIN( 567)		Float y;
HXDLIN( 567)		Float width;
HXDLIN( 567)		Float height;
HXDLIN( 567)		Float kappa = ((Float).5522848);
HXDLIN( 567)		Float ox;
HXDLIN( 567)		Float oy;
HXDLIN( 567)		Float xe;
HXDLIN( 567)		Float ye;
HXDLIN( 567)		Float xm;
HXDLIN( 567)		Float ym;
HXDLIN( 567)		Float r;
HXDLIN( 567)		Float g;
HXDLIN( 567)		Float b;
HXLINE( 569)		{
HXLINE( 569)			int _g = (int)0;
HXDLIN( 569)			::Array< ::Dynamic> _g1 = commands->types;
HXDLIN( 569)			while((_g < _g1->length)){
HXLINE( 569)				 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN( 569)				_g = (_g + (int)1);
HXLINE( 571)				switch((int)(_hx_getEnumValueIndex(type))){
            					case (int)0: {
HXLINE( 764)						{
HXLINE( 764)							 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN( 764)							switch((int)(_hx_getEnumValueIndex(_g2))){
            								case (int)0: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN( 764)									data1->oPos = (data1->oPos + (int)2);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN( 764)									data2->bPos = (data2->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN( 764)									data3->iPos = (data3->iPos + (int)1);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN( 764)									data4->fPos = (data4->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN( 764)									data5->oPos = (data5->oPos + (int)4);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN( 764)									data6->iiPos = (data6->iiPos + (int)2);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN( 764)									data7->ffPos = (data7->ffPos + (int)1);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN( 764)									data8->fPos = (data8->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN( 764)									data9->oPos = (data9->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN( 764)									data10->fPos = (data10->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN( 764)									data11->fPos = (data11->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN( 764)									data12->fPos = (data12->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN( 764)									data13->fPos = (data13->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN( 764)									data14->oPos = (data14->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN( 764)									data15->fPos = (data15->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN( 764)									data16->fPos = (data16->fPos + (int)5);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN( 764)									data17->oPos = (data17->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN( 764)									data18->oPos = (data18->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN( 764)									data19->oPos = (data19->oPos + (int)2);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN( 764)									data20->bPos = (data20->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN( 764)									data21->oPos = (data21->oPos + (int)4);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN( 764)									data22->iiPos = (data22->iiPos + (int)2);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN( 764)									data23->ffPos = (data23->ffPos + (int)1);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN( 764)									data24->fPos = (data24->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN( 764)									data25->oPos = (data25->oPos + (int)4);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN( 764)									data26->iPos = (data26->iPos + (int)1);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN( 764)									data27->fPos = (data27->fPos + (int)2);
HXDLIN( 764)									 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN( 764)									data28->bPos = (data28->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN( 764)									data29->fPos = (data29->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN( 764)									data30->fPos = (data30->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN( 764)									data31->oPos = (data31->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 764)									 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN( 764)									data32->oPos = (data32->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 764)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN( 764)						 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN( 764)						 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE( 765)						 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN( 765)						::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN( 765)						 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN( 765)						bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN( 765)						::Array< bool > c5 = c->buffer->b;
HXDLIN( 765)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE( 767)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXLINE( 768)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapRepeat = c->buffer->b->__get(c->bPos);
HXLINE( 770)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            					}
            					break;
            					case (int)1: {
HXLINE( 774)						{
HXLINE( 774)							 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN( 774)							switch((int)(_hx_getEnumValueIndex(_g3))){
            								case (int)0: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN( 774)									data33->oPos = (data33->oPos + (int)2);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN( 774)									data34->bPos = (data34->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN( 774)									data35->iPos = (data35->iPos + (int)1);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN( 774)									data36->fPos = (data36->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN( 774)									data37->oPos = (data37->oPos + (int)4);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN( 774)									data38->iiPos = (data38->iiPos + (int)2);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN( 774)									data39->ffPos = (data39->ffPos + (int)1);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN( 774)									data40->fPos = (data40->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN( 774)									data41->oPos = (data41->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN( 774)									data42->fPos = (data42->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN( 774)									data43->fPos = (data43->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN( 774)									data44->fPos = (data44->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN( 774)									data45->fPos = (data45->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN( 774)									data46->oPos = (data46->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN( 774)									data47->fPos = (data47->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN( 774)									data48->fPos = (data48->fPos + (int)5);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN( 774)									data49->oPos = (data49->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN( 774)									data50->oPos = (data50->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN( 774)									data51->oPos = (data51->oPos + (int)2);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN( 774)									data52->bPos = (data52->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN( 774)									data53->oPos = (data53->oPos + (int)4);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN( 774)									data54->iiPos = (data54->iiPos + (int)2);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN( 774)									data55->ffPos = (data55->ffPos + (int)1);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN( 774)									data56->fPos = (data56->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN( 774)									data57->oPos = (data57->oPos + (int)4);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN( 774)									data58->iPos = (data58->iPos + (int)1);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN( 774)									data59->fPos = (data59->fPos + (int)2);
HXDLIN( 774)									 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN( 774)									data60->bPos = (data60->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN( 774)									data61->fPos = (data61->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN( 774)									data62->fPos = (data62->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN( 774)									data63->oPos = (data63->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 774)									 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN( 774)									data64->oPos = (data64->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 774)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN( 774)						 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN( 774)						 ::openfl::_internal::renderer::DrawCommandReader c6 = this2;
HXLINE( 775)						if ((c6->buffer->f->__get(c6->fPos) < ((Float)0.005))) {
HXLINE( 777)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
            						}
            						else {
HXLINE( 781)							if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern )) {
HXLINE( 783)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = null();
            							}
HXLINE( 787)							Float _hx_tmp = ((Float)hx::UShr(((int)c6->buffer->i->__get(c6->iPos) & (int)(int)16711680),(int)16) / (Float)(int)255);
HXDLIN( 787)							Float _hx_tmp1 = ((Float)hx::UShr(((int)c6->buffer->i->__get(c6->iPos) & (int)(int)65280),(int)8) / (Float)(int)255);
HXDLIN( 787)							Float _hx_tmp2 = ((Float)((int)c6->buffer->i->__get(c6->iPos) & (int)(int)255) / (Float)(int)255);
HXDLIN( 787)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(_hx_tmp,_hx_tmp1,_hx_tmp2,c6->buffer->f->__get(c6->fPos));
HXLINE( 788)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            						}
HXLINE( 792)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)2: {
HXLINE( 796)						{
HXLINE( 796)							 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN( 796)							switch((int)(_hx_getEnumValueIndex(_g4))){
            								case (int)0: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN( 796)									data65->oPos = (data65->oPos + (int)2);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN( 796)									data66->bPos = (data66->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN( 796)									data67->iPos = (data67->iPos + (int)1);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN( 796)									data68->fPos = (data68->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN( 796)									data69->oPos = (data69->oPos + (int)4);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN( 796)									data70->iiPos = (data70->iiPos + (int)2);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN( 796)									data71->ffPos = (data71->ffPos + (int)1);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN( 796)									data72->fPos = (data72->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN( 796)									data73->oPos = (data73->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN( 796)									data74->fPos = (data74->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN( 796)									data75->fPos = (data75->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN( 796)									data76->fPos = (data76->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN( 796)									data77->fPos = (data77->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN( 796)									data78->oPos = (data78->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN( 796)									data79->fPos = (data79->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN( 796)									data80->fPos = (data80->fPos + (int)5);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN( 796)									data81->oPos = (data81->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN( 796)									data82->oPos = (data82->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN( 796)									data83->oPos = (data83->oPos + (int)2);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN( 796)									data84->bPos = (data84->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN( 796)									data85->oPos = (data85->oPos + (int)4);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN( 796)									data86->iiPos = (data86->iiPos + (int)2);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN( 796)									data87->ffPos = (data87->ffPos + (int)1);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN( 796)									data88->fPos = (data88->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN( 796)									data89->oPos = (data89->oPos + (int)4);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN( 796)									data90->iPos = (data90->iPos + (int)1);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN( 796)									data91->fPos = (data91->fPos + (int)2);
HXDLIN( 796)									 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN( 796)									data92->bPos = (data92->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN( 796)									data93->fPos = (data93->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN( 796)									data94->fPos = (data94->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN( 796)									data95->oPos = (data95->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 796)									 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN( 796)									data96->oPos = (data96->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 796)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN( 796)						 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN( 796)						 ::openfl::_internal::renderer::DrawCommandReader c7 = this3;
HXLINE( 797)						if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern )) {
HXLINE( 799)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix = null();
            						}
HXLINE( 803)						::Array< ::Dynamic> c8 = c7->buffer->ii;
HXDLIN( 803)						::cpp::VirtualArray c9 = c7->buffer->o;
HXDLIN( 803)						::cpp::VirtualArray c10 = c7->buffer->o;
HXDLIN( 803)						::cpp::VirtualArray c11 = c7->buffer->o;
HXDLIN( 803)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createGradientPattern(c7->buffer->o->__get(c7->oPos),c7->buffer->ii->__get(c7->iiPos).StaticCast< ::Array< int > >(),c7->buffer->ff->__get(c7->ffPos).StaticCast< ::Array< Float > >(),c8->__get((c7->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c9->__get((c7->oPos + (int)1))) ),c10->__get((c7->oPos + (int)2)),c11->__get((c7->oPos + (int)3)),c7->buffer->f->__get(c7->fPos));
HXLINE( 805)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
HXLINE( 806)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
            					}
            					break;
            					case (int)3: {
HXLINE( 810)						{
HXLINE( 810)							 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN( 810)							switch((int)(_hx_getEnumValueIndex(_g5))){
            								case (int)0: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN( 810)									data97->oPos = (data97->oPos + (int)2);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN( 810)									data98->bPos = (data98->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN( 810)									data99->iPos = (data99->iPos + (int)1);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN( 810)									data100->fPos = (data100->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN( 810)									data101->oPos = (data101->oPos + (int)4);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN( 810)									data102->iiPos = (data102->iiPos + (int)2);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN( 810)									data103->ffPos = (data103->ffPos + (int)1);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN( 810)									data104->fPos = (data104->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN( 810)									data105->oPos = (data105->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN( 810)									data106->fPos = (data106->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN( 810)									data107->fPos = (data107->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN( 810)									data108->fPos = (data108->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN( 810)									data109->fPos = (data109->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN( 810)									data110->oPos = (data110->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN( 810)									data111->fPos = (data111->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN( 810)									data112->fPos = (data112->fPos + (int)5);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN( 810)									data113->oPos = (data113->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN( 810)									data114->oPos = (data114->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN( 810)									data115->oPos = (data115->oPos + (int)2);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN( 810)									data116->bPos = (data116->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN( 810)									data117->oPos = (data117->oPos + (int)4);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN( 810)									data118->iiPos = (data118->iiPos + (int)2);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN( 810)									data119->ffPos = (data119->ffPos + (int)1);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN( 810)									data120->fPos = (data120->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN( 810)									data121->oPos = (data121->oPos + (int)4);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN( 810)									data122->iPos = (data122->iPos + (int)1);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN( 810)									data123->fPos = (data123->fPos + (int)2);
HXDLIN( 810)									 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN( 810)									data124->bPos = (data124->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN( 810)									data125->fPos = (data125->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN( 810)									data126->fPos = (data126->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN( 810)									data127->oPos = (data127->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 810)									 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN( 810)									data128->oPos = (data128->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 810)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN( 810)						 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN( 810)						 ::openfl::_internal::renderer::DrawCommandReader c12 = this4;
HXLINE( 811)						 ::openfl::_internal::renderer::ShaderBuffer shaderBuffer = ( ( ::openfl::_internal::renderer::ShaderBuffer)(c12->buffer->o->__get(c12->oPos)) );
HXLINE( 813)						if ((shaderBuffer->inputCount > (int)0)) {
HXLINE( 815)							 ::openfl::display::BitmapData shaderBuffer1 = shaderBuffer->inputs->__get((int)0).StaticCast<  ::openfl::display::BitmapData >();
HXDLIN( 815)							bool _hx_tmp3 = hx::IsNotEq( shaderBuffer->inputWrap->__get((int)0),(int)0 );
HXDLIN( 815)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(shaderBuffer1,null(),_hx_tmp3,hx::IsNotEq( shaderBuffer->inputFilter->__get((int)0),(int)5 ));
HXLINE( 817)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = shaderBuffer->inputs->__get((int)0).StaticCast<  ::openfl::display::BitmapData >();
HXLINE( 818)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapRepeat = false;
HXLINE( 820)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = true;
            						}
            					}
            					break;
            					case (int)4: {
HXLINE( 575)						{
HXLINE( 575)							 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN( 575)							switch((int)(_hx_getEnumValueIndex(_g6))){
            								case (int)0: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN( 575)									data129->oPos = (data129->oPos + (int)2);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN( 575)									data130->bPos = (data130->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN( 575)									data131->iPos = (data131->iPos + (int)1);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN( 575)									data132->fPos = (data132->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN( 575)									data133->oPos = (data133->oPos + (int)4);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN( 575)									data134->iiPos = (data134->iiPos + (int)2);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN( 575)									data135->ffPos = (data135->ffPos + (int)1);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN( 575)									data136->fPos = (data136->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN( 575)									data137->oPos = (data137->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN( 575)									data138->fPos = (data138->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN( 575)									data139->fPos = (data139->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN( 575)									data140->fPos = (data140->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN( 575)									data141->fPos = (data141->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN( 575)									data142->oPos = (data142->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN( 575)									data143->fPos = (data143->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN( 575)									data144->fPos = (data144->fPos + (int)5);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN( 575)									data145->oPos = (data145->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN( 575)									data146->oPos = (data146->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN( 575)									data147->oPos = (data147->oPos + (int)2);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN( 575)									data148->bPos = (data148->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN( 575)									data149->oPos = (data149->oPos + (int)4);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN( 575)									data150->iiPos = (data150->iiPos + (int)2);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN( 575)									data151->ffPos = (data151->ffPos + (int)1);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN( 575)									data152->fPos = (data152->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN( 575)									data153->oPos = (data153->oPos + (int)4);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN( 575)									data154->iPos = (data154->iPos + (int)1);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN( 575)									data155->fPos = (data155->fPos + (int)2);
HXDLIN( 575)									 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN( 575)									data156->bPos = (data156->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN( 575)									data157->fPos = (data157->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN( 575)									data158->fPos = (data158->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN( 575)									data159->oPos = (data159->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 575)									 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN( 575)									data160->oPos = (data160->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 575)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN( 575)						 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN( 575)						 ::openfl::_internal::renderer::DrawCommandReader c13 = this5;
HXLINE( 576)						hasPath = true;
HXLINE( 577)						 ::lime::graphics::cairo::Cairo _hx_tmp4 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 577)						Float _hx_tmp5 = (c13->buffer->f->__get(c13->fPos) - offsetX);
HXDLIN( 577)						::Array< Float > c14 = c13->buffer->f;
HXDLIN( 577)						Float _hx_tmp6 = (c14->__get((c13->fPos + (int)1)) - offsetY);
HXDLIN( 577)						::Array< Float > c15 = c13->buffer->f;
HXDLIN( 577)						Float _hx_tmp7 = (c15->__get((c13->fPos + (int)2)) - offsetX);
HXDLIN( 577)						::Array< Float > c16 = c13->buffer->f;
HXDLIN( 577)						Float _hx_tmp8 = (c16->__get((c13->fPos + (int)3)) - offsetY);
HXDLIN( 577)						::Array< Float > c17 = c13->buffer->f;
HXDLIN( 577)						Float _hx_tmp9 = (c17->__get((c13->fPos + (int)4)) - offsetX);
HXDLIN( 577)						::Array< Float > c18 = c13->buffer->f;
HXDLIN( 577)						_hx_tmp4->curveTo(_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8,_hx_tmp9,(c18->__get((c13->fPos + (int)5)) - offsetY));
            					}
            					break;
            					case (int)5: {
HXLINE( 581)						{
HXLINE( 581)							 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN( 581)							switch((int)(_hx_getEnumValueIndex(_g7))){
            								case (int)0: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN( 581)									data161->oPos = (data161->oPos + (int)2);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN( 581)									data162->bPos = (data162->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN( 581)									data163->iPos = (data163->iPos + (int)1);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN( 581)									data164->fPos = (data164->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN( 581)									data165->oPos = (data165->oPos + (int)4);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN( 581)									data166->iiPos = (data166->iiPos + (int)2);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN( 581)									data167->ffPos = (data167->ffPos + (int)1);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN( 581)									data168->fPos = (data168->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN( 581)									data169->oPos = (data169->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN( 581)									data170->fPos = (data170->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN( 581)									data171->fPos = (data171->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN( 581)									data172->fPos = (data172->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN( 581)									data173->fPos = (data173->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN( 581)									data174->oPos = (data174->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN( 581)									data175->fPos = (data175->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN( 581)									data176->fPos = (data176->fPos + (int)5);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN( 581)									data177->oPos = (data177->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN( 581)									data178->oPos = (data178->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN( 581)									data179->oPos = (data179->oPos + (int)2);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN( 581)									data180->bPos = (data180->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN( 581)									data181->oPos = (data181->oPos + (int)4);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN( 581)									data182->iiPos = (data182->iiPos + (int)2);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN( 581)									data183->ffPos = (data183->ffPos + (int)1);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN( 581)									data184->fPos = (data184->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN( 581)									data185->oPos = (data185->oPos + (int)4);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN( 581)									data186->iPos = (data186->iPos + (int)1);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN( 581)									data187->fPos = (data187->fPos + (int)2);
HXDLIN( 581)									 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN( 581)									data188->bPos = (data188->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN( 581)									data189->fPos = (data189->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN( 581)									data190->fPos = (data190->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN( 581)									data191->oPos = (data191->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 581)									 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN( 581)									data192->oPos = (data192->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 581)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN( 581)						 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN( 581)						 ::openfl::_internal::renderer::DrawCommandReader c19 = this6;
HXLINE( 582)						hasPath = true;
HXLINE( 583)						Float _hx_tmp10 = (c19->buffer->f->__get(c19->fPos) - offsetX);
HXDLIN( 583)						::Array< Float > c20 = c19->buffer->f;
HXDLIN( 583)						Float _hx_tmp11 = (c20->__get((c19->fPos + (int)1)) - offsetY);
HXDLIN( 583)						::Array< Float > c21 = c19->buffer->f;
HXDLIN( 583)						Float _hx_tmp12 = (c21->__get((c19->fPos + (int)2)) - offsetX);
HXDLIN( 583)						::Array< Float > c22 = c19->buffer->f;
HXDLIN( 583)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(_hx_tmp10,_hx_tmp11,_hx_tmp12,(c22->__get((c19->fPos + (int)3)) - offsetY));
            					}
            					break;
            					case (int)6: {
HXLINE( 587)						{
HXLINE( 587)							 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN( 587)							switch((int)(_hx_getEnumValueIndex(_g8))){
            								case (int)0: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN( 587)									data193->oPos = (data193->oPos + (int)2);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN( 587)									data194->bPos = (data194->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN( 587)									data195->iPos = (data195->iPos + (int)1);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN( 587)									data196->fPos = (data196->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN( 587)									data197->oPos = (data197->oPos + (int)4);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN( 587)									data198->iiPos = (data198->iiPos + (int)2);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN( 587)									data199->ffPos = (data199->ffPos + (int)1);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN( 587)									data200->fPos = (data200->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN( 587)									data201->oPos = (data201->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN( 587)									data202->fPos = (data202->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN( 587)									data203->fPos = (data203->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN( 587)									data204->fPos = (data204->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN( 587)									data205->fPos = (data205->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN( 587)									data206->oPos = (data206->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN( 587)									data207->fPos = (data207->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN( 587)									data208->fPos = (data208->fPos + (int)5);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN( 587)									data209->oPos = (data209->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN( 587)									data210->oPos = (data210->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN( 587)									data211->oPos = (data211->oPos + (int)2);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN( 587)									data212->bPos = (data212->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN( 587)									data213->oPos = (data213->oPos + (int)4);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN( 587)									data214->iiPos = (data214->iiPos + (int)2);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN( 587)									data215->ffPos = (data215->ffPos + (int)1);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN( 587)									data216->fPos = (data216->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN( 587)									data217->oPos = (data217->oPos + (int)4);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN( 587)									data218->iPos = (data218->iPos + (int)1);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN( 587)									data219->fPos = (data219->fPos + (int)2);
HXDLIN( 587)									 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN( 587)									data220->bPos = (data220->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN( 587)									data221->fPos = (data221->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN( 587)									data222->fPos = (data222->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN( 587)									data223->oPos = (data223->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 587)									 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN( 587)									data224->oPos = (data224->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 587)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN( 587)						 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN( 587)						 ::openfl::_internal::renderer::DrawCommandReader c23 = this7;
HXLINE( 588)						hasPath = true;
HXLINE( 589)						 ::lime::graphics::cairo::Cairo _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 589)						Float _hx_tmp14 = (c23->buffer->f->__get(c23->fPos) - offsetX);
HXDLIN( 589)						::Array< Float > c24 = c23->buffer->f;
HXDLIN( 589)						Float _hx_tmp15 = (_hx_tmp14 + c24->__get((c23->fPos + (int)2)));
HXDLIN( 589)						::Array< Float > c25 = c23->buffer->f;
HXDLIN( 589)						_hx_tmp13->moveTo(_hx_tmp15,(c25->__get((c23->fPos + (int)1)) - offsetY));
HXLINE( 590)						 ::lime::graphics::cairo::Cairo _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 590)						Float _hx_tmp17 = (c23->buffer->f->__get(c23->fPos) - offsetX);
HXDLIN( 590)						::Array< Float > c26 = c23->buffer->f;
HXDLIN( 590)						Float _hx_tmp18 = (c26->__get((c23->fPos + (int)1)) - offsetY);
HXDLIN( 590)						::Array< Float > c27 = c23->buffer->f;
HXDLIN( 590)						Float c28 = c27->__get((c23->fPos + (int)2));
HXDLIN( 590)						_hx_tmp16->arc(_hx_tmp17,_hx_tmp18,c28,(int)0,(::Math_obj::PI * (int)2));
            					}
            					break;
            					case (int)7: {
HXLINE( 600)						{
HXLINE( 600)							 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN( 600)							switch((int)(_hx_getEnumValueIndex(_g9))){
            								case (int)0: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN( 600)									data225->oPos = (data225->oPos + (int)2);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN( 600)									data226->bPos = (data226->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN( 600)									data227->iPos = (data227->iPos + (int)1);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN( 600)									data228->fPos = (data228->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN( 600)									data229->oPos = (data229->oPos + (int)4);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN( 600)									data230->iiPos = (data230->iiPos + (int)2);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN( 600)									data231->ffPos = (data231->ffPos + (int)1);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN( 600)									data232->fPos = (data232->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN( 600)									data233->oPos = (data233->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN( 600)									data234->fPos = (data234->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN( 600)									data235->fPos = (data235->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN( 600)									data236->fPos = (data236->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN( 600)									data237->fPos = (data237->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN( 600)									data238->oPos = (data238->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN( 600)									data239->fPos = (data239->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN( 600)									data240->fPos = (data240->fPos + (int)5);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN( 600)									data241->oPos = (data241->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN( 600)									data242->oPos = (data242->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN( 600)									data243->oPos = (data243->oPos + (int)2);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN( 600)									data244->bPos = (data244->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN( 600)									data245->oPos = (data245->oPos + (int)4);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN( 600)									data246->iiPos = (data246->iiPos + (int)2);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN( 600)									data247->ffPos = (data247->ffPos + (int)1);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN( 600)									data248->fPos = (data248->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN( 600)									data249->oPos = (data249->oPos + (int)4);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN( 600)									data250->iPos = (data250->iPos + (int)1);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN( 600)									data251->fPos = (data251->fPos + (int)2);
HXDLIN( 600)									 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN( 600)									data252->bPos = (data252->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN( 600)									data253->fPos = (data253->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN( 600)									data254->fPos = (data254->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN( 600)									data255->oPos = (data255->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 600)									 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN( 600)									data256->oPos = (data256->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 600)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN( 600)						 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN( 600)						 ::openfl::_internal::renderer::DrawCommandReader c29 = this8;
HXLINE( 601)						hasPath = true;
HXLINE( 603)						x = c29->buffer->f->__get(c29->fPos);
HXLINE( 604)						::Array< Float > c30 = c29->buffer->f;
HXDLIN( 604)						y = c30->__get((c29->fPos + (int)1));
HXLINE( 605)						::Array< Float > c31 = c29->buffer->f;
HXDLIN( 605)						width = c31->__get((c29->fPos + (int)2));
HXLINE( 606)						::Array< Float > c32 = c29->buffer->f;
HXDLIN( 606)						height = c32->__get((c29->fPos + (int)3));
HXLINE( 608)						x = (x - offsetX);
HXLINE( 609)						y = (y - offsetY);
HXLINE( 611)						ox = (((Float)width / (Float)(int)2) * kappa);
HXLINE( 612)						oy = (((Float)height / (Float)(int)2) * kappa);
HXLINE( 613)						xe = (x + width);
HXLINE( 614)						ye = (y + height);
HXLINE( 615)						xm = (x + ((Float)width / (Float)(int)2));
HXLINE( 616)						ym = (y + ((Float)height / (Float)(int)2));
HXLINE( 618)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE( 619)						 ::lime::graphics::cairo::Cairo _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 619)						_hx_tmp19->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE( 620)						 ::lime::graphics::cairo::Cairo _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 620)						_hx_tmp20->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE( 621)						 ::lime::graphics::cairo::Cairo _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 621)						_hx_tmp21->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE( 622)						 ::lime::graphics::cairo::Cairo _hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 622)						_hx_tmp22->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            					}
            					break;
            					case (int)8: {
HXLINE( 826)						int cacheExtend = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::get_extend(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE( 827)						::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern,(int)0);
HXLINE( 829)						{
HXLINE( 829)							 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN( 829)							switch((int)(_hx_getEnumValueIndex(_g10))){
            								case (int)0: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN( 829)									data257->oPos = (data257->oPos + (int)2);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN( 829)									data258->bPos = (data258->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN( 829)									data259->iPos = (data259->iPos + (int)1);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN( 829)									data260->fPos = (data260->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN( 829)									data261->oPos = (data261->oPos + (int)4);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN( 829)									data262->iiPos = (data262->iiPos + (int)2);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN( 829)									data263->ffPos = (data263->ffPos + (int)1);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN( 829)									data264->fPos = (data264->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN( 829)									data265->oPos = (data265->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN( 829)									data266->fPos = (data266->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN( 829)									data267->fPos = (data267->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN( 829)									data268->fPos = (data268->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN( 829)									data269->fPos = (data269->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN( 829)									data270->oPos = (data270->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN( 829)									data271->fPos = (data271->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN( 829)									data272->fPos = (data272->fPos + (int)5);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN( 829)									data273->oPos = (data273->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN( 829)									data274->oPos = (data274->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN( 829)									data275->oPos = (data275->oPos + (int)2);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN( 829)									data276->bPos = (data276->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN( 829)									data277->oPos = (data277->oPos + (int)4);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN( 829)									data278->iiPos = (data278->iiPos + (int)2);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN( 829)									data279->ffPos = (data279->ffPos + (int)1);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN( 829)									data280->fPos = (data280->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN( 829)									data281->oPos = (data281->oPos + (int)4);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN( 829)									data282->iPos = (data282->iPos + (int)1);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN( 829)									data283->fPos = (data283->fPos + (int)2);
HXDLIN( 829)									 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN( 829)									data284->bPos = (data284->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN( 829)									data285->fPos = (data285->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN( 829)									data286->fPos = (data286->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN( 829)									data287->oPos = (data287->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 829)									 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN( 829)									data288->oPos = (data288->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 829)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN( 829)						 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN( 829)						 ::openfl::_internal::renderer::DrawCommandReader c33 = this9;
HXLINE( 830)						 ::openfl::_Vector::FloatVector rects = ( ( ::openfl::_Vector::FloatVector)(c33->buffer->o->__get(c33->oPos)) );
HXLINE( 831)						::cpp::VirtualArray c34 = c33->buffer->o;
HXDLIN( 831)						 ::openfl::_Vector::IntVector indices = ( ( ::openfl::_Vector::IntVector)(c34->__get((c33->oPos + (int)1))) );
HXLINE( 832)						::cpp::VirtualArray c35 = c33->buffer->o;
HXDLIN( 832)						 ::openfl::_Vector::FloatVector transforms = ( ( ::openfl::_Vector::FloatVector)(c35->__get((c33->oPos + (int)2))) );
HXLINE( 834)						bool hasIndices = hx::IsNotNull( indices );
HXLINE( 835)						bool transformABCD = false;
HXDLIN( 835)						bool transformXY = false;
HXLINE( 837)						int length;
HXDLIN( 837)						if (hasIndices) {
HXLINE( 837)							length = indices->get_length();
            						}
            						else {
HXLINE( 837)							length = ::Math_obj::floor(((Float)rects->get_length() / (Float)(int)4));
            						}
HXLINE( 838)						if ((length == (int)0)) {
HXLINE( 838)							return;
            						}
HXLINE( 840)						if (hx::IsNotNull( transforms )) {
HXLINE( 842)							int _hx_tmp23 = transforms->get_length();
HXDLIN( 842)							if ((_hx_tmp23 >= (length * (int)6))) {
HXLINE( 844)								transformABCD = true;
HXLINE( 845)								transformXY = true;
            							}
            							else {
HXLINE( 847)								int _hx_tmp24 = transforms->get_length();
HXDLIN( 847)								if ((_hx_tmp24 >= (length * (int)4))) {
HXLINE( 849)									transformABCD = true;
            								}
            								else {
HXLINE( 851)									int _hx_tmp25 = transforms->get_length();
HXDLIN( 851)									if ((_hx_tmp25 >= (length * (int)2))) {
HXLINE( 853)										transformXY = true;
            									}
            								}
            							}
            						}
HXLINE( 859)						 ::openfl::geom::Rectangle tileRect = ::openfl::geom::Rectangle_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Rectangle >();
HXLINE( 860)						 ::openfl::geom::Matrix tileTransform = ::openfl::geom::Matrix_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Matrix >();
HXLINE( 862)						 ::openfl::geom::Rectangle sourceRect;
HXDLIN( 862)						if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill )) {
HXLINE( 862)							sourceRect = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->rect;
            						}
            						else {
HXLINE( 862)							sourceRect = null();
            						}
HXLINE( 863)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->identity();
HXLINE( 865)						 ::openfl::geom::Matrix transform = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform;
HXLINE( 867)						Float alpha = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::worldAlpha;
HXLINE( 869)						int ri;
HXDLIN( 869)						int ti;
HXLINE( 871)						{
HXLINE( 871)							int _g31 = (int)0;
HXDLIN( 871)							int _g21 = length;
HXDLIN( 871)							while((_g31 < _g21)){
HXLINE( 871)								_g31 = (_g31 + (int)1);
HXDLIN( 871)								int i = (_g31 - (int)1);
HXLINE( 873)								if (hasIndices) {
HXLINE( 873)									ri = (indices->get(i) * (int)4);
            								}
            								else {
HXLINE( 873)									ri = (i * (int)4);
            								}
HXLINE( 874)								if ((ri < (int)0)) {
HXLINE( 874)									continue;
            								}
HXLINE( 875)								Float _hx_tmp26 = rects->get(ri);
HXDLIN( 875)								Float _hx_tmp27 = rects->get((ri + (int)1));
HXDLIN( 875)								Float _hx_tmp28 = rects->get((ri + (int)2));
HXDLIN( 875)								tileRect->setTo(_hx_tmp26,_hx_tmp27,_hx_tmp28,rects->get((ri + (int)3)));
HXLINE( 877)								bool _hx_tmp29;
HXDLIN( 877)								if (!((tileRect->width <= (int)0))) {
HXLINE( 877)									_hx_tmp29 = (tileRect->height <= (int)0);
            								}
            								else {
HXLINE( 877)									_hx_tmp29 = true;
            								}
HXDLIN( 877)								if (_hx_tmp29) {
HXLINE( 879)									continue;
            								}
HXLINE( 883)								bool _hx_tmp30;
HXDLIN( 883)								if (transformABCD) {
HXLINE( 883)									_hx_tmp30 = transformXY;
            								}
            								else {
HXLINE( 883)									_hx_tmp30 = false;
            								}
HXDLIN( 883)								if (_hx_tmp30) {
HXLINE( 885)									ti = (i * (int)6);
HXLINE( 886)									Float _hx_tmp31 = transforms->get(ti);
HXDLIN( 886)									Float _hx_tmp32 = transforms->get((ti + (int)1));
HXDLIN( 886)									Float _hx_tmp33 = transforms->get((ti + (int)2));
HXDLIN( 886)									Float _hx_tmp34 = transforms->get((ti + (int)3));
HXDLIN( 886)									Float _hx_tmp35 = transforms->get((ti + (int)4));
HXDLIN( 886)									tileTransform->setTo(_hx_tmp31,_hx_tmp32,_hx_tmp33,_hx_tmp34,_hx_tmp35,transforms->get((ti + (int)5)));
            								}
            								else {
HXLINE( 888)									if (transformABCD) {
HXLINE( 890)										ti = (i * (int)4);
HXLINE( 891)										Float _hx_tmp36 = transforms->get(ti);
HXDLIN( 891)										Float _hx_tmp37 = transforms->get((ti + (int)1));
HXDLIN( 891)										Float _hx_tmp38 = transforms->get((ti + (int)2));
HXDLIN( 891)										tileTransform->setTo(_hx_tmp36,_hx_tmp37,_hx_tmp38,transforms->get((ti + (int)3)),tileRect->x,tileRect->y);
            									}
            									else {
HXLINE( 893)										if (transformXY) {
HXLINE( 895)											ti = (i * (int)2);
HXLINE( 896)											tileTransform->tx = transforms->get(ti);
HXLINE( 897)											tileTransform->ty = transforms->get((ti + (int)1));
            										}
            										else {
HXLINE( 901)											tileTransform->tx = tileRect->x;
HXLINE( 902)											tileTransform->ty = tileRect->y;
            										}
            									}
            								}
HXLINE( 906)								 ::openfl::geom::Matrix tileTransform1 = tileTransform;
HXDLIN( 906)								tileTransform1->tx = (tileTransform1->tx + (positionX - offsetX));
HXLINE( 907)								 ::openfl::geom::Matrix tileTransform2 = tileTransform;
HXDLIN( 907)								tileTransform2->ty = (tileTransform2->ty + (positionY - offsetY));
HXLINE( 908)								tileTransform->concat(transform);
HXLINE( 917)								 ::lime::graphics::cairo::Cairo _hx_tmp39 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 917)								_hx_tmp39->set_matrix(tileTransform->_hx___toMatrix3());
HXLINE( 919)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->tx = tileRect->x;
HXLINE( 920)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3->ty = tileRect->y;
HXLINE( 921)								::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern,::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3);
HXLINE( 922)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE( 924)								if (hx::IsNotEq( tileRect,sourceRect )) {
HXLINE( 926)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->save();
HXLINE( 928)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE( 929)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->rectangle((int)0,(int)0,tileRect->width,tileRect->height);
HXLINE( 930)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->clip();
            								}
HXLINE( 934)								if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE( 936)									if ((alpha == (int)1)) {
HXLINE( 938)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paint();
            									}
            									else {
HXLINE( 942)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paintWithAlpha(alpha);
            									}
            								}
HXLINE( 948)								if (hx::IsNotEq( tileRect,sourceRect )) {
HXLINE( 950)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->restore();
            								}
            							}
            						}
HXLINE( 956)						::openfl::geom::Rectangle_obj::_hx___pool->release(tileRect);
HXLINE( 957)						::openfl::geom::Matrix_obj::_hx___pool->release(tileTransform);
HXLINE( 959)						 ::lime::graphics::cairo::Cairo _hx_tmp40 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 959)						_hx_tmp40->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE( 960)						::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_extend(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern,cacheExtend);
            					}
            					break;
            					case (int)9: {
HXLINE( 594)						{
HXLINE( 594)							 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN( 594)							switch((int)(_hx_getEnumValueIndex(_g11))){
            								case (int)0: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN( 594)									data289->oPos = (data289->oPos + (int)2);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN( 594)									data290->bPos = (data290->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN( 594)									data291->iPos = (data291->iPos + (int)1);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN( 594)									data292->fPos = (data292->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN( 594)									data293->oPos = (data293->oPos + (int)4);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN( 594)									data294->iiPos = (data294->iiPos + (int)2);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN( 594)									data295->ffPos = (data295->ffPos + (int)1);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN( 594)									data296->fPos = (data296->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN( 594)									data297->oPos = (data297->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN( 594)									data298->fPos = (data298->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN( 594)									data299->fPos = (data299->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN( 594)									data300->fPos = (data300->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN( 594)									data301->fPos = (data301->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN( 594)									data302->oPos = (data302->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN( 594)									data303->fPos = (data303->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN( 594)									data304->fPos = (data304->fPos + (int)5);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN( 594)									data305->oPos = (data305->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN( 594)									data306->oPos = (data306->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN( 594)									data307->oPos = (data307->oPos + (int)2);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN( 594)									data308->bPos = (data308->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN( 594)									data309->oPos = (data309->oPos + (int)4);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN( 594)									data310->iiPos = (data310->iiPos + (int)2);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN( 594)									data311->ffPos = (data311->ffPos + (int)1);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN( 594)									data312->fPos = (data312->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN( 594)									data313->oPos = (data313->oPos + (int)4);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN( 594)									data314->iPos = (data314->iPos + (int)1);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN( 594)									data315->fPos = (data315->fPos + (int)2);
HXDLIN( 594)									 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN( 594)									data316->bPos = (data316->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN( 594)									data317->fPos = (data317->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN( 594)									data318->fPos = (data318->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN( 594)									data319->oPos = (data319->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 594)									 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN( 594)									data320->oPos = (data320->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 594)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN( 594)						 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN( 594)						 ::openfl::_internal::renderer::DrawCommandReader c36 = this10;
HXLINE( 595)						hasPath = true;
HXLINE( 596)						 ::lime::graphics::cairo::Cairo _hx_tmp41 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 596)						Float _hx_tmp42 = (c36->buffer->f->__get(c36->fPos) - offsetX);
HXDLIN( 596)						::Array< Float > c37 = c36->buffer->f;
HXDLIN( 596)						Float _hx_tmp43 = (c37->__get((c36->fPos + (int)1)) - offsetY);
HXDLIN( 596)						::Array< Float > c38 = c36->buffer->f;
HXDLIN( 596)						Float c39 = c38->__get((c36->fPos + (int)2));
HXDLIN( 596)						::Array< Float > c40 = c36->buffer->f;
HXDLIN( 596)						_hx_tmp41->rectangle(_hx_tmp42,_hx_tmp43,c39,c40->__get((c36->fPos + (int)3)));
            					}
            					break;
            					case (int)10: {
HXLINE( 626)						{
HXLINE( 626)							 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN( 626)							switch((int)(_hx_getEnumValueIndex(_g12))){
            								case (int)0: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN( 626)									data321->oPos = (data321->oPos + (int)2);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN( 626)									data322->bPos = (data322->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN( 626)									data323->iPos = (data323->iPos + (int)1);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN( 626)									data324->fPos = (data324->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN( 626)									data325->oPos = (data325->oPos + (int)4);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN( 626)									data326->iiPos = (data326->iiPos + (int)2);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN( 626)									data327->ffPos = (data327->ffPos + (int)1);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN( 626)									data328->fPos = (data328->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN( 626)									data329->oPos = (data329->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN( 626)									data330->fPos = (data330->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN( 626)									data331->fPos = (data331->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN( 626)									data332->fPos = (data332->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN( 626)									data333->fPos = (data333->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN( 626)									data334->oPos = (data334->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN( 626)									data335->fPos = (data335->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN( 626)									data336->fPos = (data336->fPos + (int)5);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN( 626)									data337->oPos = (data337->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN( 626)									data338->oPos = (data338->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN( 626)									data339->oPos = (data339->oPos + (int)2);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN( 626)									data340->bPos = (data340->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN( 626)									data341->oPos = (data341->oPos + (int)4);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN( 626)									data342->iiPos = (data342->iiPos + (int)2);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN( 626)									data343->ffPos = (data343->ffPos + (int)1);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN( 626)									data344->fPos = (data344->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN( 626)									data345->oPos = (data345->oPos + (int)4);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN( 626)									data346->iPos = (data346->iPos + (int)1);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN( 626)									data347->fPos = (data347->fPos + (int)2);
HXDLIN( 626)									 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN( 626)									data348->bPos = (data348->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN( 626)									data349->fPos = (data349->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN( 626)									data350->fPos = (data350->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN( 626)									data351->oPos = (data351->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 626)									 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN( 626)									data352->oPos = (data352->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 626)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN( 626)						 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN( 626)						 ::openfl::_internal::renderer::DrawCommandReader c41 = this11;
HXLINE( 627)						hasPath = true;
HXLINE( 628)						Float _hx_tmp44 = (c41->buffer->f->__get(c41->fPos) - offsetX);
HXDLIN( 628)						::Array< Float > c42 = c41->buffer->f;
HXDLIN( 628)						Float _hx_tmp45 = (c42->__get((c41->fPos + (int)1)) - offsetY);
HXDLIN( 628)						::Array< Float > c43 = c41->buffer->f;
HXDLIN( 628)						Float c44 = c43->__get((c41->fPos + (int)2));
HXDLIN( 628)						::Array< Float > c45 = c41->buffer->f;
HXDLIN( 628)						Float c46 = c45->__get((c41->fPos + (int)3));
HXDLIN( 628)						::Array< Float > c47 = c41->buffer->f;
HXDLIN( 628)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::drawRoundRect(_hx_tmp44,_hx_tmp45,c44,c46,c47->__get((c41->fPos + (int)4)),c41->buffer->o->__get(c41->oPos));
            					}
            					break;
            					case (int)12: {
HXLINE( 964)						{
HXLINE( 964)							 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN( 964)							switch((int)(_hx_getEnumValueIndex(_g13))){
            								case (int)0: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN( 964)									data353->oPos = (data353->oPos + (int)2);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN( 964)									data354->bPos = (data354->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN( 964)									data355->iPos = (data355->iPos + (int)1);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN( 964)									data356->fPos = (data356->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN( 964)									data357->oPos = (data357->oPos + (int)4);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN( 964)									data358->iiPos = (data358->iiPos + (int)2);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN( 964)									data359->ffPos = (data359->ffPos + (int)1);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN( 964)									data360->fPos = (data360->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN( 964)									data361->oPos = (data361->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN( 964)									data362->fPos = (data362->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN( 964)									data363->fPos = (data363->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN( 964)									data364->fPos = (data364->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN( 964)									data365->fPos = (data365->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN( 964)									data366->oPos = (data366->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN( 964)									data367->fPos = (data367->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN( 964)									data368->fPos = (data368->fPos + (int)5);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN( 964)									data369->oPos = (data369->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN( 964)									data370->oPos = (data370->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN( 964)									data371->oPos = (data371->oPos + (int)2);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN( 964)									data372->bPos = (data372->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN( 964)									data373->oPos = (data373->oPos + (int)4);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN( 964)									data374->iiPos = (data374->iiPos + (int)2);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN( 964)									data375->ffPos = (data375->ffPos + (int)1);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN( 964)									data376->fPos = (data376->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN( 964)									data377->oPos = (data377->oPos + (int)4);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN( 964)									data378->iPos = (data378->iPos + (int)1);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN( 964)									data379->fPos = (data379->fPos + (int)2);
HXDLIN( 964)									 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN( 964)									data380->bPos = (data380->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN( 964)									data381->fPos = (data381->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN( 964)									data382->fPos = (data382->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN( 964)									data383->oPos = (data383->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 964)									 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN( 964)									data384->oPos = (data384->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 964)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN( 964)						 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN( 964)						 ::openfl::_internal::renderer::DrawCommandReader c48 = this12;
HXLINE( 965)						 ::openfl::_Vector::FloatVector v = ( ( ::openfl::_Vector::FloatVector)(c48->buffer->o->__get(c48->oPos)) );
HXLINE( 966)						::cpp::VirtualArray c49 = c48->buffer->o;
HXDLIN( 966)						 ::openfl::_Vector::IntVector ind = ( ( ::openfl::_Vector::IntVector)(c49->__get((c48->oPos + (int)1))) );
HXLINE( 967)						::cpp::VirtualArray c50 = c48->buffer->o;
HXDLIN( 967)						 ::openfl::_Vector::FloatVector uvt = ( ( ::openfl::_Vector::FloatVector)(c50->__get((c48->oPos + (int)2))) );
HXLINE( 968)						bool colorFill = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill );
HXLINE( 970)						bool _hx_tmp46;
HXDLIN( 970)						if (colorFill) {
HXLINE( 970)							_hx_tmp46 = hx::IsNotNull( uvt );
            						}
            						else {
HXLINE( 970)							_hx_tmp46 = false;
            						}
HXDLIN( 970)						if (_hx_tmp46) {
HXLINE( 972)							goto _hx_goto_14;
            						}
HXLINE( 976)						int width1 = (int)0;
HXLINE( 977)						int height1 = (int)0;
HXLINE( 978)						 ::lime::math::Matrix3 currentMatrix = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3();
HXLINE( 980)						if (!(colorFill)) {
HXLINE( 984)							if (hx::IsNull( uvt )) {
HXLINE( 986)								int length1 = null();
HXDLIN( 986)								bool fixed = null();
HXDLIN( 986)								uvt =  ::openfl::_Vector::FloatVector_obj::__alloc( HX_CTX ,length1,fixed,null(),true);
HXLINE( 988)								{
HXLINE( 988)									int _g32 = (int)0;
HXDLIN( 988)									int _g22 = ::Std_obj::_hx_int(((Float)v->get_length() / (Float)(int)2));
HXDLIN( 988)									while((_g32 < _g22)){
HXLINE( 988)										_g32 = (_g32 + (int)1);
HXDLIN( 988)										int i1 = (_g32 - (int)1);
HXLINE( 990)										{
HXLINE( 990)											Float x1 = v->get((i1 * (int)2));
HXDLIN( 990)											uvt->push((x1 - ((Float)offsetX / (Float)::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->width)));
            										}
HXLINE( 991)										{
HXLINE( 991)											Float x2 = v->get(((i1 * (int)2) + (int)1));
HXDLIN( 991)											uvt->push((x2 - ((Float)offsetY / (Float)::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->height)));
            										}
            									}
            								}
            							}
HXLINE( 997)							::cpp::VirtualArray c51 = c48->buffer->o;
HXDLIN( 997)							int skipT = ::openfl::_Vector::IVector_obj::get_length(( ( ::openfl::_Vector::FloatVector)(c51->__get((c48->oPos + (int)2))) ));
HXDLIN( 997)							bool skipT1 = (skipT != v->get_length());
HXLINE( 998)							 ::Dynamic normalizedUVT = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::normalizeUVT(uvt,skipT1);
HXLINE( 999)							Float maxUVT = ( (Float)(normalizedUVT->__Field(HX_("max",a4,0a,53,00),hx::paccDynamic)) );
HXLINE(1000)							uvt = ( ( ::openfl::_Vector::FloatVector)(normalizedUVT->__Field(HX_("uvt",f3,2e,59,00),hx::paccDynamic)) );
HXLINE(1002)							if ((maxUVT > (int)1)) {
HXLINE(1003)								width1 = ::Std_obj::_hx_int(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->width);
HXLINE(1004)								height1 = ::Std_obj::_hx_int(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->height);
            							}
            							else {
HXLINE(1009)								width1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->width;
HXLINE(1010)								height1 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill->height;
            							}
            						}
HXLINE(1016)						int i2 = (int)0;
HXLINE(1017)						int l = ind->get_length();
HXLINE(1019)						int a_;
HXDLIN(1019)						int b_;
HXDLIN(1019)						int c_;
HXLINE(1020)						int iax;
HXDLIN(1020)						int iay;
HXDLIN(1020)						int ibx;
HXDLIN(1020)						int iby;
HXDLIN(1020)						int icx;
HXDLIN(1020)						int icy;
HXLINE(1021)						Float x11;
HXDLIN(1021)						Float y1;
HXDLIN(1021)						Float x21;
HXDLIN(1021)						Float y2;
HXDLIN(1021)						Float x3;
HXDLIN(1021)						Float y3;
HXLINE(1022)						Float uvx1;
HXDLIN(1022)						Float uvy1;
HXDLIN(1022)						Float uvx2;
HXDLIN(1022)						Float uvy2;
HXDLIN(1022)						Float uvx3;
HXDLIN(1022)						Float uvy3;
HXLINE(1023)						Float denom;
HXLINE(1024)						Float t1;
HXDLIN(1024)						Float t2;
HXDLIN(1024)						Float t3;
HXDLIN(1024)						Float t4;
HXLINE(1025)						Float dx;
HXDLIN(1025)						Float dy;
HXLINE(1027)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_antialias((int)1);
HXLINE(1029)						while((i2 < l)){
HXLINE(1031)							a_ = i2;
HXLINE(1032)							b_ = (i2 + (int)1);
HXLINE(1033)							c_ = (i2 + (int)2);
HXLINE(1035)							iax = (ind->get(a_) * (int)2);
HXLINE(1036)							iay = ((ind->get(a_) * (int)2) + (int)1);
HXLINE(1037)							ibx = (ind->get(b_) * (int)2);
HXLINE(1038)							iby = ((ind->get(b_) * (int)2) + (int)1);
HXLINE(1039)							icx = (ind->get(c_) * (int)2);
HXLINE(1040)							icy = ((ind->get(c_) * (int)2) + (int)1);
HXLINE(1042)							x11 = (v->get(iax) - offsetX);
HXLINE(1043)							y1 = (v->get(iay) - offsetY);
HXLINE(1044)							x21 = (v->get(ibx) - offsetX);
HXLINE(1045)							y2 = (v->get(iby) - offsetY);
HXLINE(1046)							x3 = (v->get(icx) - offsetX);
HXLINE(1047)							y3 = (v->get(icy) - offsetY);
HXLINE(1049)							{
HXLINE(1049)								::cpp::VirtualArray c52 = c48->buffer->o;
HXDLIN(1049)								 ::Dynamic _g23 = c52->__get((c48->oPos + (int)3));
HXDLIN(1049)								 ::Dynamic _hx_switch_0 = _g23;
            								if (  (_hx_switch_0==(int)0) ){
HXLINE(1062)									if (((((x21 - x11) * (y3 - y1)) - ((y2 - y1) * (x3 - x11))) < (int)0)) {
HXLINE(1064)										i2 = (i2 + (int)3);
HXLINE(1065)										continue;
            									}
HXLINE(1062)									goto _hx_goto_18;
            								}
            								if (  (_hx_switch_0==(int)2) ){
HXLINE(1053)									if (!(((((x21 - x11) * (y3 - y1)) - ((y2 - y1) * (x3 - x11))) < (int)0))) {
HXLINE(1055)										i2 = (i2 + (int)3);
HXLINE(1056)										continue;
            									}
HXLINE(1053)									goto _hx_goto_18;
            								}
            								/* default */{
            								}
            								_hx_goto_18:;
            							}
HXLINE(1073)							if (colorFill) {
HXLINE(1075)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE(1076)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x11,y1);
HXLINE(1077)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x21,y2);
HXLINE(1078)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE(1079)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE(1080)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE(1081)								if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1081)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            								}
HXLINE(1082)								i2 = (i2 + (int)3);
HXLINE(1083)								continue;
            							}
HXLINE(1087)							 ::lime::graphics::cairo::Cairo _hx_tmp47 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1087)							_hx_tmp47->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
HXLINE(1091)							uvx1 = (uvt->get(iax) * width1);
HXLINE(1092)							uvx2 = (uvt->get(ibx) * width1);
HXLINE(1093)							uvx3 = (uvt->get(icx) * width1);
HXLINE(1094)							uvy1 = (uvt->get(iay) * height1);
HXLINE(1095)							uvy2 = (uvt->get(iby) * height1);
HXLINE(1096)							uvy3 = (uvt->get(icy) * height1);
HXLINE(1098)							denom = ((((uvx1 * (uvy3 - uvy2)) - (uvx2 * uvy3)) + (uvx3 * uvy2)) + ((uvx2 - uvx3) * uvy1));
HXLINE(1100)							if ((denom == (int)0)) {
HXLINE(1102)								i2 = (i2 + (int)3);
HXLINE(1103)								continue;
            							}
HXLINE(1107)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->newPath();
HXLINE(1108)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x11,y1);
HXLINE(1109)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x21,y2);
HXLINE(1110)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->lineTo(x3,y3);
HXLINE(1111)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
HXLINE(1114)							x11 = (x11 * currentMatrix->a);
HXLINE(1115)							x21 = (x21 * currentMatrix->a);
HXLINE(1116)							x3 = (x3 * currentMatrix->a);
HXLINE(1117)							y1 = (y1 * currentMatrix->d);
HXLINE(1118)							y2 = (y2 * currentMatrix->d);
HXLINE(1119)							y3 = (y3 * currentMatrix->d);
HXLINE(1121)							t1 = ((Float)-(((((uvy1 * (x3 - x21)) - (uvy2 * x3)) + (uvy3 * x21)) + ((uvy2 - uvy3) * x11))) / (Float)denom);
HXLINE(1122)							t2 = ((Float)((((uvy2 * y3) + (uvy1 * (y2 - y3))) - (uvy3 * y2)) + ((uvy3 - uvy2) * y1)) / (Float)denom);
HXLINE(1123)							t3 = ((Float)((((uvx1 * (x3 - x21)) - (uvx2 * x3)) + (uvx3 * x21)) + ((uvx2 - uvx3) * x11)) / (Float)denom);
HXLINE(1124)							t4 = ((Float)-(((((uvx2 * y3) + (uvx1 * (y2 - y3))) - (uvx3 * y2)) + ((uvx3 - uvx2) * y1))) / (Float)denom);
HXLINE(1125)							dx = ((Float)(((uvx1 * ((uvy3 * x21) - (uvy2 * x3))) + (uvy1 * ((uvx2 * x3) - (uvx3 * x21)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * x11)) / (Float)denom);
HXLINE(1126)							dy = ((Float)(((uvx1 * ((uvy3 * y2) - (uvy2 * y3))) + (uvy1 * ((uvx2 * y3) - (uvx3 * y2)))) + (((uvx3 * uvy2) - (uvx2 * uvy3)) * y1)) / (Float)denom);
HXLINE(1128)							{
HXLINE(1128)								 ::lime::math::Matrix3 _this = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3;
HXDLIN(1128)								_this->a = t1;
HXDLIN(1128)								_this->b = t2;
HXDLIN(1128)								_this->c = t3;
HXDLIN(1128)								_this->d = t4;
HXDLIN(1128)								_this->tx = dx;
HXDLIN(1128)								_this->ty = dy;
            							}
HXLINE(1129)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::tempMatrix3);
HXLINE(1130)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE(1131)							if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1131)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fill();
            							}
HXLINE(1133)							i2 = (i2 + (int)3);
            						}
HXLINE(1137)						 ::lime::graphics::cairo::Cairo _hx_tmp48 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1137)						_hx_tmp48->set_matrix(::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics->_hx___renderTransform->_hx___toMatrix3());
            					}
            					break;
            					case (int)14: {
HXLINE( 750)						{
HXLINE( 750)							 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN( 750)							switch((int)(_hx_getEnumValueIndex(_g14))){
            								case (int)0: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN( 750)									data385->oPos = (data385->oPos + (int)2);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN( 750)									data386->bPos = (data386->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN( 750)									data387->iPos = (data387->iPos + (int)1);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN( 750)									data388->fPos = (data388->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN( 750)									data389->oPos = (data389->oPos + (int)4);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN( 750)									data390->iiPos = (data390->iiPos + (int)2);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN( 750)									data391->ffPos = (data391->ffPos + (int)1);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN( 750)									data392->fPos = (data392->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN( 750)									data393->oPos = (data393->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN( 750)									data394->fPos = (data394->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN( 750)									data395->fPos = (data395->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN( 750)									data396->fPos = (data396->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN( 750)									data397->fPos = (data397->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN( 750)									data398->oPos = (data398->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN( 750)									data399->fPos = (data399->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN( 750)									data400->fPos = (data400->fPos + (int)5);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN( 750)									data401->oPos = (data401->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN( 750)									data402->oPos = (data402->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN( 750)									data403->oPos = (data403->oPos + (int)2);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN( 750)									data404->bPos = (data404->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN( 750)									data405->oPos = (data405->oPos + (int)4);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN( 750)									data406->iiPos = (data406->iiPos + (int)2);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN( 750)									data407->ffPos = (data407->ffPos + (int)1);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN( 750)									data408->fPos = (data408->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN( 750)									data409->oPos = (data409->oPos + (int)4);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN( 750)									data410->iPos = (data410->iPos + (int)1);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN( 750)									data411->fPos = (data411->fPos + (int)2);
HXDLIN( 750)									 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN( 750)									data412->bPos = (data412->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN( 750)									data413->fPos = (data413->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN( 750)									data414->fPos = (data414->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN( 750)									data415->oPos = (data415->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 750)									 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN( 750)									data416->oPos = (data416->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 750)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN( 750)						 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
HXDLIN( 750)						 ::openfl::_internal::renderer::DrawCommandReader c53 = this13;
HXLINE( 751)						bool _hx_tmp49;
HXDLIN( 751)						if (stroke) {
HXLINE( 751)							_hx_tmp49 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 751)							_hx_tmp49 = false;
            						}
HXDLIN( 751)						if (_hx_tmp49) {
HXLINE( 753)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(null());
            						}
HXLINE( 757)						 ::lime::graphics::cairo::Cairo _hx_tmp50 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 757)						_hx_tmp50->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 758)						::cpp::VirtualArray c54 = c53->buffer->o;
HXDLIN( 758)						::Array< bool > c55 = c53->buffer->b;
HXDLIN( 758)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createImagePattern(( ( ::openfl::display::BitmapData)(c53->buffer->o->__get(c53->oPos)) ),( ( ::openfl::geom::Matrix)(c54->__get((c53->oPos + (int)1))) ),c53->buffer->b->__get(c53->bPos),c55->__get((c53->bPos + (int)1)));
HXLINE( 760)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)15: {
HXLINE( 736)						{
HXLINE( 736)							 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN( 736)							switch((int)(_hx_getEnumValueIndex(_g15))){
            								case (int)0: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN( 736)									data417->oPos = (data417->oPos + (int)2);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN( 736)									data418->bPos = (data418->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN( 736)									data419->iPos = (data419->iPos + (int)1);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN( 736)									data420->fPos = (data420->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN( 736)									data421->oPos = (data421->oPos + (int)4);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN( 736)									data422->iiPos = (data422->iiPos + (int)2);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN( 736)									data423->ffPos = (data423->ffPos + (int)1);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN( 736)									data424->fPos = (data424->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN( 736)									data425->oPos = (data425->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN( 736)									data426->fPos = (data426->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN( 736)									data427->fPos = (data427->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN( 736)									data428->fPos = (data428->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN( 736)									data429->fPos = (data429->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN( 736)									data430->oPos = (data430->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN( 736)									data431->fPos = (data431->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN( 736)									data432->fPos = (data432->fPos + (int)5);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN( 736)									data433->oPos = (data433->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN( 736)									data434->oPos = (data434->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN( 736)									data435->oPos = (data435->oPos + (int)2);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN( 736)									data436->bPos = (data436->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN( 736)									data437->oPos = (data437->oPos + (int)4);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN( 736)									data438->iiPos = (data438->iiPos + (int)2);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN( 736)									data439->ffPos = (data439->ffPos + (int)1);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN( 736)									data440->fPos = (data440->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN( 736)									data441->oPos = (data441->oPos + (int)4);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN( 736)									data442->iPos = (data442->iPos + (int)1);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN( 736)									data443->fPos = (data443->fPos + (int)2);
HXDLIN( 736)									 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN( 736)									data444->bPos = (data444->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN( 736)									data445->fPos = (data445->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN( 736)									data446->fPos = (data446->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN( 736)									data447->oPos = (data447->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 736)									 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN( 736)									data448->oPos = (data448->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 736)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN( 736)						 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN( 736)						 ::openfl::_internal::renderer::DrawCommandReader c56 = this14;
HXLINE( 737)						bool _hx_tmp51;
HXDLIN( 737)						if (stroke) {
HXLINE( 737)							_hx_tmp51 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 737)							_hx_tmp51 = false;
            						}
HXDLIN( 737)						if (_hx_tmp51) {
HXLINE( 739)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(null());
            						}
HXLINE( 743)						 ::lime::graphics::cairo::Cairo _hx_tmp52 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 743)						_hx_tmp52->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 744)						::Array< ::Dynamic> c57 = c56->buffer->ii;
HXDLIN( 744)						::cpp::VirtualArray c58 = c56->buffer->o;
HXDLIN( 744)						::cpp::VirtualArray c59 = c56->buffer->o;
HXDLIN( 744)						::cpp::VirtualArray c60 = c56->buffer->o;
HXDLIN( 744)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::createGradientPattern(c56->buffer->o->__get(c56->oPos),c56->buffer->ii->__get(c56->iiPos).StaticCast< ::Array< int > >(),c56->buffer->ff->__get(c56->ffPos).StaticCast< ::Array< Float > >(),c57->__get((c56->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c58->__get((c56->oPos + (int)1))) ),c59->__get((c56->oPos + (int)2)),c60->__get((c56->oPos + (int)3)),c56->buffer->f->__get(c56->fPos));
HXLINE( 746)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
            					}
            					break;
            					case (int)16: {
HXLINE( 665)						{
HXLINE( 665)							 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN( 665)							switch((int)(_hx_getEnumValueIndex(_g16))){
            								case (int)0: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN( 665)									data449->oPos = (data449->oPos + (int)2);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN( 665)									data450->bPos = (data450->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN( 665)									data451->iPos = (data451->iPos + (int)1);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN( 665)									data452->fPos = (data452->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN( 665)									data453->oPos = (data453->oPos + (int)4);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN( 665)									data454->iiPos = (data454->iiPos + (int)2);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN( 665)									data455->ffPos = (data455->ffPos + (int)1);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN( 665)									data456->fPos = (data456->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN( 665)									data457->oPos = (data457->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN( 665)									data458->fPos = (data458->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN( 665)									data459->fPos = (data459->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN( 665)									data460->fPos = (data460->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN( 665)									data461->fPos = (data461->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN( 665)									data462->oPos = (data462->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN( 665)									data463->fPos = (data463->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN( 665)									data464->fPos = (data464->fPos + (int)5);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN( 665)									data465->oPos = (data465->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN( 665)									data466->oPos = (data466->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN( 665)									data467->oPos = (data467->oPos + (int)2);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN( 665)									data468->bPos = (data468->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN( 665)									data469->oPos = (data469->oPos + (int)4);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN( 665)									data470->iiPos = (data470->iiPos + (int)2);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN( 665)									data471->ffPos = (data471->ffPos + (int)1);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN( 665)									data472->fPos = (data472->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN( 665)									data473->oPos = (data473->oPos + (int)4);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN( 665)									data474->iPos = (data474->iPos + (int)1);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN( 665)									data475->fPos = (data475->fPos + (int)2);
HXDLIN( 665)									 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN( 665)									data476->bPos = (data476->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN( 665)									data477->fPos = (data477->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN( 665)									data478->fPos = (data478->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN( 665)									data479->oPos = (data479->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 665)									 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN( 665)									data480->oPos = (data480->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 665)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN( 665)						 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN( 665)						 ::openfl::_internal::renderer::DrawCommandReader c61 = this15;
HXLINE( 666)						bool _hx_tmp53;
HXDLIN( 666)						if (stroke) {
HXLINE( 666)							_hx_tmp53 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            						}
            						else {
HXLINE( 666)							_hx_tmp53 = false;
            						}
HXDLIN( 666)						if (_hx_tmp53) {
HXLINE( 668)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(true);
            						}
HXLINE( 672)						 ::lime::graphics::cairo::Cairo _hx_tmp54 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 672)						_hx_tmp54->moveTo((positionX - offsetX),(positionY - offsetY));
HXLINE( 674)						if (hx::IsNull( c61->buffer->o->__get(c61->oPos) )) {
HXLINE( 676)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
            						}
            						else {
HXLINE( 680)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = true;
HXLINE( 682)							Float _hx_tmp55;
HXDLIN( 682)							if (hx::IsGreater( c61->buffer->o->__get(c61->oPos),(int)0 )) {
HXLINE( 682)								_hx_tmp55 = ( (Float)(c61->buffer->o->__get(c61->oPos)) );
            							}
            							else {
HXLINE( 682)								_hx_tmp55 = (int)1;
            							}
HXDLIN( 682)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineWidth(_hx_tmp55);
HXLINE( 684)							::cpp::VirtualArray c62 = c61->buffer->o;
HXDLIN( 684)							if (hx::IsNull( c62->__get((c61->oPos + (int)3)) )) {
HXLINE( 686)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineJoin((int)1);
            							}
            							else {
HXLINE( 690)								::cpp::VirtualArray c63 = c61->buffer->o;
HXDLIN( 690)								 ::Dynamic _g24 = c63->__get((c61->oPos + (int)3));
HXDLIN( 690)								int _hx_tmp56;
HXDLIN( 690)								 ::Dynamic _hx_switch_1 = _g24;
            								if (  (_hx_switch_1==(int)0) ){
HXLINE( 690)									_hx_tmp56 = (int)2;
HXDLIN( 690)									goto _hx_goto_19;
            								}
            								if (  (_hx_switch_1==(int)1) ){
HXLINE( 690)									_hx_tmp56 = (int)0;
HXDLIN( 690)									goto _hx_goto_19;
            								}
            								/* default */{
HXLINE( 690)									_hx_tmp56 = (int)1;
            								}
            								_hx_goto_19:;
HXDLIN( 690)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineJoin(_hx_tmp56);
            							}
HXLINE( 700)							::cpp::VirtualArray c64 = c61->buffer->o;
HXDLIN( 700)							if (hx::IsNull( c64->__get((c61->oPos + (int)2)) )) {
HXLINE( 702)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineCap((int)1);
            							}
            							else {
HXLINE( 706)								::cpp::VirtualArray c65 = c61->buffer->o;
HXDLIN( 706)								 ::Dynamic _g25 = c65->__get((c61->oPos + (int)2));
HXDLIN( 706)								int _hx_tmp57;
HXDLIN( 706)								 ::Dynamic _hx_switch_2 = _g25;
            								if (  (_hx_switch_2==(int)0) ){
HXLINE( 706)									_hx_tmp57 = (int)0;
HXDLIN( 706)									goto _hx_goto_20;
            								}
            								if (  (_hx_switch_2==(int)2) ){
HXLINE( 706)									_hx_tmp57 = (int)2;
HXDLIN( 706)									goto _hx_goto_20;
            								}
            								/* default */{
HXLINE( 706)									_hx_tmp57 = (int)1;
            								}
            								_hx_goto_20:;
HXDLIN( 706)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_lineCap(_hx_tmp57);
            							}
HXLINE( 716)							::Array< Float > c66 = c61->buffer->f;
HXDLIN( 716)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_miterLimit(c66->__get((c61->fPos + (int)1)));
HXLINE( 718)							r = ((Float)hx::UShr(((int)c61->buffer->i->__get(c61->iPos) & (int)(int)16711680),(int)16) / (Float)(int)255);
HXLINE( 719)							g = ((Float)hx::UShr(((int)c61->buffer->i->__get(c61->iPos) & (int)(int)65280),(int)8) / (Float)(int)255);
HXLINE( 720)							b = ((Float)((int)c61->buffer->i->__get(c61->iPos) & (int)(int)255) / (Float)(int)255);
HXLINE( 722)							if ((c61->buffer->f->__get(c61->fPos) == (int)1)) {
HXLINE( 724)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGB(r,g,b);
            							}
            							else {
HXLINE( 728)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = ::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::createRGBA(r,g,b,c61->buffer->f->__get(c61->fPos));
            							}
            						}
            					}
            					break;
            					case (int)17: {
HXLINE( 632)						{
HXLINE( 632)							 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN( 632)							switch((int)(_hx_getEnumValueIndex(_g17))){
            								case (int)0: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN( 632)									data481->oPos = (data481->oPos + (int)2);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN( 632)									data482->bPos = (data482->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN( 632)									data483->iPos = (data483->iPos + (int)1);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN( 632)									data484->fPos = (data484->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN( 632)									data485->oPos = (data485->oPos + (int)4);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN( 632)									data486->iiPos = (data486->iiPos + (int)2);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN( 632)									data487->ffPos = (data487->ffPos + (int)1);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN( 632)									data488->fPos = (data488->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN( 632)									data489->oPos = (data489->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN( 632)									data490->fPos = (data490->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN( 632)									data491->fPos = (data491->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN( 632)									data492->fPos = (data492->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN( 632)									data493->fPos = (data493->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN( 632)									data494->oPos = (data494->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN( 632)									data495->fPos = (data495->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN( 632)									data496->fPos = (data496->fPos + (int)5);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN( 632)									data497->oPos = (data497->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN( 632)									data498->oPos = (data498->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN( 632)									data499->oPos = (data499->oPos + (int)2);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN( 632)									data500->bPos = (data500->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN( 632)									data501->oPos = (data501->oPos + (int)4);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN( 632)									data502->iiPos = (data502->iiPos + (int)2);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN( 632)									data503->ffPos = (data503->ffPos + (int)1);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN( 632)									data504->fPos = (data504->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN( 632)									data505->oPos = (data505->oPos + (int)4);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN( 632)									data506->iPos = (data506->iPos + (int)1);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN( 632)									data507->fPos = (data507->fPos + (int)2);
HXDLIN( 632)									 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN( 632)									data508->bPos = (data508->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN( 632)									data509->fPos = (data509->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN( 632)									data510->fPos = (data510->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN( 632)									data511->oPos = (data511->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 632)									 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN( 632)									data512->oPos = (data512->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 632)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN( 632)						 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN( 632)						 ::openfl::_internal::renderer::DrawCommandReader c67 = this16;
HXLINE( 633)						hasPath = true;
HXLINE( 634)						 ::lime::graphics::cairo::Cairo _hx_tmp58 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 634)						Float _hx_tmp59 = (c67->buffer->f->__get(c67->fPos) - offsetX);
HXDLIN( 634)						::Array< Float > c68 = c67->buffer->f;
HXDLIN( 634)						_hx_tmp58->lineTo(_hx_tmp59,(c68->__get((c67->fPos + (int)1)) - offsetY));
HXLINE( 636)						positionX = c67->buffer->f->__get(c67->fPos);
HXLINE( 637)						::Array< Float > c69 = c67->buffer->f;
HXDLIN( 637)						positionY = c69->__get((c67->fPos + (int)1));
HXLINE( 639)						bool _hx_tmp60;
HXDLIN( 639)						if ((positionX == startX)) {
HXLINE( 639)							_hx_tmp60 = (positionY == startY);
            						}
            						else {
HXLINE( 639)							_hx_tmp60 = false;
            						}
HXDLIN( 639)						if (_hx_tmp60) {
HXLINE( 641)							closeGap = true;
            						}
            					}
            					break;
            					case (int)18: {
HXLINE( 647)						{
HXLINE( 647)							 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN( 647)							switch((int)(_hx_getEnumValueIndex(_g18))){
            								case (int)0: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN( 647)									data513->oPos = (data513->oPos + (int)2);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN( 647)									data514->bPos = (data514->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN( 647)									data515->iPos = (data515->iPos + (int)1);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN( 647)									data516->fPos = (data516->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN( 647)									data517->oPos = (data517->oPos + (int)4);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN( 647)									data518->iiPos = (data518->iiPos + (int)2);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN( 647)									data519->ffPos = (data519->ffPos + (int)1);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN( 647)									data520->fPos = (data520->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN( 647)									data521->oPos = (data521->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN( 647)									data522->fPos = (data522->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN( 647)									data523->fPos = (data523->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN( 647)									data524->fPos = (data524->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN( 647)									data525->fPos = (data525->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN( 647)									data526->oPos = (data526->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN( 647)									data527->fPos = (data527->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN( 647)									data528->fPos = (data528->fPos + (int)5);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN( 647)									data529->oPos = (data529->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN( 647)									data530->oPos = (data530->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN( 647)									data531->oPos = (data531->oPos + (int)2);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN( 647)									data532->bPos = (data532->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN( 647)									data533->oPos = (data533->oPos + (int)4);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN( 647)									data534->iiPos = (data534->iiPos + (int)2);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN( 647)									data535->ffPos = (data535->ffPos + (int)1);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN( 647)									data536->fPos = (data536->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN( 647)									data537->oPos = (data537->oPos + (int)4);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN( 647)									data538->iPos = (data538->iPos + (int)1);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN( 647)									data539->fPos = (data539->fPos + (int)2);
HXDLIN( 647)									 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN( 647)									data540->bPos = (data540->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN( 647)									data541->fPos = (data541->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN( 647)									data542->fPos = (data542->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN( 647)									data543->oPos = (data543->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE( 647)									 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN( 647)									data544->oPos = (data544->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE( 647)						data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN( 647)						 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
HXDLIN( 647)						 ::openfl::_internal::renderer::DrawCommandReader c70 = this17;
HXLINE( 648)						 ::lime::graphics::cairo::Cairo _hx_tmp61 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN( 648)						Float _hx_tmp62 = (c70->buffer->f->__get(c70->fPos) - offsetX);
HXDLIN( 648)						::Array< Float > c71 = c70->buffer->f;
HXDLIN( 648)						_hx_tmp61->moveTo(_hx_tmp62,(c71->__get((c70->fPos + (int)1)) - offsetY));
HXLINE( 650)						positionX = c70->buffer->f->__get(c70->fPos);
HXLINE( 651)						::Array< Float > c72 = c70->buffer->f;
HXDLIN( 651)						positionY = c72->__get((c70->fPos + (int)1));
HXLINE( 653)						if (setStart) {
HXLINE( 655)							closeGap = true;
            						}
HXLINE( 659)						startX = c70->buffer->f->__get(c70->fPos);
HXLINE( 660)						::Array< Float > c73 = c70->buffer->f;
HXDLIN( 660)						startY = c73->__get((c70->fPos + (int)1));
HXLINE( 661)						setStart = true;
            					}
            					break;
            					case (int)21: {
HXLINE(1141)						{
HXLINE(1141)							{
HXLINE(1141)								 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN(1141)								switch((int)(_hx_getEnumValueIndex(_g19))){
            									case (int)0: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN(1141)										data545->oPos = (data545->oPos + (int)2);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN(1141)										data546->bPos = (data546->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN(1141)										data547->iPos = (data547->iPos + (int)1);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN(1141)										data548->fPos = (data548->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN(1141)										data549->oPos = (data549->oPos + (int)4);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN(1141)										data550->iiPos = (data550->iiPos + (int)2);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN(1141)										data551->ffPos = (data551->ffPos + (int)1);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN(1141)										data552->fPos = (data552->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN(1141)										data553->oPos = (data553->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN(1141)										data554->fPos = (data554->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN(1141)										data555->fPos = (data555->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN(1141)										data556->fPos = (data556->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN(1141)										data557->fPos = (data557->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN(1141)										data558->oPos = (data558->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN(1141)										data559->fPos = (data559->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN(1141)										data560->fPos = (data560->fPos + (int)5);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN(1141)										data561->oPos = (data561->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN(1141)										data562->oPos = (data562->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN(1141)										data563->oPos = (data563->oPos + (int)2);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN(1141)										data564->bPos = (data564->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN(1141)										data565->oPos = (data565->oPos + (int)4);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN(1141)										data566->iiPos = (data566->iiPos + (int)2);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN(1141)										data567->ffPos = (data567->ffPos + (int)1);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN(1141)										data568->fPos = (data568->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN(1141)										data569->oPos = (data569->oPos + (int)4);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN(1141)										data570->iPos = (data570->iPos + (int)1);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN(1141)										data571->fPos = (data571->fPos + (int)2);
HXDLIN(1141)										 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN(1141)										data572->bPos = (data572->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN(1141)										data573->fPos = (data573->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN(1141)										data574->fPos = (data574->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN(1141)										data575->oPos = (data575->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1141)										 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN(1141)										data576->oPos = (data576->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1141)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN(1141)							 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
            						}
HXLINE(1142)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)1);
            					}
            					break;
            					case (int)22: {
HXLINE(1146)						{
HXLINE(1146)							{
HXLINE(1146)								 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN(1146)								switch((int)(_hx_getEnumValueIndex(_g20))){
            									case (int)0: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN(1146)										data577->oPos = (data577->oPos + (int)2);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN(1146)										data578->bPos = (data578->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN(1146)										data579->iPos = (data579->iPos + (int)1);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN(1146)										data580->fPos = (data580->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN(1146)										data581->oPos = (data581->oPos + (int)4);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN(1146)										data582->iiPos = (data582->iiPos + (int)2);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN(1146)										data583->ffPos = (data583->ffPos + (int)1);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN(1146)										data584->fPos = (data584->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN(1146)										data585->oPos = (data585->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN(1146)										data586->fPos = (data586->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN(1146)										data587->fPos = (data587->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN(1146)										data588->fPos = (data588->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN(1146)										data589->fPos = (data589->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data590 = data;
HXDLIN(1146)										data590->oPos = (data590->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data591 = data;
HXDLIN(1146)										data591->fPos = (data591->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data592 = data;
HXDLIN(1146)										data592->fPos = (data592->fPos + (int)5);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data593 = data;
HXDLIN(1146)										data593->oPos = (data593->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data594 = data;
HXDLIN(1146)										data594->oPos = (data594->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data595 = data;
HXDLIN(1146)										data595->oPos = (data595->oPos + (int)2);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data596 = data;
HXDLIN(1146)										data596->bPos = (data596->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data597 = data;
HXDLIN(1146)										data597->oPos = (data597->oPos + (int)4);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data598 = data;
HXDLIN(1146)										data598->iiPos = (data598->iiPos + (int)2);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data599 = data;
HXDLIN(1146)										data599->ffPos = (data599->ffPos + (int)1);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data600 = data;
HXDLIN(1146)										data600->fPos = (data600->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data601 = data;
HXDLIN(1146)										data601->oPos = (data601->oPos + (int)4);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data602 = data;
HXDLIN(1146)										data602->iPos = (data602->iPos + (int)1);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data603 = data;
HXDLIN(1146)										data603->fPos = (data603->fPos + (int)2);
HXDLIN(1146)										 ::openfl::_internal::renderer::DrawCommandReader data604 = data;
HXDLIN(1146)										data604->bPos = (data604->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data605 = data;
HXDLIN(1146)										data605->fPos = (data605->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data606 = data;
HXDLIN(1146)										data606->fPos = (data606->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data607 = data;
HXDLIN(1146)										data607->oPos = (data607->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1146)										 ::openfl::_internal::renderer::DrawCommandReader data608 = data;
HXDLIN(1146)										data608->oPos = (data608->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1146)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN(1146)							 ::openfl::_internal::renderer::DrawCommandReader this19 = data;
            						}
HXLINE(1147)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_fillRule((int)0);
            					}
            					break;
            					default:{
HXLINE(1151)						{
HXLINE(1151)							 ::openfl::_internal::renderer::DrawCommandType _g26 = data->prev;
HXDLIN(1151)							switch((int)(_hx_getEnumValueIndex(_g26))){
            								case (int)0: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data609 = data;
HXDLIN(1151)									data609->oPos = (data609->oPos + (int)2);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data610 = data;
HXDLIN(1151)									data610->bPos = (data610->bPos + (int)2);
            								}
            								break;
            								case (int)1: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data611 = data;
HXDLIN(1151)									data611->iPos = (data611->iPos + (int)1);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data612 = data;
HXDLIN(1151)									data612->fPos = (data612->fPos + (int)1);
            								}
            								break;
            								case (int)2: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data613 = data;
HXDLIN(1151)									data613->oPos = (data613->oPos + (int)4);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data614 = data;
HXDLIN(1151)									data614->iiPos = (data614->iiPos + (int)2);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data615 = data;
HXDLIN(1151)									data615->ffPos = (data615->ffPos + (int)1);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data616 = data;
HXDLIN(1151)									data616->fPos = (data616->fPos + (int)1);
            								}
            								break;
            								case (int)3: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data617 = data;
HXDLIN(1151)									data617->oPos = (data617->oPos + (int)1);
            								}
            								break;
            								case (int)4: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data618 = data;
HXDLIN(1151)									data618->fPos = (data618->fPos + (int)6);
            								}
            								break;
            								case (int)5: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data619 = data;
HXDLIN(1151)									data619->fPos = (data619->fPos + (int)4);
            								}
            								break;
            								case (int)6: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data620 = data;
HXDLIN(1151)									data620->fPos = (data620->fPos + (int)3);
            								}
            								break;
            								case (int)7: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data621 = data;
HXDLIN(1151)									data621->fPos = (data621->fPos + (int)4);
            								}
            								break;
            								case (int)8: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data622 = data;
HXDLIN(1151)									data622->oPos = (data622->oPos + (int)3);
            								}
            								break;
            								case (int)9: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data623 = data;
HXDLIN(1151)									data623->fPos = (data623->fPos + (int)4);
            								}
            								break;
            								case (int)10: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data624 = data;
HXDLIN(1151)									data624->fPos = (data624->fPos + (int)5);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data625 = data;
HXDLIN(1151)									data625->oPos = (data625->oPos + (int)1);
            								}
            								break;
            								case (int)12: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data626 = data;
HXDLIN(1151)									data626->oPos = (data626->oPos + (int)4);
            								}
            								break;
            								case (int)13: {
            								}
            								break;
            								case (int)14: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data627 = data;
HXDLIN(1151)									data627->oPos = (data627->oPos + (int)2);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data628 = data;
HXDLIN(1151)									data628->bPos = (data628->bPos + (int)2);
            								}
            								break;
            								case (int)15: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data629 = data;
HXDLIN(1151)									data629->oPos = (data629->oPos + (int)4);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data630 = data;
HXDLIN(1151)									data630->iiPos = (data630->iiPos + (int)2);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data631 = data;
HXDLIN(1151)									data631->ffPos = (data631->ffPos + (int)1);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data632 = data;
HXDLIN(1151)									data632->fPos = (data632->fPos + (int)1);
            								}
            								break;
            								case (int)16: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data633 = data;
HXDLIN(1151)									data633->oPos = (data633->oPos + (int)4);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data634 = data;
HXDLIN(1151)									data634->iPos = (data634->iPos + (int)1);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data635 = data;
HXDLIN(1151)									data635->fPos = (data635->fPos + (int)2);
HXDLIN(1151)									 ::openfl::_internal::renderer::DrawCommandReader data636 = data;
HXDLIN(1151)									data636->bPos = (data636->bPos + (int)1);
            								}
            								break;
            								case (int)17: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data637 = data;
HXDLIN(1151)									data637->fPos = (data637->fPos + (int)2);
            								}
            								break;
            								case (int)18: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data638 = data;
HXDLIN(1151)									data638->fPos = (data638->fPos + (int)2);
            								}
            								break;
            								case (int)19: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data639 = data;
HXDLIN(1151)									data639->oPos = (data639->oPos + (int)1);
            								}
            								break;
            								case (int)20: {
HXLINE(1151)									 ::openfl::_internal::renderer::DrawCommandReader data640 = data;
HXDLIN(1151)									data640->oPos = (data640->oPos + (int)1);
            								}
            								break;
            								case (int)21: case (int)22: {
            								}
            								break;
            								default:{
            								}
            							}
            						}
HXLINE(1151)						data->prev = type;
            					}
            				}
            			}
            			_hx_goto_14:;
            		}
HXLINE(1157)		data->destroy();
HXLINE(1159)		if (hasPath) {
HXLINE(1161)			bool _hx_tmp63;
HXDLIN(1161)			if (stroke) {
HXLINE(1161)				_hx_tmp63 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke;
            			}
            			else {
HXLINE(1161)				_hx_tmp63 = false;
            			}
HXDLIN(1161)			if (_hx_tmp63) {
HXLINE(1163)				bool _hx_tmp64;
HXDLIN(1163)				if (::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill) {
HXLINE(1163)					_hx_tmp64 = closeGap;
            				}
            				else {
HXLINE(1163)					_hx_tmp64 = false;
            				}
HXDLIN(1163)				if (_hx_tmp64) {
HXLINE(1165)					 ::lime::graphics::cairo::Cairo _hx_tmp65 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1165)					_hx_tmp65->lineTo((startX - offsetX),(startY - offsetY));
HXLINE(1166)					::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(false);
            				}
            				else {
HXLINE(1168)					bool _hx_tmp66;
HXDLIN(1168)					bool _hx_tmp67;
HXDLIN(1168)					if (closeGap) {
HXLINE(1168)						_hx_tmp67 = (positionX == startX);
            					}
            					else {
HXLINE(1168)						_hx_tmp67 = false;
            					}
HXDLIN(1168)					if (_hx_tmp67) {
HXLINE(1168)						_hx_tmp66 = (positionY == startY);
            					}
            					else {
HXLINE(1168)						_hx_tmp66 = false;
            					}
HXDLIN(1168)					if (_hx_tmp66) {
HXLINE(1170)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::closePath(false);
            					}
            				}
HXLINE(1174)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern);
HXLINE(1175)				if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1175)					::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->strokePreserve();
            				}
            			}
HXLINE(1179)			bool _hx_tmp68;
HXDLIN(1179)			if (!(stroke)) {
HXLINE(1179)				_hx_tmp68 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill;
            			}
            			else {
HXLINE(1179)				_hx_tmp68 = false;
            			}
HXDLIN(1179)			if (_hx_tmp68) {
HXLINE(1181)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->translate(-(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x),-(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y));
HXLINE(1183)				if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix )) {
HXLINE(1185)					 ::openfl::geom::Matrix matrix = ::openfl::geom::Matrix_obj::_hx___pool->get().StaticCast<  ::openfl::geom::Matrix >();
HXLINE(1186)					matrix->copyFrom(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPatternMatrix);
HXLINE(1187)					matrix->invert();
HXLINE(1189)					if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix )) {
HXLINE(1191)						matrix->concat(::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix);
            					}
HXLINE(1195)					 ::Dynamic _hx_tmp69 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern;
HXDLIN(1195)					::lime::graphics::cairo::_CairoPattern::CairoPattern_Impl__obj::set_matrix(_hx_tmp69,matrix->_hx___toMatrix3());
HXLINE(1197)					::openfl::geom::Matrix_obj::_hx___pool->release(matrix);
            				}
HXLINE(1201)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->set_source(::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern);
HXLINE(1203)				if (hx::IsNotNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix )) {
HXLINE(1205)					 ::lime::graphics::cairo::Cairo _hx_tmp70 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1205)					_hx_tmp70->transform(::openfl::_internal::renderer::cairo::CairoGraphics_obj::pendingMatrix->_hx___toMatrix3());
HXLINE(1206)					if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1206)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            					}
HXLINE(1207)					 ::lime::graphics::cairo::Cairo _hx_tmp71 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1207)					_hx_tmp71->transform(::openfl::_internal::renderer::cairo::CairoGraphics_obj::inversePendingMatrix->_hx___toMatrix3());
            				}
            				else {
HXLINE(1211)					if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting)) {
HXLINE(1211)						::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->fillPreserve();
            					}
            				}
HXLINE(1215)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->translate(::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->x,::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds->y);
HXLINE(1216)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->closePath();
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,playCommands,(void))

void CairoGraphics_obj::quadraticCurveTo(Float cx,Float cy,Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1224_quadraticCurveTo)
HXLINE(1226)		 ::lime::math::Vector2 current = null();
HXLINE(1228)		if (!(::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->get_hasCurrentPoint())) {
HXLINE(1230)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(cx,cy);
HXLINE(1231)			current =  ::lime::math::Vector2_obj::__alloc( HX_CTX ,cx,cy);
            		}
            		else {
HXLINE(1235)			current = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->get_currentPoint();
            		}
HXLINE(1239)		Float current1 = current->x;
HXDLIN(1239)		Float cx1 = (current1 + (((Float)0.66666666666666663) * (cx - current->x)));
HXLINE(1240)		Float current2 = current->y;
HXDLIN(1240)		Float cy1 = (current2 + (((Float)0.66666666666666663) * (cy - current->y)));
HXLINE(1241)		Float cx2 = (x + (((Float)0.66666666666666663) * (cx - x)));
HXLINE(1242)		Float cy2 = (y + (((Float)0.66666666666666663) * (cy - y)));
HXLINE(1244)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->curveTo(cx1,cy1,cx2,cy2,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CairoGraphics_obj,quadraticCurveTo,(void))

void CairoGraphics_obj::render( ::openfl::display::Graphics graphics, ::openfl::display::CairoRenderer renderer){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1251_render)
HXLINE(1255)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::graphics = graphics;
HXLINE(1256)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::allowSmoothing = renderer->_hx___allowSmoothing;
HXLINE(1257)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::worldAlpha = renderer->_hx___getAlpha(graphics->_hx___owner->_hx___worldAlpha);
HXLINE(1259)		graphics->_hx___update(renderer->_hx___worldTransform);
HXLINE(1261)		bool _hx_tmp;
HXDLIN(1261)		if (!(!(graphics->_hx___softwareDirty))) {
HXLINE(1261)			_hx_tmp = graphics->_hx___managed;
            		}
            		else {
HXLINE(1261)			_hx_tmp = true;
            		}
HXDLIN(1261)		if (_hx_tmp) {
HXLINE(1261)			return;
            		}
HXLINE(1263)		::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds = graphics->_hx___bounds;
HXLINE(1265)		int width = graphics->_hx___width;
HXLINE(1266)		int height = graphics->_hx___height;
HXLINE(1268)		bool _hx_tmp1;
HXDLIN(1268)		bool _hx_tmp2;
HXDLIN(1268)		bool _hx_tmp3;
HXDLIN(1268)		bool _hx_tmp4;
HXDLIN(1268)		if (!(!(graphics->_hx___visible))) {
HXLINE(1268)			_hx_tmp4 = (graphics->_hx___commands->get_length() == (int)0);
            		}
            		else {
HXLINE(1268)			_hx_tmp4 = true;
            		}
HXDLIN(1268)		if (!(_hx_tmp4)) {
HXLINE(1268)			_hx_tmp3 = hx::IsNull( ::openfl::_internal::renderer::cairo::CairoGraphics_obj::bounds );
            		}
            		else {
HXLINE(1268)			_hx_tmp3 = true;
            		}
HXDLIN(1268)		if (!(_hx_tmp3)) {
HXLINE(1268)			_hx_tmp2 = (width < (int)1);
            		}
            		else {
HXLINE(1268)			_hx_tmp2 = true;
            		}
HXDLIN(1268)		if (!(_hx_tmp2)) {
HXLINE(1268)			_hx_tmp1 = (height < (int)1);
            		}
            		else {
HXLINE(1268)			_hx_tmp1 = true;
            		}
HXDLIN(1268)		if (_hx_tmp1) {
HXLINE(1270)			graphics->_hx___cairo = null();
HXLINE(1271)			graphics->_hx___bitmap = null();
            		}
            		else {
HXLINE(1275)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hitTesting = false;
HXLINE(1276)			bool needsUpscaling = false;
HXLINE(1278)			if (hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1280)				 ::Dynamic surface = graphics->_hx___cairo->get_target();
HXLINE(1282)				bool _hx_tmp5;
HXDLIN(1282)				if ((width <= ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_width(surface))) {
HXLINE(1282)					_hx_tmp5 = (height > ::lime::graphics::cairo::_CairoImageSurface::CairoImageSurface_Impl__obj::get_height(surface));
            				}
            				else {
HXLINE(1282)					_hx_tmp5 = true;
            				}
HXDLIN(1282)				if (_hx_tmp5) {
HXLINE(1284)					graphics->_hx___cairo = null();
HXLINE(1285)					needsUpscaling = true;
            				}
            			}
HXLINE(1291)			bool _hx_tmp6;
HXDLIN(1291)			if (hx::IsNotNull( graphics->_hx___cairo )) {
HXLINE(1291)				_hx_tmp6 = hx::IsNull( graphics->_hx___bitmap );
            			}
            			else {
HXLINE(1291)				_hx_tmp6 = true;
            			}
HXDLIN(1291)			if (_hx_tmp6) {
HXLINE(1293)				 ::openfl::display::BitmapData bitmap;
HXDLIN(1293)				if (needsUpscaling) {
HXLINE(1294)					int bitmap1 = ::Std_obj::_hx_int((width * ((Float)1.25)));
HXLINE(1293)					bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,bitmap1,::Std_obj::_hx_int((height * ((Float)1.25))),true,(int)0);
            				}
            				else {
HXLINE(1293)					bitmap =  ::openfl::display::BitmapData_obj::__alloc( HX_CTX ,width,height,true,(int)0);
            				}
HXLINE(1296)				 ::Dynamic surface1 = bitmap->getSurface();
HXLINE(1297)				graphics->_hx___cairo =  ::lime::graphics::cairo::Cairo_obj::__alloc( HX_CTX ,surface1);
HXLINE(1298)				graphics->_hx___bitmap = bitmap;
            			}
HXLINE(1302)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = graphics->_hx___cairo;
HXLINE(1304)			renderer->_hx___setBlendModeCairo(::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo,(int)10);
HXLINE(1305)			renderer->applyMatrix(graphics->_hx___renderTransform,::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo);
HXLINE(1307)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->setOperator((int)0);
HXLINE(1308)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->paint();
HXLINE(1309)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->setOperator((int)2);
HXLINE(1311)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->clear();
HXLINE(1312)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->clear();
HXLINE(1314)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE(1315)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasStroke = false;
HXLINE(1317)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillPattern = null();
HXLINE(1318)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokePattern = null();
HXLINE(1320)			bool hasLineStyle = false;
HXLINE(1321)			Float initStrokeX = ((Float)0.0);
HXLINE(1322)			Float initStrokeY = ((Float)0.0);
HXLINE(1324)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1326)			{
HXLINE(1326)				int _g = (int)0;
HXDLIN(1326)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1326)				while((_g < _g1->length)){
HXLINE(1326)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(1326)					_g = (_g + (int)1);
HXLINE(1328)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)0: case (int)1: case (int)2: case (int)3: {
HXLINE(1456)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE(1457)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE(1459)							if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn() )) {
HXLINE(1461)								{
HXLINE(1461)									 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(1461)									switch((int)(_hx_getEnumValueIndex(_g2))){
            										case (int)0: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(1461)											data1->oPos = (data1->oPos + (int)2);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(1461)											data2->bPos = (data2->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(1461)											data3->iPos = (data3->iPos + (int)1);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(1461)											data4->fPos = (data4->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(1461)											data5->oPos = (data5->oPos + (int)4);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(1461)											data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(1461)											data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(1461)											data8->fPos = (data8->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(1461)											data9->oPos = (data9->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(1461)											data10->fPos = (data10->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(1461)											data11->fPos = (data11->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(1461)											data12->fPos = (data12->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(1461)											data13->fPos = (data13->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(1461)											data14->oPos = (data14->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(1461)											data15->fPos = (data15->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(1461)											data16->fPos = (data16->fPos + (int)5);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(1461)											data17->oPos = (data17->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(1461)											data18->oPos = (data18->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(1461)											data19->oPos = (data19->oPos + (int)2);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(1461)											data20->bPos = (data20->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(1461)											data21->oPos = (data21->oPos + (int)4);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(1461)											data22->iiPos = (data22->iiPos + (int)2);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(1461)											data23->ffPos = (data23->ffPos + (int)1);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(1461)											data24->fPos = (data24->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(1461)											data25->oPos = (data25->oPos + (int)4);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(1461)											data26->iPos = (data26->iPos + (int)1);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(1461)											data27->fPos = (data27->fPos + (int)2);
HXDLIN(1461)											 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(1461)											data28->bPos = (data28->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(1461)											data29->fPos = (data29->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(1461)											data30->fPos = (data30->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(1461)											data31->oPos = (data31->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE(1461)											 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(1461)											data32->oPos = (data32->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1461)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_BITMAP_FILL_dyn();
HXDLIN(1461)								 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(1461)								 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE(1462)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp7 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1462)								 ::openfl::display::BitmapData c1 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(1462)								::cpp::VirtualArray c2 = c->buffer->o;
HXDLIN(1462)								 ::openfl::geom::Matrix c3 = ( ( ::openfl::geom::Matrix)(c2->__get((c->oPos + (int)1))) );
HXDLIN(1462)								bool c4 = c->buffer->b->__get(c->bPos);
HXDLIN(1462)								::Array< bool > c5 = c->buffer->b;
HXDLIN(1462)								_hx_tmp7->beginBitmapFill(c1,c3,c4,c5->__get((c->bPos + (int)1)));
HXLINE(1463)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp8 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1463)								 ::openfl::display::BitmapData c6 = ( ( ::openfl::display::BitmapData)(c->buffer->o->__get(c->oPos)) );
HXDLIN(1463)								::cpp::VirtualArray c7 = c->buffer->o;
HXDLIN(1463)								 ::openfl::geom::Matrix c8 = ( ( ::openfl::geom::Matrix)(c7->__get((c->oPos + (int)1))) );
HXDLIN(1463)								bool c9 = c->buffer->b->__get(c->bPos);
HXDLIN(1463)								::Array< bool > c10 = c->buffer->b;
HXDLIN(1463)								_hx_tmp8->beginBitmapFill(c6,c8,c9,c10->__get((c->bPos + (int)1)));
            							}
            							else {
HXLINE(1465)								if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn() )) {
HXLINE(1467)									{
HXLINE(1467)										 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(1467)										switch((int)(_hx_getEnumValueIndex(_g3))){
            											case (int)0: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(1467)												data33->oPos = (data33->oPos + (int)2);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(1467)												data34->bPos = (data34->bPos + (int)2);
            											}
            											break;
            											case (int)1: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(1467)												data35->iPos = (data35->iPos + (int)1);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(1467)												data36->fPos = (data36->fPos + (int)1);
            											}
            											break;
            											case (int)2: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(1467)												data37->oPos = (data37->oPos + (int)4);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(1467)												data38->iiPos = (data38->iiPos + (int)2);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(1467)												data39->ffPos = (data39->ffPos + (int)1);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(1467)												data40->fPos = (data40->fPos + (int)1);
            											}
            											break;
            											case (int)3: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(1467)												data41->oPos = (data41->oPos + (int)1);
            											}
            											break;
            											case (int)4: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(1467)												data42->fPos = (data42->fPos + (int)6);
            											}
            											break;
            											case (int)5: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(1467)												data43->fPos = (data43->fPos + (int)4);
            											}
            											break;
            											case (int)6: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(1467)												data44->fPos = (data44->fPos + (int)3);
            											}
            											break;
            											case (int)7: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(1467)												data45->fPos = (data45->fPos + (int)4);
            											}
            											break;
            											case (int)8: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(1467)												data46->oPos = (data46->oPos + (int)3);
            											}
            											break;
            											case (int)9: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(1467)												data47->fPos = (data47->fPos + (int)4);
            											}
            											break;
            											case (int)10: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(1467)												data48->fPos = (data48->fPos + (int)5);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(1467)												data49->oPos = (data49->oPos + (int)1);
            											}
            											break;
            											case (int)12: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(1467)												data50->oPos = (data50->oPos + (int)4);
            											}
            											break;
            											case (int)13: {
            											}
            											break;
            											case (int)14: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(1467)												data51->oPos = (data51->oPos + (int)2);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(1467)												data52->bPos = (data52->bPos + (int)2);
            											}
            											break;
            											case (int)15: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(1467)												data53->oPos = (data53->oPos + (int)4);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(1467)												data54->iiPos = (data54->iiPos + (int)2);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(1467)												data55->ffPos = (data55->ffPos + (int)1);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(1467)												data56->fPos = (data56->fPos + (int)1);
            											}
            											break;
            											case (int)16: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(1467)												data57->oPos = (data57->oPos + (int)4);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(1467)												data58->iPos = (data58->iPos + (int)1);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(1467)												data59->fPos = (data59->fPos + (int)2);
HXDLIN(1467)												 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(1467)												data60->bPos = (data60->bPos + (int)1);
            											}
            											break;
            											case (int)17: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(1467)												data61->fPos = (data61->fPos + (int)2);
            											}
            											break;
            											case (int)18: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(1467)												data62->fPos = (data62->fPos + (int)2);
            											}
            											break;
            											case (int)19: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(1467)												data63->oPos = (data63->oPos + (int)1);
            											}
            											break;
            											case (int)20: {
HXLINE(1467)												 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(1467)												data64->oPos = (data64->oPos + (int)1);
            											}
            											break;
            											case (int)21: case (int)22: {
            											}
            											break;
            											default:{
            											}
            										}
            									}
HXLINE(1467)									data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_GRADIENT_FILL_dyn();
HXDLIN(1467)									 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(1467)									 ::openfl::_internal::renderer::DrawCommandReader c11 = this2;
HXLINE(1468)									::Array< ::Dynamic> c12 = c11->buffer->ii;
HXDLIN(1468)									::cpp::VirtualArray c13 = c11->buffer->o;
HXDLIN(1468)									::cpp::VirtualArray c14 = c11->buffer->o;
HXDLIN(1468)									::cpp::VirtualArray c15 = c11->buffer->o;
HXDLIN(1468)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c12->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c13->__get((c11->oPos + (int)1))) ),c14->__get((c11->oPos + (int)2)),c15->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
HXLINE(1469)									::Array< ::Dynamic> c16 = c11->buffer->ii;
HXDLIN(1469)									::cpp::VirtualArray c17 = c11->buffer->o;
HXDLIN(1469)									::cpp::VirtualArray c18 = c11->buffer->o;
HXDLIN(1469)									::cpp::VirtualArray c19 = c11->buffer->o;
HXDLIN(1469)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginGradientFill(c11->buffer->o->__get(c11->oPos),c11->buffer->ii->__get(c11->iiPos).StaticCast< ::Array< int > >(),c11->buffer->ff->__get(c11->ffPos).StaticCast< ::Array< Float > >(),c16->__get((c11->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c17->__get((c11->oPos + (int)1))) ),c18->__get((c11->oPos + (int)2)),c19->__get((c11->oPos + (int)3)),c11->buffer->f->__get(c11->fPos));
            								}
            								else {
HXLINE(1471)									if (hx::IsEq( type,::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn() )) {
HXLINE(1473)										{
HXLINE(1473)											 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(1473)											switch((int)(_hx_getEnumValueIndex(_g4))){
            												case (int)0: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(1473)													data65->oPos = (data65->oPos + (int)2);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(1473)													data66->bPos = (data66->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(1473)													data67->iPos = (data67->iPos + (int)1);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(1473)													data68->fPos = (data68->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(1473)													data69->oPos = (data69->oPos + (int)4);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(1473)													data70->iiPos = (data70->iiPos + (int)2);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(1473)													data71->ffPos = (data71->ffPos + (int)1);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(1473)													data72->fPos = (data72->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(1473)													data73->oPos = (data73->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(1473)													data74->fPos = (data74->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(1473)													data75->fPos = (data75->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(1473)													data76->fPos = (data76->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(1473)													data77->fPos = (data77->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(1473)													data78->oPos = (data78->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(1473)													data79->fPos = (data79->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(1473)													data80->fPos = (data80->fPos + (int)5);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(1473)													data81->oPos = (data81->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(1473)													data82->oPos = (data82->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(1473)													data83->oPos = (data83->oPos + (int)2);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(1473)													data84->bPos = (data84->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(1473)													data85->oPos = (data85->oPos + (int)4);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(1473)													data86->iiPos = (data86->iiPos + (int)2);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(1473)													data87->ffPos = (data87->ffPos + (int)1);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(1473)													data88->fPos = (data88->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(1473)													data89->oPos = (data89->oPos + (int)4);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(1473)													data90->iPos = (data90->iPos + (int)1);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(1473)													data91->fPos = (data91->fPos + (int)2);
HXDLIN(1473)													 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(1473)													data92->bPos = (data92->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(1473)													data93->fPos = (data93->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(1473)													data94->fPos = (data94->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(1473)													data95->oPos = (data95->oPos + (int)1);
            												}
            												break;
            												case (int)20: {
HXLINE(1473)													 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(1473)													data96->oPos = (data96->oPos + (int)1);
            												}
            												break;
            												case (int)21: case (int)22: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE(1473)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_SHADER_FILL_dyn();
HXDLIN(1473)										 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(1473)										 ::openfl::_internal::renderer::DrawCommandReader c20 = this3;
HXLINE(1474)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
HXLINE(1475)										::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->beginShaderFill(( ( ::openfl::_internal::renderer::ShaderBuffer)(c20->buffer->o->__get(c20->oPos)) ));
            									}
            									else {
HXLINE(1479)										{
HXLINE(1479)											 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(1479)											switch((int)(_hx_getEnumValueIndex(_g5))){
            												case (int)0: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(1479)													data97->oPos = (data97->oPos + (int)2);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(1479)													data98->bPos = (data98->bPos + (int)2);
            												}
            												break;
            												case (int)1: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(1479)													data99->iPos = (data99->iPos + (int)1);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(1479)													data100->fPos = (data100->fPos + (int)1);
            												}
            												break;
            												case (int)2: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(1479)													data101->oPos = (data101->oPos + (int)4);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(1479)													data102->iiPos = (data102->iiPos + (int)2);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(1479)													data103->ffPos = (data103->ffPos + (int)1);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(1479)													data104->fPos = (data104->fPos + (int)1);
            												}
            												break;
            												case (int)3: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(1479)													data105->oPos = (data105->oPos + (int)1);
            												}
            												break;
            												case (int)4: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(1479)													data106->fPos = (data106->fPos + (int)6);
            												}
            												break;
            												case (int)5: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(1479)													data107->fPos = (data107->fPos + (int)4);
            												}
            												break;
            												case (int)6: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(1479)													data108->fPos = (data108->fPos + (int)3);
            												}
            												break;
            												case (int)7: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(1479)													data109->fPos = (data109->fPos + (int)4);
            												}
            												break;
            												case (int)8: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(1479)													data110->oPos = (data110->oPos + (int)3);
            												}
            												break;
            												case (int)9: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(1479)													data111->fPos = (data111->fPos + (int)4);
            												}
            												break;
            												case (int)10: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(1479)													data112->fPos = (data112->fPos + (int)5);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(1479)													data113->oPos = (data113->oPos + (int)1);
            												}
            												break;
            												case (int)12: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(1479)													data114->oPos = (data114->oPos + (int)4);
            												}
            												break;
            												case (int)13: {
            												}
            												break;
            												case (int)14: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(1479)													data115->oPos = (data115->oPos + (int)2);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(1479)													data116->bPos = (data116->bPos + (int)2);
            												}
            												break;
            												case (int)15: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(1479)													data117->oPos = (data117->oPos + (int)4);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(1479)													data118->iiPos = (data118->iiPos + (int)2);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(1479)													data119->ffPos = (data119->ffPos + (int)1);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(1479)													data120->fPos = (data120->fPos + (int)1);
            												}
            												break;
            												case (int)16: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(1479)													data121->oPos = (data121->oPos + (int)4);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(1479)													data122->iPos = (data122->iPos + (int)1);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(1479)													data123->fPos = (data123->fPos + (int)2);
HXDLIN(1479)													 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(1479)													data124->bPos = (data124->bPos + (int)1);
            												}
            												break;
            												case (int)17: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(1479)													data125->fPos = (data125->fPos + (int)2);
            												}
            												break;
            												case (int)18: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(1479)													data126->fPos = (data126->fPos + (int)2);
            												}
            												break;
            												case (int)19: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(1479)													data127->oPos = (data127->oPos + (int)1);
            												}
            												break;
            												case (int)20: {
HXLINE(1479)													 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(1479)													data128->oPos = (data128->oPos + (int)1);
            												}
            												break;
            												case (int)21: case (int)22: {
            												}
            												break;
            												default:{
            												}
            											}
            										}
HXLINE(1479)										data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::BEGIN_FILL_dyn();
HXDLIN(1479)										 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(1479)										 ::openfl::_internal::renderer::DrawCommandReader c21 = this4;
HXLINE(1480)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1480)										int c22 = c21->buffer->i->__get(c21->iPos);
HXDLIN(1480)										_hx_tmp9->beginFill(c22,c21->buffer->f->__get(c21->fPos));
HXLINE(1481)										 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp10 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1481)										int c23 = c21->buffer->i->__get(c21->iPos);
HXDLIN(1481)										_hx_tmp10->beginFill(c23,c21->buffer->f->__get(c21->fPos));
            									}
            								}
            							}
            						}
            						break;
            						case (int)4: {
HXLINE(1332)							{
HXLINE(1332)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(1332)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(1332)										data129->oPos = (data129->oPos + (int)2);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(1332)										data130->bPos = (data130->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(1332)										data131->iPos = (data131->iPos + (int)1);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(1332)										data132->fPos = (data132->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(1332)										data133->oPos = (data133->oPos + (int)4);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(1332)										data134->iiPos = (data134->iiPos + (int)2);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(1332)										data135->ffPos = (data135->ffPos + (int)1);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(1332)										data136->fPos = (data136->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(1332)										data137->oPos = (data137->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(1332)										data138->fPos = (data138->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(1332)										data139->fPos = (data139->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(1332)										data140->fPos = (data140->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(1332)										data141->fPos = (data141->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(1332)										data142->oPos = (data142->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(1332)										data143->fPos = (data143->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(1332)										data144->fPos = (data144->fPos + (int)5);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(1332)										data145->oPos = (data145->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(1332)										data146->oPos = (data146->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(1332)										data147->oPos = (data147->oPos + (int)2);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(1332)										data148->bPos = (data148->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(1332)										data149->oPos = (data149->oPos + (int)4);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(1332)										data150->iiPos = (data150->iiPos + (int)2);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(1332)										data151->ffPos = (data151->ffPos + (int)1);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(1332)										data152->fPos = (data152->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(1332)										data153->oPos = (data153->oPos + (int)4);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(1332)										data154->iPos = (data154->iPos + (int)1);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(1332)										data155->fPos = (data155->fPos + (int)2);
HXDLIN(1332)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(1332)										data156->bPos = (data156->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(1332)										data157->fPos = (data157->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(1332)										data158->fPos = (data158->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(1332)										data159->oPos = (data159->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1332)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(1332)										data160->oPos = (data160->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1332)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1332)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(1332)							 ::openfl::_internal::renderer::DrawCommandReader c24 = this5;
HXLINE(1333)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp11 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1333)							Float c25 = c24->buffer->f->__get(c24->fPos);
HXDLIN(1333)							::Array< Float > c26 = c24->buffer->f;
HXDLIN(1333)							Float c27 = c26->__get((c24->fPos + (int)1));
HXDLIN(1333)							::Array< Float > c28 = c24->buffer->f;
HXDLIN(1333)							Float c29 = c28->__get((c24->fPos + (int)2));
HXDLIN(1333)							::Array< Float > c30 = c24->buffer->f;
HXDLIN(1333)							Float c31 = c30->__get((c24->fPos + (int)3));
HXDLIN(1333)							::Array< Float > c32 = c24->buffer->f;
HXDLIN(1333)							Float c33 = c32->__get((c24->fPos + (int)4));
HXDLIN(1333)							::Array< Float > c34 = c24->buffer->f;
HXDLIN(1333)							_hx_tmp11->cubicCurveTo(c25,c27,c29,c31,c33,c34->__get((c24->fPos + (int)5)));
HXLINE(1335)							if (hasLineStyle) {
HXLINE(1337)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1337)								Float c35 = c24->buffer->f->__get(c24->fPos);
HXDLIN(1337)								::Array< Float > c36 = c24->buffer->f;
HXDLIN(1337)								Float c37 = c36->__get((c24->fPos + (int)1));
HXDLIN(1337)								::Array< Float > c38 = c24->buffer->f;
HXDLIN(1337)								Float c39 = c38->__get((c24->fPos + (int)2));
HXDLIN(1337)								::Array< Float > c40 = c24->buffer->f;
HXDLIN(1337)								Float c41 = c40->__get((c24->fPos + (int)3));
HXDLIN(1337)								::Array< Float > c42 = c24->buffer->f;
HXDLIN(1337)								Float c43 = c42->__get((c24->fPos + (int)4));
HXDLIN(1337)								::Array< Float > c44 = c24->buffer->f;
HXDLIN(1337)								_hx_tmp12->cubicCurveTo(c35,c37,c39,c41,c43,c44->__get((c24->fPos + (int)5)));
            							}
            							else {
HXLINE(1341)								::Array< Float > c45 = c24->buffer->f;
HXDLIN(1341)								initStrokeX = c45->__get((c24->fPos + (int)4));
HXLINE(1342)								::Array< Float > c46 = c24->buffer->f;
HXDLIN(1342)								initStrokeY = c46->__get((c24->fPos + (int)5));
            							}
            						}
            						break;
            						case (int)5: {
HXLINE(1348)							{
HXLINE(1348)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(1348)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(1348)										data161->oPos = (data161->oPos + (int)2);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(1348)										data162->bPos = (data162->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(1348)										data163->iPos = (data163->iPos + (int)1);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(1348)										data164->fPos = (data164->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(1348)										data165->oPos = (data165->oPos + (int)4);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(1348)										data166->iiPos = (data166->iiPos + (int)2);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(1348)										data167->ffPos = (data167->ffPos + (int)1);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(1348)										data168->fPos = (data168->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(1348)										data169->oPos = (data169->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(1348)										data170->fPos = (data170->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(1348)										data171->fPos = (data171->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(1348)										data172->fPos = (data172->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(1348)										data173->fPos = (data173->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(1348)										data174->oPos = (data174->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(1348)										data175->fPos = (data175->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(1348)										data176->fPos = (data176->fPos + (int)5);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(1348)										data177->oPos = (data177->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(1348)										data178->oPos = (data178->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(1348)										data179->oPos = (data179->oPos + (int)2);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(1348)										data180->bPos = (data180->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(1348)										data181->oPos = (data181->oPos + (int)4);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(1348)										data182->iiPos = (data182->iiPos + (int)2);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(1348)										data183->ffPos = (data183->ffPos + (int)1);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(1348)										data184->fPos = (data184->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(1348)										data185->oPos = (data185->oPos + (int)4);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(1348)										data186->iPos = (data186->iPos + (int)1);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(1348)										data187->fPos = (data187->fPos + (int)2);
HXDLIN(1348)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(1348)										data188->bPos = (data188->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(1348)										data189->fPos = (data189->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(1348)										data190->fPos = (data190->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(1348)										data191->oPos = (data191->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1348)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(1348)										data192->oPos = (data192->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1348)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1348)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(1348)							 ::openfl::_internal::renderer::DrawCommandReader c47 = this6;
HXLINE(1349)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1349)							Float c48 = c47->buffer->f->__get(c47->fPos);
HXDLIN(1349)							::Array< Float > c49 = c47->buffer->f;
HXDLIN(1349)							Float c50 = c49->__get((c47->fPos + (int)1));
HXDLIN(1349)							::Array< Float > c51 = c47->buffer->f;
HXDLIN(1349)							Float c52 = c51->__get((c47->fPos + (int)2));
HXDLIN(1349)							::Array< Float > c53 = c47->buffer->f;
HXDLIN(1349)							_hx_tmp13->curveTo(c48,c50,c52,c53->__get((c47->fPos + (int)3)));
HXLINE(1351)							if (hasLineStyle) {
HXLINE(1353)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1353)								Float c54 = c47->buffer->f->__get(c47->fPos);
HXDLIN(1353)								::Array< Float > c55 = c47->buffer->f;
HXDLIN(1353)								Float c56 = c55->__get((c47->fPos + (int)1));
HXDLIN(1353)								::Array< Float > c57 = c47->buffer->f;
HXDLIN(1353)								Float c58 = c57->__get((c47->fPos + (int)2));
HXDLIN(1353)								::Array< Float > c59 = c47->buffer->f;
HXDLIN(1353)								_hx_tmp14->curveTo(c54,c56,c58,c59->__get((c47->fPos + (int)3)));
            							}
            							else {
HXLINE(1357)								::Array< Float > c60 = c47->buffer->f;
HXDLIN(1357)								initStrokeX = c60->__get((c47->fPos + (int)2));
HXLINE(1358)								::Array< Float > c61 = c47->buffer->f;
HXDLIN(1358)								initStrokeY = c61->__get((c47->fPos + (int)3));
            							}
            						}
            						break;
            						case (int)6: {
HXLINE(1487)							{
HXLINE(1487)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(1487)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(1487)										data193->oPos = (data193->oPos + (int)2);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(1487)										data194->bPos = (data194->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(1487)										data195->iPos = (data195->iPos + (int)1);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(1487)										data196->fPos = (data196->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(1487)										data197->oPos = (data197->oPos + (int)4);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(1487)										data198->iiPos = (data198->iiPos + (int)2);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(1487)										data199->ffPos = (data199->ffPos + (int)1);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(1487)										data200->fPos = (data200->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(1487)										data201->oPos = (data201->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(1487)										data202->fPos = (data202->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(1487)										data203->fPos = (data203->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(1487)										data204->fPos = (data204->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(1487)										data205->fPos = (data205->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(1487)										data206->oPos = (data206->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(1487)										data207->fPos = (data207->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(1487)										data208->fPos = (data208->fPos + (int)5);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(1487)										data209->oPos = (data209->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(1487)										data210->oPos = (data210->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(1487)										data211->oPos = (data211->oPos + (int)2);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(1487)										data212->bPos = (data212->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(1487)										data213->oPos = (data213->oPos + (int)4);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(1487)										data214->iiPos = (data214->iiPos + (int)2);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(1487)										data215->ffPos = (data215->ffPos + (int)1);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(1487)										data216->fPos = (data216->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(1487)										data217->oPos = (data217->oPos + (int)4);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(1487)										data218->iPos = (data218->iPos + (int)1);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(1487)										data219->fPos = (data219->fPos + (int)2);
HXDLIN(1487)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(1487)										data220->bPos = (data220->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(1487)										data221->fPos = (data221->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(1487)										data222->fPos = (data222->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(1487)										data223->oPos = (data223->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1487)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(1487)										data224->oPos = (data224->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1487)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1487)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(1487)							 ::openfl::_internal::renderer::DrawCommandReader c62 = this7;
HXLINE(1488)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1488)							Float c63 = c62->buffer->f->__get(c62->fPos);
HXDLIN(1488)							::Array< Float > c64 = c62->buffer->f;
HXDLIN(1488)							Float c65 = c64->__get((c62->fPos + (int)1));
HXDLIN(1488)							::Array< Float > c66 = c62->buffer->f;
HXDLIN(1488)							_hx_tmp15->drawCircle(c63,c65,c66->__get((c62->fPos + (int)2)));
HXLINE(1490)							if (hasLineStyle) {
HXLINE(1492)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1492)								Float c67 = c62->buffer->f->__get(c62->fPos);
HXDLIN(1492)								::Array< Float > c68 = c62->buffer->f;
HXDLIN(1492)								Float c69 = c68->__get((c62->fPos + (int)1));
HXDLIN(1492)								::Array< Float > c70 = c62->buffer->f;
HXDLIN(1492)								_hx_tmp16->drawCircle(c67,c69,c70->__get((c62->fPos + (int)2)));
            							}
            						}
            						break;
            						case (int)7: {
HXLINE(1498)							{
HXLINE(1498)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(1498)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(1498)										data225->oPos = (data225->oPos + (int)2);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(1498)										data226->bPos = (data226->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(1498)										data227->iPos = (data227->iPos + (int)1);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(1498)										data228->fPos = (data228->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(1498)										data229->oPos = (data229->oPos + (int)4);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(1498)										data230->iiPos = (data230->iiPos + (int)2);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(1498)										data231->ffPos = (data231->ffPos + (int)1);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(1498)										data232->fPos = (data232->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(1498)										data233->oPos = (data233->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(1498)										data234->fPos = (data234->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(1498)										data235->fPos = (data235->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(1498)										data236->fPos = (data236->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(1498)										data237->fPos = (data237->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(1498)										data238->oPos = (data238->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(1498)										data239->fPos = (data239->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(1498)										data240->fPos = (data240->fPos + (int)5);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(1498)										data241->oPos = (data241->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(1498)										data242->oPos = (data242->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(1498)										data243->oPos = (data243->oPos + (int)2);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(1498)										data244->bPos = (data244->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(1498)										data245->oPos = (data245->oPos + (int)4);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(1498)										data246->iiPos = (data246->iiPos + (int)2);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(1498)										data247->ffPos = (data247->ffPos + (int)1);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(1498)										data248->fPos = (data248->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(1498)										data249->oPos = (data249->oPos + (int)4);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(1498)										data250->iPos = (data250->iPos + (int)1);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(1498)										data251->fPos = (data251->fPos + (int)2);
HXDLIN(1498)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(1498)										data252->bPos = (data252->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(1498)										data253->fPos = (data253->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(1498)										data254->fPos = (data254->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(1498)										data255->oPos = (data255->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1498)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(1498)										data256->oPos = (data256->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1498)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1498)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(1498)							 ::openfl::_internal::renderer::DrawCommandReader c71 = this8;
HXLINE(1499)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp17 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1499)							Float c72 = c71->buffer->f->__get(c71->fPos);
HXDLIN(1499)							::Array< Float > c73 = c71->buffer->f;
HXDLIN(1499)							Float c74 = c73->__get((c71->fPos + (int)1));
HXDLIN(1499)							::Array< Float > c75 = c71->buffer->f;
HXDLIN(1499)							Float c76 = c75->__get((c71->fPos + (int)2));
HXDLIN(1499)							::Array< Float > c77 = c71->buffer->f;
HXDLIN(1499)							_hx_tmp17->drawEllipse(c72,c74,c76,c77->__get((c71->fPos + (int)3)));
HXLINE(1501)							if (hasLineStyle) {
HXLINE(1503)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp18 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1503)								Float c78 = c71->buffer->f->__get(c71->fPos);
HXDLIN(1503)								::Array< Float > c79 = c71->buffer->f;
HXDLIN(1503)								Float c80 = c79->__get((c71->fPos + (int)1));
HXDLIN(1503)								::Array< Float > c81 = c71->buffer->f;
HXDLIN(1503)								Float c82 = c81->__get((c71->fPos + (int)2));
HXDLIN(1503)								::Array< Float > c83 = c71->buffer->f;
HXDLIN(1503)								_hx_tmp18->drawEllipse(c78,c80,c82,c83->__get((c71->fPos + (int)3)));
            							}
            						}
            						break;
            						case (int)8: {
HXLINE(1531)							{
HXLINE(1531)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(1531)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(1531)										data257->oPos = (data257->oPos + (int)2);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(1531)										data258->bPos = (data258->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(1531)										data259->iPos = (data259->iPos + (int)1);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(1531)										data260->fPos = (data260->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(1531)										data261->oPos = (data261->oPos + (int)4);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(1531)										data262->iiPos = (data262->iiPos + (int)2);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(1531)										data263->ffPos = (data263->ffPos + (int)1);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(1531)										data264->fPos = (data264->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(1531)										data265->oPos = (data265->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(1531)										data266->fPos = (data266->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(1531)										data267->fPos = (data267->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(1531)										data268->fPos = (data268->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(1531)										data269->fPos = (data269->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(1531)										data270->oPos = (data270->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(1531)										data271->fPos = (data271->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(1531)										data272->fPos = (data272->fPos + (int)5);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(1531)										data273->oPos = (data273->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(1531)										data274->oPos = (data274->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(1531)										data275->oPos = (data275->oPos + (int)2);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(1531)										data276->bPos = (data276->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(1531)										data277->oPos = (data277->oPos + (int)4);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(1531)										data278->iiPos = (data278->iiPos + (int)2);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(1531)										data279->ffPos = (data279->ffPos + (int)1);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN(1531)										data280->fPos = (data280->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN(1531)										data281->oPos = (data281->oPos + (int)4);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN(1531)										data282->iPos = (data282->iPos + (int)1);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN(1531)										data283->fPos = (data283->fPos + (int)2);
HXDLIN(1531)										 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN(1531)										data284->bPos = (data284->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN(1531)										data285->fPos = (data285->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN(1531)										data286->fPos = (data286->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN(1531)										data287->oPos = (data287->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1531)										 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN(1531)										data288->oPos = (data288->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1531)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_QUADS_dyn();
HXDLIN(1531)							 ::openfl::_internal::renderer::DrawCommandReader this9 = data;
HXDLIN(1531)							 ::openfl::_internal::renderer::DrawCommandReader c84 = this9;
HXLINE(1532)							::cpp::VirtualArray c85 = c84->buffer->o;
HXDLIN(1532)							::cpp::VirtualArray c86 = c84->buffer->o;
HXDLIN(1532)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->drawQuads(( ( ::openfl::_Vector::FloatVector)(c84->buffer->o->__get(c84->oPos)) ),( ( ::openfl::_Vector::IntVector)(c85->__get((c84->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c86->__get((c84->oPos + (int)2))) ));
            						}
            						break;
            						case (int)9: {
HXLINE(1509)							{
HXLINE(1509)								 ::openfl::_internal::renderer::DrawCommandType _g11 = data->prev;
HXDLIN(1509)								switch((int)(_hx_getEnumValueIndex(_g11))){
            									case (int)0: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data289 = data;
HXDLIN(1509)										data289->oPos = (data289->oPos + (int)2);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data290 = data;
HXDLIN(1509)										data290->bPos = (data290->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data291 = data;
HXDLIN(1509)										data291->iPos = (data291->iPos + (int)1);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data292 = data;
HXDLIN(1509)										data292->fPos = (data292->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data293 = data;
HXDLIN(1509)										data293->oPos = (data293->oPos + (int)4);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data294 = data;
HXDLIN(1509)										data294->iiPos = (data294->iiPos + (int)2);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data295 = data;
HXDLIN(1509)										data295->ffPos = (data295->ffPos + (int)1);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data296 = data;
HXDLIN(1509)										data296->fPos = (data296->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data297 = data;
HXDLIN(1509)										data297->oPos = (data297->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data298 = data;
HXDLIN(1509)										data298->fPos = (data298->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data299 = data;
HXDLIN(1509)										data299->fPos = (data299->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data300 = data;
HXDLIN(1509)										data300->fPos = (data300->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data301 = data;
HXDLIN(1509)										data301->fPos = (data301->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data302 = data;
HXDLIN(1509)										data302->oPos = (data302->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data303 = data;
HXDLIN(1509)										data303->fPos = (data303->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data304 = data;
HXDLIN(1509)										data304->fPos = (data304->fPos + (int)5);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data305 = data;
HXDLIN(1509)										data305->oPos = (data305->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data306 = data;
HXDLIN(1509)										data306->oPos = (data306->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data307 = data;
HXDLIN(1509)										data307->oPos = (data307->oPos + (int)2);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data308 = data;
HXDLIN(1509)										data308->bPos = (data308->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data309 = data;
HXDLIN(1509)										data309->oPos = (data309->oPos + (int)4);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data310 = data;
HXDLIN(1509)										data310->iiPos = (data310->iiPos + (int)2);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data311 = data;
HXDLIN(1509)										data311->ffPos = (data311->ffPos + (int)1);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data312 = data;
HXDLIN(1509)										data312->fPos = (data312->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data313 = data;
HXDLIN(1509)										data313->oPos = (data313->oPos + (int)4);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data314 = data;
HXDLIN(1509)										data314->iPos = (data314->iPos + (int)1);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data315 = data;
HXDLIN(1509)										data315->fPos = (data315->fPos + (int)2);
HXDLIN(1509)										 ::openfl::_internal::renderer::DrawCommandReader data316 = data;
HXDLIN(1509)										data316->bPos = (data316->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data317 = data;
HXDLIN(1509)										data317->fPos = (data317->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data318 = data;
HXDLIN(1509)										data318->fPos = (data318->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data319 = data;
HXDLIN(1509)										data319->oPos = (data319->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1509)										 ::openfl::_internal::renderer::DrawCommandReader data320 = data;
HXDLIN(1509)										data320->oPos = (data320->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1509)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1509)							 ::openfl::_internal::renderer::DrawCommandReader this10 = data;
HXDLIN(1509)							 ::openfl::_internal::renderer::DrawCommandReader c87 = this10;
HXLINE(1510)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp19 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1510)							Float c88 = c87->buffer->f->__get(c87->fPos);
HXDLIN(1510)							::Array< Float > c89 = c87->buffer->f;
HXDLIN(1510)							Float c90 = c89->__get((c87->fPos + (int)1));
HXDLIN(1510)							::Array< Float > c91 = c87->buffer->f;
HXDLIN(1510)							Float c92 = c91->__get((c87->fPos + (int)2));
HXDLIN(1510)							::Array< Float > c93 = c87->buffer->f;
HXDLIN(1510)							_hx_tmp19->drawRect(c88,c90,c92,c93->__get((c87->fPos + (int)3)));
HXLINE(1512)							if (hasLineStyle) {
HXLINE(1514)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp20 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1514)								Float c94 = c87->buffer->f->__get(c87->fPos);
HXDLIN(1514)								::Array< Float > c95 = c87->buffer->f;
HXDLIN(1514)								Float c96 = c95->__get((c87->fPos + (int)1));
HXDLIN(1514)								::Array< Float > c97 = c87->buffer->f;
HXDLIN(1514)								Float c98 = c97->__get((c87->fPos + (int)2));
HXDLIN(1514)								::Array< Float > c99 = c87->buffer->f;
HXDLIN(1514)								_hx_tmp20->drawRect(c94,c96,c98,c99->__get((c87->fPos + (int)3)));
            							}
            						}
            						break;
            						case (int)10: {
HXLINE(1520)							{
HXLINE(1520)								 ::openfl::_internal::renderer::DrawCommandType _g12 = data->prev;
HXDLIN(1520)								switch((int)(_hx_getEnumValueIndex(_g12))){
            									case (int)0: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data321 = data;
HXDLIN(1520)										data321->oPos = (data321->oPos + (int)2);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data322 = data;
HXDLIN(1520)										data322->bPos = (data322->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data323 = data;
HXDLIN(1520)										data323->iPos = (data323->iPos + (int)1);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data324 = data;
HXDLIN(1520)										data324->fPos = (data324->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data325 = data;
HXDLIN(1520)										data325->oPos = (data325->oPos + (int)4);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data326 = data;
HXDLIN(1520)										data326->iiPos = (data326->iiPos + (int)2);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data327 = data;
HXDLIN(1520)										data327->ffPos = (data327->ffPos + (int)1);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data328 = data;
HXDLIN(1520)										data328->fPos = (data328->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data329 = data;
HXDLIN(1520)										data329->oPos = (data329->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data330 = data;
HXDLIN(1520)										data330->fPos = (data330->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data331 = data;
HXDLIN(1520)										data331->fPos = (data331->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data332 = data;
HXDLIN(1520)										data332->fPos = (data332->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data333 = data;
HXDLIN(1520)										data333->fPos = (data333->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data334 = data;
HXDLIN(1520)										data334->oPos = (data334->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data335 = data;
HXDLIN(1520)										data335->fPos = (data335->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data336 = data;
HXDLIN(1520)										data336->fPos = (data336->fPos + (int)5);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data337 = data;
HXDLIN(1520)										data337->oPos = (data337->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data338 = data;
HXDLIN(1520)										data338->oPos = (data338->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data339 = data;
HXDLIN(1520)										data339->oPos = (data339->oPos + (int)2);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data340 = data;
HXDLIN(1520)										data340->bPos = (data340->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data341 = data;
HXDLIN(1520)										data341->oPos = (data341->oPos + (int)4);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data342 = data;
HXDLIN(1520)										data342->iiPos = (data342->iiPos + (int)2);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data343 = data;
HXDLIN(1520)										data343->ffPos = (data343->ffPos + (int)1);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data344 = data;
HXDLIN(1520)										data344->fPos = (data344->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data345 = data;
HXDLIN(1520)										data345->oPos = (data345->oPos + (int)4);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data346 = data;
HXDLIN(1520)										data346->iPos = (data346->iPos + (int)1);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data347 = data;
HXDLIN(1520)										data347->fPos = (data347->fPos + (int)2);
HXDLIN(1520)										 ::openfl::_internal::renderer::DrawCommandReader data348 = data;
HXDLIN(1520)										data348->bPos = (data348->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data349 = data;
HXDLIN(1520)										data349->fPos = (data349->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data350 = data;
HXDLIN(1520)										data350->fPos = (data350->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data351 = data;
HXDLIN(1520)										data351->oPos = (data351->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1520)										 ::openfl::_internal::renderer::DrawCommandReader data352 = data;
HXDLIN(1520)										data352->oPos = (data352->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1520)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1520)							 ::openfl::_internal::renderer::DrawCommandReader this11 = data;
HXDLIN(1520)							 ::openfl::_internal::renderer::DrawCommandReader c100 = this11;
HXLINE(1521)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1521)							Float c101 = c100->buffer->f->__get(c100->fPos);
HXDLIN(1521)							::Array< Float > c102 = c100->buffer->f;
HXDLIN(1521)							Float c103 = c102->__get((c100->fPos + (int)1));
HXDLIN(1521)							::Array< Float > c104 = c100->buffer->f;
HXDLIN(1521)							Float c105 = c104->__get((c100->fPos + (int)2));
HXDLIN(1521)							::Array< Float > c106 = c100->buffer->f;
HXDLIN(1521)							Float c107 = c106->__get((c100->fPos + (int)3));
HXDLIN(1521)							::Array< Float > c108 = c100->buffer->f;
HXDLIN(1521)							_hx_tmp21->drawRoundRect(c101,c103,c105,c107,c108->__get((c100->fPos + (int)4)),c100->buffer->o->__get(c100->oPos));
HXLINE(1523)							if (hasLineStyle) {
HXLINE(1525)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp22 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1525)								Float c109 = c100->buffer->f->__get(c100->fPos);
HXDLIN(1525)								::Array< Float > c110 = c100->buffer->f;
HXDLIN(1525)								Float c111 = c110->__get((c100->fPos + (int)1));
HXDLIN(1525)								::Array< Float > c112 = c100->buffer->f;
HXDLIN(1525)								Float c113 = c112->__get((c100->fPos + (int)2));
HXDLIN(1525)								::Array< Float > c114 = c100->buffer->f;
HXDLIN(1525)								Float c115 = c114->__get((c100->fPos + (int)3));
HXDLIN(1525)								::Array< Float > c116 = c100->buffer->f;
HXDLIN(1525)								_hx_tmp22->drawRoundRect(c109,c111,c113,c115,c116->__get((c100->fPos + (int)4)),c100->buffer->o->__get(c100->oPos));
            							}
            						}
            						break;
            						case (int)12: {
HXLINE(1536)							{
HXLINE(1536)								 ::openfl::_internal::renderer::DrawCommandType _g13 = data->prev;
HXDLIN(1536)								switch((int)(_hx_getEnumValueIndex(_g13))){
            									case (int)0: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data353 = data;
HXDLIN(1536)										data353->oPos = (data353->oPos + (int)2);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data354 = data;
HXDLIN(1536)										data354->bPos = (data354->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data355 = data;
HXDLIN(1536)										data355->iPos = (data355->iPos + (int)1);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data356 = data;
HXDLIN(1536)										data356->fPos = (data356->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data357 = data;
HXDLIN(1536)										data357->oPos = (data357->oPos + (int)4);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data358 = data;
HXDLIN(1536)										data358->iiPos = (data358->iiPos + (int)2);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data359 = data;
HXDLIN(1536)										data359->ffPos = (data359->ffPos + (int)1);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data360 = data;
HXDLIN(1536)										data360->fPos = (data360->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data361 = data;
HXDLIN(1536)										data361->oPos = (data361->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data362 = data;
HXDLIN(1536)										data362->fPos = (data362->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data363 = data;
HXDLIN(1536)										data363->fPos = (data363->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data364 = data;
HXDLIN(1536)										data364->fPos = (data364->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data365 = data;
HXDLIN(1536)										data365->fPos = (data365->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data366 = data;
HXDLIN(1536)										data366->oPos = (data366->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data367 = data;
HXDLIN(1536)										data367->fPos = (data367->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data368 = data;
HXDLIN(1536)										data368->fPos = (data368->fPos + (int)5);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data369 = data;
HXDLIN(1536)										data369->oPos = (data369->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data370 = data;
HXDLIN(1536)										data370->oPos = (data370->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data371 = data;
HXDLIN(1536)										data371->oPos = (data371->oPos + (int)2);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data372 = data;
HXDLIN(1536)										data372->bPos = (data372->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data373 = data;
HXDLIN(1536)										data373->oPos = (data373->oPos + (int)4);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data374 = data;
HXDLIN(1536)										data374->iiPos = (data374->iiPos + (int)2);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data375 = data;
HXDLIN(1536)										data375->ffPos = (data375->ffPos + (int)1);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data376 = data;
HXDLIN(1536)										data376->fPos = (data376->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data377 = data;
HXDLIN(1536)										data377->oPos = (data377->oPos + (int)4);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data378 = data;
HXDLIN(1536)										data378->iPos = (data378->iPos + (int)1);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data379 = data;
HXDLIN(1536)										data379->fPos = (data379->fPos + (int)2);
HXDLIN(1536)										 ::openfl::_internal::renderer::DrawCommandReader data380 = data;
HXDLIN(1536)										data380->bPos = (data380->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data381 = data;
HXDLIN(1536)										data381->fPos = (data381->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data382 = data;
HXDLIN(1536)										data382->fPos = (data382->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data383 = data;
HXDLIN(1536)										data383->oPos = (data383->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1536)										 ::openfl::_internal::renderer::DrawCommandReader data384 = data;
HXDLIN(1536)										data384->oPos = (data384->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1536)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_TRIANGLES_dyn();
HXDLIN(1536)							 ::openfl::_internal::renderer::DrawCommandReader this12 = data;
HXDLIN(1536)							 ::openfl::_internal::renderer::DrawCommandReader c117 = this12;
HXLINE(1537)							::cpp::VirtualArray c118 = c117->buffer->o;
HXDLIN(1537)							::cpp::VirtualArray c119 = c117->buffer->o;
HXDLIN(1537)							::cpp::VirtualArray c120 = c117->buffer->o;
HXDLIN(1537)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->drawTriangles(( ( ::openfl::_Vector::FloatVector)(c117->buffer->o->__get(c117->oPos)) ),( ( ::openfl::_Vector::IntVector)(c118->__get((c117->oPos + (int)1))) ),( ( ::openfl::_Vector::FloatVector)(c119->__get((c117->oPos + (int)2))) ),c120->__get((c117->oPos + (int)3)));
            						}
            						break;
            						case (int)13: {
HXLINE(1396)							{
HXLINE(1396)								{
HXLINE(1396)									 ::openfl::_internal::renderer::DrawCommandType _g14 = data->prev;
HXDLIN(1396)									switch((int)(_hx_getEnumValueIndex(_g14))){
            										case (int)0: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data385 = data;
HXDLIN(1396)											data385->oPos = (data385->oPos + (int)2);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data386 = data;
HXDLIN(1396)											data386->bPos = (data386->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data387 = data;
HXDLIN(1396)											data387->iPos = (data387->iPos + (int)1);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data388 = data;
HXDLIN(1396)											data388->fPos = (data388->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data389 = data;
HXDLIN(1396)											data389->oPos = (data389->oPos + (int)4);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data390 = data;
HXDLIN(1396)											data390->iiPos = (data390->iiPos + (int)2);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data391 = data;
HXDLIN(1396)											data391->ffPos = (data391->ffPos + (int)1);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data392 = data;
HXDLIN(1396)											data392->fPos = (data392->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data393 = data;
HXDLIN(1396)											data393->oPos = (data393->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data394 = data;
HXDLIN(1396)											data394->fPos = (data394->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data395 = data;
HXDLIN(1396)											data395->fPos = (data395->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data396 = data;
HXDLIN(1396)											data396->fPos = (data396->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data397 = data;
HXDLIN(1396)											data397->fPos = (data397->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data398 = data;
HXDLIN(1396)											data398->oPos = (data398->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data399 = data;
HXDLIN(1396)											data399->fPos = (data399->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data400 = data;
HXDLIN(1396)											data400->fPos = (data400->fPos + (int)5);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data401 = data;
HXDLIN(1396)											data401->oPos = (data401->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data402 = data;
HXDLIN(1396)											data402->oPos = (data402->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data403 = data;
HXDLIN(1396)											data403->oPos = (data403->oPos + (int)2);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data404 = data;
HXDLIN(1396)											data404->bPos = (data404->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data405 = data;
HXDLIN(1396)											data405->oPos = (data405->oPos + (int)4);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data406 = data;
HXDLIN(1396)											data406->iiPos = (data406->iiPos + (int)2);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data407 = data;
HXDLIN(1396)											data407->ffPos = (data407->ffPos + (int)1);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data408 = data;
HXDLIN(1396)											data408->fPos = (data408->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data409 = data;
HXDLIN(1396)											data409->oPos = (data409->oPos + (int)4);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data410 = data;
HXDLIN(1396)											data410->iPos = (data410->iPos + (int)1);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data411 = data;
HXDLIN(1396)											data411->fPos = (data411->fPos + (int)2);
HXDLIN(1396)											 ::openfl::_internal::renderer::DrawCommandReader data412 = data;
HXDLIN(1396)											data412->bPos = (data412->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data413 = data;
HXDLIN(1396)											data413->fPos = (data413->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data414 = data;
HXDLIN(1396)											data414->fPos = (data414->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data415 = data;
HXDLIN(1396)											data415->oPos = (data415->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE(1396)											 ::openfl::_internal::renderer::DrawCommandReader data416 = data;
HXDLIN(1396)											data416->oPos = (data416->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1396)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::END_FILL_dyn();
HXDLIN(1396)								 ::openfl::_internal::renderer::DrawCommandReader this13 = data;
            							}
HXLINE(1397)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
HXLINE(1398)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
HXLINE(1399)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::hasFill = false;
HXLINE(1400)							hasLineStyle = false;
HXLINE(1401)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::bitmapFill = null();
HXLINE(1402)							initStrokeX = (int)0;
HXLINE(1403)							initStrokeY = (int)0;
            						}
            						break;
            						case (int)14: {
HXLINE(1422)							{
HXLINE(1422)								 ::openfl::_internal::renderer::DrawCommandType _g15 = data->prev;
HXDLIN(1422)								switch((int)(_hx_getEnumValueIndex(_g15))){
            									case (int)0: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data417 = data;
HXDLIN(1422)										data417->oPos = (data417->oPos + (int)2);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data418 = data;
HXDLIN(1422)										data418->bPos = (data418->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data419 = data;
HXDLIN(1422)										data419->iPos = (data419->iPos + (int)1);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data420 = data;
HXDLIN(1422)										data420->fPos = (data420->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data421 = data;
HXDLIN(1422)										data421->oPos = (data421->oPos + (int)4);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data422 = data;
HXDLIN(1422)										data422->iiPos = (data422->iiPos + (int)2);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data423 = data;
HXDLIN(1422)										data423->ffPos = (data423->ffPos + (int)1);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data424 = data;
HXDLIN(1422)										data424->fPos = (data424->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data425 = data;
HXDLIN(1422)										data425->oPos = (data425->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data426 = data;
HXDLIN(1422)										data426->fPos = (data426->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data427 = data;
HXDLIN(1422)										data427->fPos = (data427->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data428 = data;
HXDLIN(1422)										data428->fPos = (data428->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data429 = data;
HXDLIN(1422)										data429->fPos = (data429->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data430 = data;
HXDLIN(1422)										data430->oPos = (data430->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data431 = data;
HXDLIN(1422)										data431->fPos = (data431->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data432 = data;
HXDLIN(1422)										data432->fPos = (data432->fPos + (int)5);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data433 = data;
HXDLIN(1422)										data433->oPos = (data433->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data434 = data;
HXDLIN(1422)										data434->oPos = (data434->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data435 = data;
HXDLIN(1422)										data435->oPos = (data435->oPos + (int)2);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data436 = data;
HXDLIN(1422)										data436->bPos = (data436->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data437 = data;
HXDLIN(1422)										data437->oPos = (data437->oPos + (int)4);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data438 = data;
HXDLIN(1422)										data438->iiPos = (data438->iiPos + (int)2);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data439 = data;
HXDLIN(1422)										data439->ffPos = (data439->ffPos + (int)1);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data440 = data;
HXDLIN(1422)										data440->fPos = (data440->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data441 = data;
HXDLIN(1422)										data441->oPos = (data441->oPos + (int)4);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data442 = data;
HXDLIN(1422)										data442->iPos = (data442->iPos + (int)1);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data443 = data;
HXDLIN(1422)										data443->fPos = (data443->fPos + (int)2);
HXDLIN(1422)										 ::openfl::_internal::renderer::DrawCommandReader data444 = data;
HXDLIN(1422)										data444->bPos = (data444->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data445 = data;
HXDLIN(1422)										data445->fPos = (data445->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data446 = data;
HXDLIN(1422)										data446->fPos = (data446->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data447 = data;
HXDLIN(1422)										data447->oPos = (data447->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1422)										 ::openfl::_internal::renderer::DrawCommandReader data448 = data;
HXDLIN(1422)										data448->oPos = (data448->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1422)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_BITMAP_STYLE_dyn();
HXDLIN(1422)							 ::openfl::_internal::renderer::DrawCommandReader this14 = data;
HXDLIN(1422)							 ::openfl::_internal::renderer::DrawCommandReader c121 = this14;
HXLINE(1424)							bool _hx_tmp23;
HXDLIN(1424)							if (!(hasLineStyle)) {
HXLINE(1424)								if ((initStrokeX == (int)0)) {
HXLINE(1424)									_hx_tmp23 = (initStrokeY != (int)0);
            								}
            								else {
HXLINE(1424)									_hx_tmp23 = true;
            								}
            							}
            							else {
HXLINE(1424)								_hx_tmp23 = false;
            							}
HXDLIN(1424)							if (_hx_tmp23) {
HXLINE(1426)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1427)								initStrokeX = (int)0;
HXLINE(1428)								initStrokeY = (int)0;
            							}
HXLINE(1432)							hasLineStyle = true;
HXLINE(1433)							::cpp::VirtualArray c122 = c121->buffer->o;
HXDLIN(1433)							::Array< bool > c123 = c121->buffer->b;
HXDLIN(1433)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineBitmapStyle(( ( ::openfl::display::BitmapData)(c121->buffer->o->__get(c121->oPos)) ),( ( ::openfl::geom::Matrix)(c122->__get((c121->oPos + (int)1))) ),c121->buffer->b->__get(c121->bPos),c123->__get((c121->bPos + (int)1)));
            						}
            						break;
            						case (int)15: {
HXLINE(1407)							{
HXLINE(1407)								 ::openfl::_internal::renderer::DrawCommandType _g16 = data->prev;
HXDLIN(1407)								switch((int)(_hx_getEnumValueIndex(_g16))){
            									case (int)0: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data449 = data;
HXDLIN(1407)										data449->oPos = (data449->oPos + (int)2);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data450 = data;
HXDLIN(1407)										data450->bPos = (data450->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data451 = data;
HXDLIN(1407)										data451->iPos = (data451->iPos + (int)1);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data452 = data;
HXDLIN(1407)										data452->fPos = (data452->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data453 = data;
HXDLIN(1407)										data453->oPos = (data453->oPos + (int)4);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data454 = data;
HXDLIN(1407)										data454->iiPos = (data454->iiPos + (int)2);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data455 = data;
HXDLIN(1407)										data455->ffPos = (data455->ffPos + (int)1);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data456 = data;
HXDLIN(1407)										data456->fPos = (data456->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data457 = data;
HXDLIN(1407)										data457->oPos = (data457->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data458 = data;
HXDLIN(1407)										data458->fPos = (data458->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data459 = data;
HXDLIN(1407)										data459->fPos = (data459->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data460 = data;
HXDLIN(1407)										data460->fPos = (data460->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data461 = data;
HXDLIN(1407)										data461->fPos = (data461->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data462 = data;
HXDLIN(1407)										data462->oPos = (data462->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data463 = data;
HXDLIN(1407)										data463->fPos = (data463->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data464 = data;
HXDLIN(1407)										data464->fPos = (data464->fPos + (int)5);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data465 = data;
HXDLIN(1407)										data465->oPos = (data465->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data466 = data;
HXDLIN(1407)										data466->oPos = (data466->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data467 = data;
HXDLIN(1407)										data467->oPos = (data467->oPos + (int)2);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data468 = data;
HXDLIN(1407)										data468->bPos = (data468->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data469 = data;
HXDLIN(1407)										data469->oPos = (data469->oPos + (int)4);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data470 = data;
HXDLIN(1407)										data470->iiPos = (data470->iiPos + (int)2);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data471 = data;
HXDLIN(1407)										data471->ffPos = (data471->ffPos + (int)1);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data472 = data;
HXDLIN(1407)										data472->fPos = (data472->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data473 = data;
HXDLIN(1407)										data473->oPos = (data473->oPos + (int)4);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data474 = data;
HXDLIN(1407)										data474->iPos = (data474->iPos + (int)1);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data475 = data;
HXDLIN(1407)										data475->fPos = (data475->fPos + (int)2);
HXDLIN(1407)										 ::openfl::_internal::renderer::DrawCommandReader data476 = data;
HXDLIN(1407)										data476->bPos = (data476->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data477 = data;
HXDLIN(1407)										data477->fPos = (data477->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data478 = data;
HXDLIN(1407)										data478->fPos = (data478->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data479 = data;
HXDLIN(1407)										data479->oPos = (data479->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1407)										 ::openfl::_internal::renderer::DrawCommandReader data480 = data;
HXDLIN(1407)										data480->oPos = (data480->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1407)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_GRADIENT_STYLE_dyn();
HXDLIN(1407)							 ::openfl::_internal::renderer::DrawCommandReader this15 = data;
HXDLIN(1407)							 ::openfl::_internal::renderer::DrawCommandReader c124 = this15;
HXLINE(1409)							bool _hx_tmp24;
HXDLIN(1409)							if (!(hasLineStyle)) {
HXLINE(1409)								if ((initStrokeX == (int)0)) {
HXLINE(1409)									_hx_tmp24 = (initStrokeY != (int)0);
            								}
            								else {
HXLINE(1409)									_hx_tmp24 = true;
            								}
            							}
            							else {
HXLINE(1409)								_hx_tmp24 = false;
            							}
HXDLIN(1409)							if (_hx_tmp24) {
HXLINE(1411)								::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1412)								initStrokeX = (int)0;
HXLINE(1413)								initStrokeY = (int)0;
            							}
HXLINE(1417)							hasLineStyle = true;
HXLINE(1418)							::Array< ::Dynamic> c125 = c124->buffer->ii;
HXDLIN(1418)							::cpp::VirtualArray c126 = c124->buffer->o;
HXDLIN(1418)							::cpp::VirtualArray c127 = c124->buffer->o;
HXDLIN(1418)							::cpp::VirtualArray c128 = c124->buffer->o;
HXDLIN(1418)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineGradientStyle(c124->buffer->o->__get(c124->oPos),c124->buffer->ii->__get(c124->iiPos).StaticCast< ::Array< int > >(),c124->buffer->ff->__get(c124->ffPos).StaticCast< ::Array< Float > >(),c125->__get((c124->iiPos + (int)1)).StaticCast< ::Array< int > >(),( ( ::openfl::geom::Matrix)(c126->__get((c124->oPos + (int)1))) ),c127->__get((c124->oPos + (int)2)),c128->__get((c124->oPos + (int)3)),c124->buffer->f->__get(c124->fPos));
            						}
            						break;
            						case (int)16: {
HXLINE(1437)							{
HXLINE(1437)								 ::openfl::_internal::renderer::DrawCommandType _g17 = data->prev;
HXDLIN(1437)								switch((int)(_hx_getEnumValueIndex(_g17))){
            									case (int)0: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data481 = data;
HXDLIN(1437)										data481->oPos = (data481->oPos + (int)2);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data482 = data;
HXDLIN(1437)										data482->bPos = (data482->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data483 = data;
HXDLIN(1437)										data483->iPos = (data483->iPos + (int)1);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data484 = data;
HXDLIN(1437)										data484->fPos = (data484->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data485 = data;
HXDLIN(1437)										data485->oPos = (data485->oPos + (int)4);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data486 = data;
HXDLIN(1437)										data486->iiPos = (data486->iiPos + (int)2);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data487 = data;
HXDLIN(1437)										data487->ffPos = (data487->ffPos + (int)1);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data488 = data;
HXDLIN(1437)										data488->fPos = (data488->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data489 = data;
HXDLIN(1437)										data489->oPos = (data489->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data490 = data;
HXDLIN(1437)										data490->fPos = (data490->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data491 = data;
HXDLIN(1437)										data491->fPos = (data491->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data492 = data;
HXDLIN(1437)										data492->fPos = (data492->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data493 = data;
HXDLIN(1437)										data493->fPos = (data493->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data494 = data;
HXDLIN(1437)										data494->oPos = (data494->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data495 = data;
HXDLIN(1437)										data495->fPos = (data495->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data496 = data;
HXDLIN(1437)										data496->fPos = (data496->fPos + (int)5);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data497 = data;
HXDLIN(1437)										data497->oPos = (data497->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data498 = data;
HXDLIN(1437)										data498->oPos = (data498->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data499 = data;
HXDLIN(1437)										data499->oPos = (data499->oPos + (int)2);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data500 = data;
HXDLIN(1437)										data500->bPos = (data500->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data501 = data;
HXDLIN(1437)										data501->oPos = (data501->oPos + (int)4);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data502 = data;
HXDLIN(1437)										data502->iiPos = (data502->iiPos + (int)2);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data503 = data;
HXDLIN(1437)										data503->ffPos = (data503->ffPos + (int)1);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data504 = data;
HXDLIN(1437)										data504->fPos = (data504->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data505 = data;
HXDLIN(1437)										data505->oPos = (data505->oPos + (int)4);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data506 = data;
HXDLIN(1437)										data506->iPos = (data506->iPos + (int)1);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data507 = data;
HXDLIN(1437)										data507->fPos = (data507->fPos + (int)2);
HXDLIN(1437)										 ::openfl::_internal::renderer::DrawCommandReader data508 = data;
HXDLIN(1437)										data508->bPos = (data508->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data509 = data;
HXDLIN(1437)										data509->fPos = (data509->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data510 = data;
HXDLIN(1437)										data510->fPos = (data510->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data511 = data;
HXDLIN(1437)										data511->oPos = (data511->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1437)										 ::openfl::_internal::renderer::DrawCommandReader data512 = data;
HXDLIN(1437)										data512->oPos = (data512->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1437)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_STYLE_dyn();
HXDLIN(1437)							 ::openfl::_internal::renderer::DrawCommandReader this16 = data;
HXDLIN(1437)							 ::openfl::_internal::renderer::DrawCommandReader c129 = this16;
HXLINE(1439)							bool _hx_tmp25;
HXDLIN(1439)							if (!(hasLineStyle)) {
HXLINE(1439)								_hx_tmp25 = hx::IsNotNull( c129->buffer->o->__get(c129->oPos) );
            							}
            							else {
HXLINE(1439)								_hx_tmp25 = false;
            							}
HXDLIN(1439)							if (_hx_tmp25) {
HXLINE(1441)								bool _hx_tmp26;
HXDLIN(1441)								if ((initStrokeX == (int)0)) {
HXLINE(1441)									_hx_tmp26 = (initStrokeY != (int)0);
            								}
            								else {
HXLINE(1441)									_hx_tmp26 = true;
            								}
HXDLIN(1441)								if (_hx_tmp26) {
HXLINE(1443)									::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->moveTo(initStrokeX,initStrokeY);
HXLINE(1444)									initStrokeX = (int)0;
HXLINE(1445)									initStrokeY = (int)0;
            								}
            							}
HXLINE(1451)							hasLineStyle = hx::IsNotNull( c129->buffer->o->__get(c129->oPos) );
HXLINE(1452)							::cpp::VirtualArray c130 = c129->buffer->o;
HXDLIN(1452)							::cpp::VirtualArray c131 = c129->buffer->o;
HXDLIN(1452)							::cpp::VirtualArray c132 = c129->buffer->o;
HXDLIN(1452)							::Array< Float > c133 = c129->buffer->f;
HXDLIN(1452)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->lineStyle(c129->buffer->o->__get(c129->oPos),c129->buffer->i->__get(c129->iPos),c129->buffer->f->__get(c129->fPos),c129->buffer->b->__get(c129->bPos),c130->__get((c129->oPos + (int)1)),c131->__get((c129->oPos + (int)2)),c132->__get((c129->oPos + (int)3)),c133->__get((c129->fPos + (int)1)));
            						}
            						break;
            						case (int)17: {
HXLINE(1364)							{
HXLINE(1364)								 ::openfl::_internal::renderer::DrawCommandType _g18 = data->prev;
HXDLIN(1364)								switch((int)(_hx_getEnumValueIndex(_g18))){
            									case (int)0: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data513 = data;
HXDLIN(1364)										data513->oPos = (data513->oPos + (int)2);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data514 = data;
HXDLIN(1364)										data514->bPos = (data514->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data515 = data;
HXDLIN(1364)										data515->iPos = (data515->iPos + (int)1);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data516 = data;
HXDLIN(1364)										data516->fPos = (data516->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data517 = data;
HXDLIN(1364)										data517->oPos = (data517->oPos + (int)4);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data518 = data;
HXDLIN(1364)										data518->iiPos = (data518->iiPos + (int)2);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data519 = data;
HXDLIN(1364)										data519->ffPos = (data519->ffPos + (int)1);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data520 = data;
HXDLIN(1364)										data520->fPos = (data520->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data521 = data;
HXDLIN(1364)										data521->oPos = (data521->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data522 = data;
HXDLIN(1364)										data522->fPos = (data522->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data523 = data;
HXDLIN(1364)										data523->fPos = (data523->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data524 = data;
HXDLIN(1364)										data524->fPos = (data524->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data525 = data;
HXDLIN(1364)										data525->fPos = (data525->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data526 = data;
HXDLIN(1364)										data526->oPos = (data526->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data527 = data;
HXDLIN(1364)										data527->fPos = (data527->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data528 = data;
HXDLIN(1364)										data528->fPos = (data528->fPos + (int)5);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data529 = data;
HXDLIN(1364)										data529->oPos = (data529->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data530 = data;
HXDLIN(1364)										data530->oPos = (data530->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data531 = data;
HXDLIN(1364)										data531->oPos = (data531->oPos + (int)2);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data532 = data;
HXDLIN(1364)										data532->bPos = (data532->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data533 = data;
HXDLIN(1364)										data533->oPos = (data533->oPos + (int)4);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data534 = data;
HXDLIN(1364)										data534->iiPos = (data534->iiPos + (int)2);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data535 = data;
HXDLIN(1364)										data535->ffPos = (data535->ffPos + (int)1);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data536 = data;
HXDLIN(1364)										data536->fPos = (data536->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data537 = data;
HXDLIN(1364)										data537->oPos = (data537->oPos + (int)4);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data538 = data;
HXDLIN(1364)										data538->iPos = (data538->iPos + (int)1);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data539 = data;
HXDLIN(1364)										data539->fPos = (data539->fPos + (int)2);
HXDLIN(1364)										 ::openfl::_internal::renderer::DrawCommandReader data540 = data;
HXDLIN(1364)										data540->bPos = (data540->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data541 = data;
HXDLIN(1364)										data541->fPos = (data541->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data542 = data;
HXDLIN(1364)										data542->fPos = (data542->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data543 = data;
HXDLIN(1364)										data543->oPos = (data543->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1364)										 ::openfl::_internal::renderer::DrawCommandReader data544 = data;
HXDLIN(1364)										data544->oPos = (data544->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1364)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1364)							 ::openfl::_internal::renderer::DrawCommandReader this17 = data;
HXDLIN(1364)							 ::openfl::_internal::renderer::DrawCommandReader c134 = this17;
HXLINE(1365)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp27 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1365)							Float c135 = c134->buffer->f->__get(c134->fPos);
HXDLIN(1365)							::Array< Float > c136 = c134->buffer->f;
HXDLIN(1365)							_hx_tmp27->lineTo(c135,c136->__get((c134->fPos + (int)1)));
HXLINE(1367)							if (hasLineStyle) {
HXLINE(1369)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp28 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1369)								Float c137 = c134->buffer->f->__get(c134->fPos);
HXDLIN(1369)								::Array< Float > c138 = c134->buffer->f;
HXDLIN(1369)								_hx_tmp28->lineTo(c137,c138->__get((c134->fPos + (int)1)));
            							}
            							else {
HXLINE(1373)								initStrokeX = c134->buffer->f->__get(c134->fPos);
HXLINE(1374)								::Array< Float > c139 = c134->buffer->f;
HXDLIN(1374)								initStrokeY = c139->__get((c134->fPos + (int)1));
            							}
            						}
            						break;
            						case (int)18: {
HXLINE(1380)							{
HXLINE(1380)								 ::openfl::_internal::renderer::DrawCommandType _g19 = data->prev;
HXDLIN(1380)								switch((int)(_hx_getEnumValueIndex(_g19))){
            									case (int)0: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data545 = data;
HXDLIN(1380)										data545->oPos = (data545->oPos + (int)2);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data546 = data;
HXDLIN(1380)										data546->bPos = (data546->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data547 = data;
HXDLIN(1380)										data547->iPos = (data547->iPos + (int)1);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data548 = data;
HXDLIN(1380)										data548->fPos = (data548->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data549 = data;
HXDLIN(1380)										data549->oPos = (data549->oPos + (int)4);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data550 = data;
HXDLIN(1380)										data550->iiPos = (data550->iiPos + (int)2);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data551 = data;
HXDLIN(1380)										data551->ffPos = (data551->ffPos + (int)1);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data552 = data;
HXDLIN(1380)										data552->fPos = (data552->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data553 = data;
HXDLIN(1380)										data553->oPos = (data553->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data554 = data;
HXDLIN(1380)										data554->fPos = (data554->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data555 = data;
HXDLIN(1380)										data555->fPos = (data555->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data556 = data;
HXDLIN(1380)										data556->fPos = (data556->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data557 = data;
HXDLIN(1380)										data557->fPos = (data557->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data558 = data;
HXDLIN(1380)										data558->oPos = (data558->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data559 = data;
HXDLIN(1380)										data559->fPos = (data559->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data560 = data;
HXDLIN(1380)										data560->fPos = (data560->fPos + (int)5);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data561 = data;
HXDLIN(1380)										data561->oPos = (data561->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data562 = data;
HXDLIN(1380)										data562->oPos = (data562->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data563 = data;
HXDLIN(1380)										data563->oPos = (data563->oPos + (int)2);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data564 = data;
HXDLIN(1380)										data564->bPos = (data564->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data565 = data;
HXDLIN(1380)										data565->oPos = (data565->oPos + (int)4);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data566 = data;
HXDLIN(1380)										data566->iiPos = (data566->iiPos + (int)2);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data567 = data;
HXDLIN(1380)										data567->ffPos = (data567->ffPos + (int)1);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data568 = data;
HXDLIN(1380)										data568->fPos = (data568->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data569 = data;
HXDLIN(1380)										data569->oPos = (data569->oPos + (int)4);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data570 = data;
HXDLIN(1380)										data570->iPos = (data570->iPos + (int)1);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data571 = data;
HXDLIN(1380)										data571->fPos = (data571->fPos + (int)2);
HXDLIN(1380)										 ::openfl::_internal::renderer::DrawCommandReader data572 = data;
HXDLIN(1380)										data572->bPos = (data572->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data573 = data;
HXDLIN(1380)										data573->fPos = (data573->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data574 = data;
HXDLIN(1380)										data574->fPos = (data574->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data575 = data;
HXDLIN(1380)										data575->oPos = (data575->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1380)										 ::openfl::_internal::renderer::DrawCommandReader data576 = data;
HXDLIN(1380)										data576->oPos = (data576->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1380)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1380)							 ::openfl::_internal::renderer::DrawCommandReader this18 = data;
HXDLIN(1380)							 ::openfl::_internal::renderer::DrawCommandReader c140 = this18;
HXLINE(1381)							 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp29 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands;
HXDLIN(1381)							Float c141 = c140->buffer->f->__get(c140->fPos);
HXDLIN(1381)							::Array< Float > c142 = c140->buffer->f;
HXDLIN(1381)							_hx_tmp29->moveTo(c141,c142->__get((c140->fPos + (int)1)));
HXLINE(1383)							if (hasLineStyle) {
HXLINE(1385)								 ::openfl::_internal::renderer::DrawCommandBuffer _hx_tmp30 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands;
HXDLIN(1385)								Float c143 = c140->buffer->f->__get(c140->fPos);
HXDLIN(1385)								::Array< Float > c144 = c140->buffer->f;
HXDLIN(1385)								_hx_tmp30->moveTo(c143,c144->__get((c140->fPos + (int)1)));
            							}
            							else {
HXLINE(1389)								initStrokeX = c140->buffer->f->__get(c140->fPos);
HXLINE(1390)								::Array< Float > c145 = c140->buffer->f;
HXDLIN(1390)								initStrokeY = c145->__get((c140->fPos + (int)1));
            							}
            						}
            						break;
            						case (int)19: {
HXLINE(1541)							{
HXLINE(1541)								 ::openfl::_internal::renderer::DrawCommandType _g20 = data->prev;
HXDLIN(1541)								switch((int)(_hx_getEnumValueIndex(_g20))){
            									case (int)0: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data577 = data;
HXDLIN(1541)										data577->oPos = (data577->oPos + (int)2);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data578 = data;
HXDLIN(1541)										data578->bPos = (data578->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data579 = data;
HXDLIN(1541)										data579->iPos = (data579->iPos + (int)1);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data580 = data;
HXDLIN(1541)										data580->fPos = (data580->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data581 = data;
HXDLIN(1541)										data581->oPos = (data581->oPos + (int)4);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data582 = data;
HXDLIN(1541)										data582->iiPos = (data582->iiPos + (int)2);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data583 = data;
HXDLIN(1541)										data583->ffPos = (data583->ffPos + (int)1);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data584 = data;
HXDLIN(1541)										data584->fPos = (data584->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data585 = data;
HXDLIN(1541)										data585->oPos = (data585->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data586 = data;
HXDLIN(1541)										data586->fPos = (data586->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data587 = data;
HXDLIN(1541)										data587->fPos = (data587->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data588 = data;
HXDLIN(1541)										data588->fPos = (data588->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data589 = data;
HXDLIN(1541)										data589->fPos = (data589->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data590 = data;
HXDLIN(1541)										data590->oPos = (data590->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data591 = data;
HXDLIN(1541)										data591->fPos = (data591->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data592 = data;
HXDLIN(1541)										data592->fPos = (data592->fPos + (int)5);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data593 = data;
HXDLIN(1541)										data593->oPos = (data593->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data594 = data;
HXDLIN(1541)										data594->oPos = (data594->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data595 = data;
HXDLIN(1541)										data595->oPos = (data595->oPos + (int)2);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data596 = data;
HXDLIN(1541)										data596->bPos = (data596->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data597 = data;
HXDLIN(1541)										data597->oPos = (data597->oPos + (int)4);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data598 = data;
HXDLIN(1541)										data598->iiPos = (data598->iiPos + (int)2);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data599 = data;
HXDLIN(1541)										data599->ffPos = (data599->ffPos + (int)1);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data600 = data;
HXDLIN(1541)										data600->fPos = (data600->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data601 = data;
HXDLIN(1541)										data601->oPos = (data601->oPos + (int)4);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data602 = data;
HXDLIN(1541)										data602->iPos = (data602->iPos + (int)1);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data603 = data;
HXDLIN(1541)										data603->fPos = (data603->fPos + (int)2);
HXDLIN(1541)										 ::openfl::_internal::renderer::DrawCommandReader data604 = data;
HXDLIN(1541)										data604->bPos = (data604->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data605 = data;
HXDLIN(1541)										data605->fPos = (data605->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data606 = data;
HXDLIN(1541)										data606->fPos = (data606->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data607 = data;
HXDLIN(1541)										data607->oPos = (data607->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1541)										 ::openfl::_internal::renderer::DrawCommandReader data608 = data;
HXDLIN(1541)										data608->oPos = (data608->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1541)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::OVERRIDE_BLEND_MODE_dyn();
HXDLIN(1541)							 ::openfl::_internal::renderer::DrawCommandReader this19 = data;
HXDLIN(1541)							 ::openfl::_internal::renderer::DrawCommandReader c146 = this19;
HXLINE(1542)							renderer->_hx___setBlendModeCairo(::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo,c146->buffer->o->__get(c146->oPos));
            						}
            						break;
            						case (int)21: {
HXLINE(1546)							{
HXLINE(1546)								{
HXLINE(1546)									 ::openfl::_internal::renderer::DrawCommandType _g21 = data->prev;
HXDLIN(1546)									switch((int)(_hx_getEnumValueIndex(_g21))){
            										case (int)0: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data609 = data;
HXDLIN(1546)											data609->oPos = (data609->oPos + (int)2);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data610 = data;
HXDLIN(1546)											data610->bPos = (data610->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data611 = data;
HXDLIN(1546)											data611->iPos = (data611->iPos + (int)1);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data612 = data;
HXDLIN(1546)											data612->fPos = (data612->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data613 = data;
HXDLIN(1546)											data613->oPos = (data613->oPos + (int)4);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data614 = data;
HXDLIN(1546)											data614->iiPos = (data614->iiPos + (int)2);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data615 = data;
HXDLIN(1546)											data615->ffPos = (data615->ffPos + (int)1);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data616 = data;
HXDLIN(1546)											data616->fPos = (data616->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data617 = data;
HXDLIN(1546)											data617->oPos = (data617->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data618 = data;
HXDLIN(1546)											data618->fPos = (data618->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data619 = data;
HXDLIN(1546)											data619->fPos = (data619->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data620 = data;
HXDLIN(1546)											data620->fPos = (data620->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data621 = data;
HXDLIN(1546)											data621->fPos = (data621->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data622 = data;
HXDLIN(1546)											data622->oPos = (data622->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data623 = data;
HXDLIN(1546)											data623->fPos = (data623->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data624 = data;
HXDLIN(1546)											data624->fPos = (data624->fPos + (int)5);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data625 = data;
HXDLIN(1546)											data625->oPos = (data625->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data626 = data;
HXDLIN(1546)											data626->oPos = (data626->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data627 = data;
HXDLIN(1546)											data627->oPos = (data627->oPos + (int)2);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data628 = data;
HXDLIN(1546)											data628->bPos = (data628->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data629 = data;
HXDLIN(1546)											data629->oPos = (data629->oPos + (int)4);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data630 = data;
HXDLIN(1546)											data630->iiPos = (data630->iiPos + (int)2);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data631 = data;
HXDLIN(1546)											data631->ffPos = (data631->ffPos + (int)1);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data632 = data;
HXDLIN(1546)											data632->fPos = (data632->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data633 = data;
HXDLIN(1546)											data633->oPos = (data633->oPos + (int)4);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data634 = data;
HXDLIN(1546)											data634->iPos = (data634->iPos + (int)1);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data635 = data;
HXDLIN(1546)											data635->fPos = (data635->fPos + (int)2);
HXDLIN(1546)											 ::openfl::_internal::renderer::DrawCommandReader data636 = data;
HXDLIN(1546)											data636->bPos = (data636->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data637 = data;
HXDLIN(1546)											data637->fPos = (data637->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data638 = data;
HXDLIN(1546)											data638->fPos = (data638->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data639 = data;
HXDLIN(1546)											data639->oPos = (data639->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE(1546)											 ::openfl::_internal::renderer::DrawCommandReader data640 = data;
HXDLIN(1546)											data640->oPos = (data640->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1546)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_EVEN_ODD_dyn();
HXDLIN(1546)								 ::openfl::_internal::renderer::DrawCommandReader this20 = data;
            							}
HXLINE(1547)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->windingEvenOdd();
            						}
            						break;
            						case (int)22: {
HXLINE(1551)							{
HXLINE(1551)								{
HXLINE(1551)									 ::openfl::_internal::renderer::DrawCommandType _g22 = data->prev;
HXDLIN(1551)									switch((int)(_hx_getEnumValueIndex(_g22))){
            										case (int)0: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data641 = data;
HXDLIN(1551)											data641->oPos = (data641->oPos + (int)2);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data642 = data;
HXDLIN(1551)											data642->bPos = (data642->bPos + (int)2);
            										}
            										break;
            										case (int)1: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data643 = data;
HXDLIN(1551)											data643->iPos = (data643->iPos + (int)1);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data644 = data;
HXDLIN(1551)											data644->fPos = (data644->fPos + (int)1);
            										}
            										break;
            										case (int)2: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data645 = data;
HXDLIN(1551)											data645->oPos = (data645->oPos + (int)4);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data646 = data;
HXDLIN(1551)											data646->iiPos = (data646->iiPos + (int)2);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data647 = data;
HXDLIN(1551)											data647->ffPos = (data647->ffPos + (int)1);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data648 = data;
HXDLIN(1551)											data648->fPos = (data648->fPos + (int)1);
            										}
            										break;
            										case (int)3: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data649 = data;
HXDLIN(1551)											data649->oPos = (data649->oPos + (int)1);
            										}
            										break;
            										case (int)4: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data650 = data;
HXDLIN(1551)											data650->fPos = (data650->fPos + (int)6);
            										}
            										break;
            										case (int)5: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data651 = data;
HXDLIN(1551)											data651->fPos = (data651->fPos + (int)4);
            										}
            										break;
            										case (int)6: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data652 = data;
HXDLIN(1551)											data652->fPos = (data652->fPos + (int)3);
            										}
            										break;
            										case (int)7: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data653 = data;
HXDLIN(1551)											data653->fPos = (data653->fPos + (int)4);
            										}
            										break;
            										case (int)8: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data654 = data;
HXDLIN(1551)											data654->oPos = (data654->oPos + (int)3);
            										}
            										break;
            										case (int)9: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data655 = data;
HXDLIN(1551)											data655->fPos = (data655->fPos + (int)4);
            										}
            										break;
            										case (int)10: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data656 = data;
HXDLIN(1551)											data656->fPos = (data656->fPos + (int)5);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data657 = data;
HXDLIN(1551)											data657->oPos = (data657->oPos + (int)1);
            										}
            										break;
            										case (int)12: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data658 = data;
HXDLIN(1551)											data658->oPos = (data658->oPos + (int)4);
            										}
            										break;
            										case (int)13: {
            										}
            										break;
            										case (int)14: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data659 = data;
HXDLIN(1551)											data659->oPos = (data659->oPos + (int)2);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data660 = data;
HXDLIN(1551)											data660->bPos = (data660->bPos + (int)2);
            										}
            										break;
            										case (int)15: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data661 = data;
HXDLIN(1551)											data661->oPos = (data661->oPos + (int)4);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data662 = data;
HXDLIN(1551)											data662->iiPos = (data662->iiPos + (int)2);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data663 = data;
HXDLIN(1551)											data663->ffPos = (data663->ffPos + (int)1);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data664 = data;
HXDLIN(1551)											data664->fPos = (data664->fPos + (int)1);
            										}
            										break;
            										case (int)16: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data665 = data;
HXDLIN(1551)											data665->oPos = (data665->oPos + (int)4);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data666 = data;
HXDLIN(1551)											data666->iPos = (data666->iPos + (int)1);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data667 = data;
HXDLIN(1551)											data667->fPos = (data667->fPos + (int)2);
HXDLIN(1551)											 ::openfl::_internal::renderer::DrawCommandReader data668 = data;
HXDLIN(1551)											data668->bPos = (data668->bPos + (int)1);
            										}
            										break;
            										case (int)17: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data669 = data;
HXDLIN(1551)											data669->fPos = (data669->fPos + (int)2);
            										}
            										break;
            										case (int)18: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data670 = data;
HXDLIN(1551)											data670->fPos = (data670->fPos + (int)2);
            										}
            										break;
            										case (int)19: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data671 = data;
HXDLIN(1551)											data671->oPos = (data671->oPos + (int)1);
            										}
            										break;
            										case (int)20: {
HXLINE(1551)											 ::openfl::_internal::renderer::DrawCommandReader data672 = data;
HXDLIN(1551)											data672->oPos = (data672->oPos + (int)1);
            										}
            										break;
            										case (int)21: case (int)22: {
            										}
            										break;
            										default:{
            										}
            									}
            								}
HXLINE(1551)								data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::WINDING_NON_ZERO_dyn();
HXDLIN(1551)								 ::openfl::_internal::renderer::DrawCommandReader this21 = data;
            							}
HXLINE(1552)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->windingNonZero();
            						}
            						break;
            						default:{
HXLINE(1556)							{
HXLINE(1556)								 ::openfl::_internal::renderer::DrawCommandType _g23 = data->prev;
HXDLIN(1556)								switch((int)(_hx_getEnumValueIndex(_g23))){
            									case (int)0: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data673 = data;
HXDLIN(1556)										data673->oPos = (data673->oPos + (int)2);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data674 = data;
HXDLIN(1556)										data674->bPos = (data674->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data675 = data;
HXDLIN(1556)										data675->iPos = (data675->iPos + (int)1);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data676 = data;
HXDLIN(1556)										data676->fPos = (data676->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data677 = data;
HXDLIN(1556)										data677->oPos = (data677->oPos + (int)4);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data678 = data;
HXDLIN(1556)										data678->iiPos = (data678->iiPos + (int)2);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data679 = data;
HXDLIN(1556)										data679->ffPos = (data679->ffPos + (int)1);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data680 = data;
HXDLIN(1556)										data680->fPos = (data680->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data681 = data;
HXDLIN(1556)										data681->oPos = (data681->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data682 = data;
HXDLIN(1556)										data682->fPos = (data682->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data683 = data;
HXDLIN(1556)										data683->fPos = (data683->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data684 = data;
HXDLIN(1556)										data684->fPos = (data684->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data685 = data;
HXDLIN(1556)										data685->fPos = (data685->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data686 = data;
HXDLIN(1556)										data686->oPos = (data686->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data687 = data;
HXDLIN(1556)										data687->fPos = (data687->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data688 = data;
HXDLIN(1556)										data688->fPos = (data688->fPos + (int)5);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data689 = data;
HXDLIN(1556)										data689->oPos = (data689->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data690 = data;
HXDLIN(1556)										data690->oPos = (data690->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data691 = data;
HXDLIN(1556)										data691->oPos = (data691->oPos + (int)2);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data692 = data;
HXDLIN(1556)										data692->bPos = (data692->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data693 = data;
HXDLIN(1556)										data693->oPos = (data693->oPos + (int)4);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data694 = data;
HXDLIN(1556)										data694->iiPos = (data694->iiPos + (int)2);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data695 = data;
HXDLIN(1556)										data695->ffPos = (data695->ffPos + (int)1);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data696 = data;
HXDLIN(1556)										data696->fPos = (data696->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data697 = data;
HXDLIN(1556)										data697->oPos = (data697->oPos + (int)4);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data698 = data;
HXDLIN(1556)										data698->iPos = (data698->iPos + (int)1);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data699 = data;
HXDLIN(1556)										data699->fPos = (data699->fPos + (int)2);
HXDLIN(1556)										 ::openfl::_internal::renderer::DrawCommandReader data700 = data;
HXDLIN(1556)										data700->bPos = (data700->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data701 = data;
HXDLIN(1556)										data701->fPos = (data701->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data702 = data;
HXDLIN(1556)										data702->fPos = (data702->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data703 = data;
HXDLIN(1556)										data703->oPos = (data703->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1556)										 ::openfl::_internal::renderer::DrawCommandReader data704 = data;
HXDLIN(1556)										data704->oPos = (data704->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1556)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1562)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::fillCommands->get_length() > (int)0)) {
HXLINE(1564)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endFill();
            			}
HXLINE(1568)			if ((::openfl::_internal::renderer::cairo::CairoGraphics_obj::strokeCommands->get_length() > (int)0)) {
HXLINE(1570)				::openfl::_internal::renderer::cairo::CairoGraphics_obj::endStroke();
            			}
HXLINE(1574)			data->destroy();
HXLINE(1576)			graphics->_hx___bitmap->image->dirty = true;
HXLINE(1577)			graphics->_hx___bitmap->image->version++;
            		}
HXLINE(1581)		graphics->_hx___softwareDirty = false;
HXLINE(1582)		graphics->set___dirty(false);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,render,(void))

void CairoGraphics_obj::renderMask( ::openfl::display::Graphics graphics, ::openfl::display::CairoRenderer renderer){
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_1593_renderMask)
HXDLIN(1593)		if ((graphics->_hx___commands->get_length() != (int)0)) {
HXLINE(1595)			::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo = renderer->cairo;
HXLINE(1597)			Float positionX = ((Float)0.0);
HXLINE(1598)			Float positionY = ((Float)0.0);
HXLINE(1600)			int offsetX = (int)0;
HXLINE(1601)			int offsetY = (int)0;
HXLINE(1603)			 ::openfl::_internal::renderer::DrawCommandReader data =  ::openfl::_internal::renderer::DrawCommandReader_obj::__alloc( HX_CTX ,graphics->_hx___commands);
HXLINE(1605)			Float x;
HXDLIN(1605)			Float y;
HXDLIN(1605)			Float width;
HXDLIN(1605)			Float height;
HXDLIN(1605)			Float kappa = ((Float).5522848);
HXDLIN(1605)			Float ox;
HXDLIN(1605)			Float oy;
HXDLIN(1605)			Float xe;
HXDLIN(1605)			Float ye;
HXDLIN(1605)			Float xm;
HXDLIN(1605)			Float ym;
HXLINE(1607)			{
HXLINE(1607)				int _g = (int)0;
HXDLIN(1607)				::Array< ::Dynamic> _g1 = graphics->_hx___commands->types;
HXDLIN(1607)				while((_g < _g1->length)){
HXLINE(1607)					 ::openfl::_internal::renderer::DrawCommandType type = _g1->__get(_g).StaticCast<  ::openfl::_internal::renderer::DrawCommandType >();
HXDLIN(1607)					_g = (_g + (int)1);
HXLINE(1609)					switch((int)(_hx_getEnumValueIndex(type))){
            						case (int)4: {
HXLINE(1613)							{
HXLINE(1613)								 ::openfl::_internal::renderer::DrawCommandType _g2 = data->prev;
HXDLIN(1613)								switch((int)(_hx_getEnumValueIndex(_g2))){
            									case (int)0: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data1 = data;
HXDLIN(1613)										data1->oPos = (data1->oPos + (int)2);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data2 = data;
HXDLIN(1613)										data2->bPos = (data2->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data3 = data;
HXDLIN(1613)										data3->iPos = (data3->iPos + (int)1);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data4 = data;
HXDLIN(1613)										data4->fPos = (data4->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data5 = data;
HXDLIN(1613)										data5->oPos = (data5->oPos + (int)4);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data6 = data;
HXDLIN(1613)										data6->iiPos = (data6->iiPos + (int)2);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data7 = data;
HXDLIN(1613)										data7->ffPos = (data7->ffPos + (int)1);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data8 = data;
HXDLIN(1613)										data8->fPos = (data8->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data9 = data;
HXDLIN(1613)										data9->oPos = (data9->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data10 = data;
HXDLIN(1613)										data10->fPos = (data10->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data11 = data;
HXDLIN(1613)										data11->fPos = (data11->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data12 = data;
HXDLIN(1613)										data12->fPos = (data12->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data13 = data;
HXDLIN(1613)										data13->fPos = (data13->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data14 = data;
HXDLIN(1613)										data14->oPos = (data14->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data15 = data;
HXDLIN(1613)										data15->fPos = (data15->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data16 = data;
HXDLIN(1613)										data16->fPos = (data16->fPos + (int)5);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data17 = data;
HXDLIN(1613)										data17->oPos = (data17->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data18 = data;
HXDLIN(1613)										data18->oPos = (data18->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data19 = data;
HXDLIN(1613)										data19->oPos = (data19->oPos + (int)2);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data20 = data;
HXDLIN(1613)										data20->bPos = (data20->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data21 = data;
HXDLIN(1613)										data21->oPos = (data21->oPos + (int)4);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data22 = data;
HXDLIN(1613)										data22->iiPos = (data22->iiPos + (int)2);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data23 = data;
HXDLIN(1613)										data23->ffPos = (data23->ffPos + (int)1);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data24 = data;
HXDLIN(1613)										data24->fPos = (data24->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data25 = data;
HXDLIN(1613)										data25->oPos = (data25->oPos + (int)4);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data26 = data;
HXDLIN(1613)										data26->iPos = (data26->iPos + (int)1);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data27 = data;
HXDLIN(1613)										data27->fPos = (data27->fPos + (int)2);
HXDLIN(1613)										 ::openfl::_internal::renderer::DrawCommandReader data28 = data;
HXDLIN(1613)										data28->bPos = (data28->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data29 = data;
HXDLIN(1613)										data29->fPos = (data29->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data30 = data;
HXDLIN(1613)										data30->fPos = (data30->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data31 = data;
HXDLIN(1613)										data31->oPos = (data31->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1613)										 ::openfl::_internal::renderer::DrawCommandReader data32 = data;
HXDLIN(1613)										data32->oPos = (data32->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1613)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CUBIC_CURVE_TO_dyn();
HXDLIN(1613)							 ::openfl::_internal::renderer::DrawCommandReader this1 = data;
HXDLIN(1613)							 ::openfl::_internal::renderer::DrawCommandReader c = this1;
HXLINE(1614)							 ::lime::graphics::cairo::Cairo _hx_tmp = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1614)							Float _hx_tmp1 = (c->buffer->f->__get(c->fPos) - offsetX);
HXDLIN(1614)							::Array< Float > c1 = c->buffer->f;
HXDLIN(1614)							Float _hx_tmp2 = (c1->__get((c->fPos + (int)1)) - offsetY);
HXDLIN(1614)							::Array< Float > c2 = c->buffer->f;
HXDLIN(1614)							Float _hx_tmp3 = (c2->__get((c->fPos + (int)2)) - offsetX);
HXDLIN(1614)							::Array< Float > c3 = c->buffer->f;
HXDLIN(1614)							Float _hx_tmp4 = (c3->__get((c->fPos + (int)3)) - offsetY);
HXDLIN(1614)							::Array< Float > c4 = c->buffer->f;
HXDLIN(1614)							Float _hx_tmp5 = (c4->__get((c->fPos + (int)4)) - offsetX);
HXDLIN(1614)							::Array< Float > c5 = c->buffer->f;
HXDLIN(1614)							_hx_tmp->curveTo(_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,_hx_tmp5,(c5->__get((c->fPos + (int)5)) - offsetY));
HXLINE(1615)							::Array< Float > c6 = c->buffer->f;
HXDLIN(1615)							positionX = c6->__get((c->fPos + (int)4));
HXLINE(1616)							::Array< Float > c7 = c->buffer->f;
HXDLIN(1616)							positionY = c7->__get((c->fPos + (int)5));
            						}
            						break;
            						case (int)5: {
HXLINE(1620)							{
HXLINE(1620)								 ::openfl::_internal::renderer::DrawCommandType _g3 = data->prev;
HXDLIN(1620)								switch((int)(_hx_getEnumValueIndex(_g3))){
            									case (int)0: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data33 = data;
HXDLIN(1620)										data33->oPos = (data33->oPos + (int)2);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data34 = data;
HXDLIN(1620)										data34->bPos = (data34->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data35 = data;
HXDLIN(1620)										data35->iPos = (data35->iPos + (int)1);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data36 = data;
HXDLIN(1620)										data36->fPos = (data36->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data37 = data;
HXDLIN(1620)										data37->oPos = (data37->oPos + (int)4);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data38 = data;
HXDLIN(1620)										data38->iiPos = (data38->iiPos + (int)2);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data39 = data;
HXDLIN(1620)										data39->ffPos = (data39->ffPos + (int)1);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data40 = data;
HXDLIN(1620)										data40->fPos = (data40->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data41 = data;
HXDLIN(1620)										data41->oPos = (data41->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data42 = data;
HXDLIN(1620)										data42->fPos = (data42->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data43 = data;
HXDLIN(1620)										data43->fPos = (data43->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data44 = data;
HXDLIN(1620)										data44->fPos = (data44->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data45 = data;
HXDLIN(1620)										data45->fPos = (data45->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data46 = data;
HXDLIN(1620)										data46->oPos = (data46->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data47 = data;
HXDLIN(1620)										data47->fPos = (data47->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data48 = data;
HXDLIN(1620)										data48->fPos = (data48->fPos + (int)5);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data49 = data;
HXDLIN(1620)										data49->oPos = (data49->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data50 = data;
HXDLIN(1620)										data50->oPos = (data50->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data51 = data;
HXDLIN(1620)										data51->oPos = (data51->oPos + (int)2);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data52 = data;
HXDLIN(1620)										data52->bPos = (data52->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data53 = data;
HXDLIN(1620)										data53->oPos = (data53->oPos + (int)4);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data54 = data;
HXDLIN(1620)										data54->iiPos = (data54->iiPos + (int)2);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data55 = data;
HXDLIN(1620)										data55->ffPos = (data55->ffPos + (int)1);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data56 = data;
HXDLIN(1620)										data56->fPos = (data56->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data57 = data;
HXDLIN(1620)										data57->oPos = (data57->oPos + (int)4);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data58 = data;
HXDLIN(1620)										data58->iPos = (data58->iPos + (int)1);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data59 = data;
HXDLIN(1620)										data59->fPos = (data59->fPos + (int)2);
HXDLIN(1620)										 ::openfl::_internal::renderer::DrawCommandReader data60 = data;
HXDLIN(1620)										data60->bPos = (data60->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data61 = data;
HXDLIN(1620)										data61->fPos = (data61->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data62 = data;
HXDLIN(1620)										data62->fPos = (data62->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data63 = data;
HXDLIN(1620)										data63->oPos = (data63->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1620)										 ::openfl::_internal::renderer::DrawCommandReader data64 = data;
HXDLIN(1620)										data64->oPos = (data64->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1620)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::CURVE_TO_dyn();
HXDLIN(1620)							 ::openfl::_internal::renderer::DrawCommandReader this2 = data;
HXDLIN(1620)							 ::openfl::_internal::renderer::DrawCommandReader c8 = this2;
HXLINE(1621)							Float _hx_tmp6 = (c8->buffer->f->__get(c8->fPos) - offsetX);
HXDLIN(1621)							::Array< Float > c9 = c8->buffer->f;
HXDLIN(1621)							Float _hx_tmp7 = (c9->__get((c8->fPos + (int)1)) - offsetY);
HXDLIN(1621)							::Array< Float > c10 = c8->buffer->f;
HXDLIN(1621)							Float _hx_tmp8 = (c10->__get((c8->fPos + (int)2)) - offsetX);
HXDLIN(1621)							::Array< Float > c11 = c8->buffer->f;
HXDLIN(1621)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::quadraticCurveTo(_hx_tmp6,_hx_tmp7,_hx_tmp8,(c11->__get((c8->fPos + (int)3)) - offsetY));
HXLINE(1622)							::Array< Float > c12 = c8->buffer->f;
HXDLIN(1622)							positionX = c12->__get((c8->fPos + (int)2));
HXLINE(1623)							::Array< Float > c13 = c8->buffer->f;
HXDLIN(1623)							positionY = c13->__get((c8->fPos + (int)3));
            						}
            						break;
            						case (int)6: {
HXLINE(1627)							{
HXLINE(1627)								 ::openfl::_internal::renderer::DrawCommandType _g4 = data->prev;
HXDLIN(1627)								switch((int)(_hx_getEnumValueIndex(_g4))){
            									case (int)0: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data65 = data;
HXDLIN(1627)										data65->oPos = (data65->oPos + (int)2);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data66 = data;
HXDLIN(1627)										data66->bPos = (data66->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data67 = data;
HXDLIN(1627)										data67->iPos = (data67->iPos + (int)1);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data68 = data;
HXDLIN(1627)										data68->fPos = (data68->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data69 = data;
HXDLIN(1627)										data69->oPos = (data69->oPos + (int)4);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data70 = data;
HXDLIN(1627)										data70->iiPos = (data70->iiPos + (int)2);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data71 = data;
HXDLIN(1627)										data71->ffPos = (data71->ffPos + (int)1);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data72 = data;
HXDLIN(1627)										data72->fPos = (data72->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data73 = data;
HXDLIN(1627)										data73->oPos = (data73->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data74 = data;
HXDLIN(1627)										data74->fPos = (data74->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data75 = data;
HXDLIN(1627)										data75->fPos = (data75->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data76 = data;
HXDLIN(1627)										data76->fPos = (data76->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data77 = data;
HXDLIN(1627)										data77->fPos = (data77->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data78 = data;
HXDLIN(1627)										data78->oPos = (data78->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data79 = data;
HXDLIN(1627)										data79->fPos = (data79->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data80 = data;
HXDLIN(1627)										data80->fPos = (data80->fPos + (int)5);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data81 = data;
HXDLIN(1627)										data81->oPos = (data81->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data82 = data;
HXDLIN(1627)										data82->oPos = (data82->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data83 = data;
HXDLIN(1627)										data83->oPos = (data83->oPos + (int)2);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data84 = data;
HXDLIN(1627)										data84->bPos = (data84->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data85 = data;
HXDLIN(1627)										data85->oPos = (data85->oPos + (int)4);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data86 = data;
HXDLIN(1627)										data86->iiPos = (data86->iiPos + (int)2);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data87 = data;
HXDLIN(1627)										data87->ffPos = (data87->ffPos + (int)1);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data88 = data;
HXDLIN(1627)										data88->fPos = (data88->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data89 = data;
HXDLIN(1627)										data89->oPos = (data89->oPos + (int)4);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data90 = data;
HXDLIN(1627)										data90->iPos = (data90->iPos + (int)1);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data91 = data;
HXDLIN(1627)										data91->fPos = (data91->fPos + (int)2);
HXDLIN(1627)										 ::openfl::_internal::renderer::DrawCommandReader data92 = data;
HXDLIN(1627)										data92->bPos = (data92->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data93 = data;
HXDLIN(1627)										data93->fPos = (data93->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data94 = data;
HXDLIN(1627)										data94->fPos = (data94->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data95 = data;
HXDLIN(1627)										data95->oPos = (data95->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1627)										 ::openfl::_internal::renderer::DrawCommandReader data96 = data;
HXDLIN(1627)										data96->oPos = (data96->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1627)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_CIRCLE_dyn();
HXDLIN(1627)							 ::openfl::_internal::renderer::DrawCommandReader this3 = data;
HXDLIN(1627)							 ::openfl::_internal::renderer::DrawCommandReader c14 = this3;
HXLINE(1628)							 ::lime::graphics::cairo::Cairo _hx_tmp9 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1628)							Float _hx_tmp10 = (c14->buffer->f->__get(c14->fPos) - offsetX);
HXDLIN(1628)							::Array< Float > c15 = c14->buffer->f;
HXDLIN(1628)							Float _hx_tmp11 = (c15->__get((c14->fPos + (int)1)) - offsetY);
HXDLIN(1628)							::Array< Float > c16 = c14->buffer->f;
HXDLIN(1628)							Float c17 = c16->__get((c14->fPos + (int)2));
HXDLIN(1628)							_hx_tmp9->arc(_hx_tmp10,_hx_tmp11,c17,(int)0,(::Math_obj::PI * (int)2));
            						}
            						break;
            						case (int)7: {
HXLINE(1632)							{
HXLINE(1632)								 ::openfl::_internal::renderer::DrawCommandType _g5 = data->prev;
HXDLIN(1632)								switch((int)(_hx_getEnumValueIndex(_g5))){
            									case (int)0: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data97 = data;
HXDLIN(1632)										data97->oPos = (data97->oPos + (int)2);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data98 = data;
HXDLIN(1632)										data98->bPos = (data98->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data99 = data;
HXDLIN(1632)										data99->iPos = (data99->iPos + (int)1);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data100 = data;
HXDLIN(1632)										data100->fPos = (data100->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data101 = data;
HXDLIN(1632)										data101->oPos = (data101->oPos + (int)4);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data102 = data;
HXDLIN(1632)										data102->iiPos = (data102->iiPos + (int)2);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data103 = data;
HXDLIN(1632)										data103->ffPos = (data103->ffPos + (int)1);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data104 = data;
HXDLIN(1632)										data104->fPos = (data104->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data105 = data;
HXDLIN(1632)										data105->oPos = (data105->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data106 = data;
HXDLIN(1632)										data106->fPos = (data106->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data107 = data;
HXDLIN(1632)										data107->fPos = (data107->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data108 = data;
HXDLIN(1632)										data108->fPos = (data108->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data109 = data;
HXDLIN(1632)										data109->fPos = (data109->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data110 = data;
HXDLIN(1632)										data110->oPos = (data110->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data111 = data;
HXDLIN(1632)										data111->fPos = (data111->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data112 = data;
HXDLIN(1632)										data112->fPos = (data112->fPos + (int)5);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data113 = data;
HXDLIN(1632)										data113->oPos = (data113->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data114 = data;
HXDLIN(1632)										data114->oPos = (data114->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data115 = data;
HXDLIN(1632)										data115->oPos = (data115->oPos + (int)2);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data116 = data;
HXDLIN(1632)										data116->bPos = (data116->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data117 = data;
HXDLIN(1632)										data117->oPos = (data117->oPos + (int)4);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data118 = data;
HXDLIN(1632)										data118->iiPos = (data118->iiPos + (int)2);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data119 = data;
HXDLIN(1632)										data119->ffPos = (data119->ffPos + (int)1);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data120 = data;
HXDLIN(1632)										data120->fPos = (data120->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data121 = data;
HXDLIN(1632)										data121->oPos = (data121->oPos + (int)4);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data122 = data;
HXDLIN(1632)										data122->iPos = (data122->iPos + (int)1);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data123 = data;
HXDLIN(1632)										data123->fPos = (data123->fPos + (int)2);
HXDLIN(1632)										 ::openfl::_internal::renderer::DrawCommandReader data124 = data;
HXDLIN(1632)										data124->bPos = (data124->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data125 = data;
HXDLIN(1632)										data125->fPos = (data125->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data126 = data;
HXDLIN(1632)										data126->fPos = (data126->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data127 = data;
HXDLIN(1632)										data127->oPos = (data127->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1632)										 ::openfl::_internal::renderer::DrawCommandReader data128 = data;
HXDLIN(1632)										data128->oPos = (data128->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1632)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ELLIPSE_dyn();
HXDLIN(1632)							 ::openfl::_internal::renderer::DrawCommandReader this4 = data;
HXDLIN(1632)							 ::openfl::_internal::renderer::DrawCommandReader c18 = this4;
HXLINE(1634)							x = c18->buffer->f->__get(c18->fPos);
HXLINE(1635)							::Array< Float > c19 = c18->buffer->f;
HXDLIN(1635)							y = c19->__get((c18->fPos + (int)1));
HXLINE(1636)							::Array< Float > c20 = c18->buffer->f;
HXDLIN(1636)							width = c20->__get((c18->fPos + (int)2));
HXLINE(1637)							::Array< Float > c21 = c18->buffer->f;
HXDLIN(1637)							height = c21->__get((c18->fPos + (int)3));
HXLINE(1639)							x = (x - offsetX);
HXLINE(1640)							y = (y - offsetY);
HXLINE(1642)							ox = (((Float)width / (Float)(int)2) * kappa);
HXLINE(1643)							oy = (((Float)height / (Float)(int)2) * kappa);
HXLINE(1644)							xe = (x + width);
HXLINE(1645)							ye = (y + height);
HXLINE(1646)							xm = (x + ((Float)width / (Float)(int)2));
HXLINE(1647)							ym = (y + ((Float)height / (Float)(int)2));
HXLINE(1651)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo->moveTo(x,ym);
HXLINE(1652)							 ::lime::graphics::cairo::Cairo _hx_tmp12 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1652)							_hx_tmp12->curveTo(x,(ym - oy),(xm - ox),y,xm,y);
HXLINE(1653)							 ::lime::graphics::cairo::Cairo _hx_tmp13 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1653)							_hx_tmp13->curveTo((xm + ox),y,xe,(ym - oy),xe,ym);
HXLINE(1654)							 ::lime::graphics::cairo::Cairo _hx_tmp14 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1654)							_hx_tmp14->curveTo(xe,(ym + oy),(xm + ox),ye,xm,ye);
HXLINE(1655)							 ::lime::graphics::cairo::Cairo _hx_tmp15 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1655)							_hx_tmp15->curveTo((xm - ox),ye,x,(ym + oy),x,ym);
            						}
            						break;
            						case (int)9: {
HXLINE(1660)							{
HXLINE(1660)								 ::openfl::_internal::renderer::DrawCommandType _g6 = data->prev;
HXDLIN(1660)								switch((int)(_hx_getEnumValueIndex(_g6))){
            									case (int)0: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data129 = data;
HXDLIN(1660)										data129->oPos = (data129->oPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data130 = data;
HXDLIN(1660)										data130->bPos = (data130->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data131 = data;
HXDLIN(1660)										data131->iPos = (data131->iPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data132 = data;
HXDLIN(1660)										data132->fPos = (data132->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data133 = data;
HXDLIN(1660)										data133->oPos = (data133->oPos + (int)4);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data134 = data;
HXDLIN(1660)										data134->iiPos = (data134->iiPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data135 = data;
HXDLIN(1660)										data135->ffPos = (data135->ffPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data136 = data;
HXDLIN(1660)										data136->fPos = (data136->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data137 = data;
HXDLIN(1660)										data137->oPos = (data137->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data138 = data;
HXDLIN(1660)										data138->fPos = (data138->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data139 = data;
HXDLIN(1660)										data139->fPos = (data139->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data140 = data;
HXDLIN(1660)										data140->fPos = (data140->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data141 = data;
HXDLIN(1660)										data141->fPos = (data141->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data142 = data;
HXDLIN(1660)										data142->oPos = (data142->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data143 = data;
HXDLIN(1660)										data143->fPos = (data143->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data144 = data;
HXDLIN(1660)										data144->fPos = (data144->fPos + (int)5);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data145 = data;
HXDLIN(1660)										data145->oPos = (data145->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data146 = data;
HXDLIN(1660)										data146->oPos = (data146->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data147 = data;
HXDLIN(1660)										data147->oPos = (data147->oPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data148 = data;
HXDLIN(1660)										data148->bPos = (data148->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data149 = data;
HXDLIN(1660)										data149->oPos = (data149->oPos + (int)4);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data150 = data;
HXDLIN(1660)										data150->iiPos = (data150->iiPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data151 = data;
HXDLIN(1660)										data151->ffPos = (data151->ffPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data152 = data;
HXDLIN(1660)										data152->fPos = (data152->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data153 = data;
HXDLIN(1660)										data153->oPos = (data153->oPos + (int)4);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data154 = data;
HXDLIN(1660)										data154->iPos = (data154->iPos + (int)1);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data155 = data;
HXDLIN(1660)										data155->fPos = (data155->fPos + (int)2);
HXDLIN(1660)										 ::openfl::_internal::renderer::DrawCommandReader data156 = data;
HXDLIN(1660)										data156->bPos = (data156->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data157 = data;
HXDLIN(1660)										data157->fPos = (data157->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data158 = data;
HXDLIN(1660)										data158->fPos = (data158->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data159 = data;
HXDLIN(1660)										data159->oPos = (data159->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1660)										 ::openfl::_internal::renderer::DrawCommandReader data160 = data;
HXDLIN(1660)										data160->oPos = (data160->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1660)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_RECT_dyn();
HXDLIN(1660)							 ::openfl::_internal::renderer::DrawCommandReader this5 = data;
HXDLIN(1660)							 ::openfl::_internal::renderer::DrawCommandReader c22 = this5;
HXLINE(1661)							 ::lime::graphics::cairo::Cairo _hx_tmp16 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1661)							Float _hx_tmp17 = (c22->buffer->f->__get(c22->fPos) - offsetX);
HXDLIN(1661)							::Array< Float > c23 = c22->buffer->f;
HXDLIN(1661)							Float _hx_tmp18 = (c23->__get((c22->fPos + (int)1)) - offsetY);
HXDLIN(1661)							::Array< Float > c24 = c22->buffer->f;
HXDLIN(1661)							Float c25 = c24->__get((c22->fPos + (int)2));
HXDLIN(1661)							::Array< Float > c26 = c22->buffer->f;
HXDLIN(1661)							_hx_tmp16->rectangle(_hx_tmp17,_hx_tmp18,c25,c26->__get((c22->fPos + (int)3)));
            						}
            						break;
            						case (int)10: {
HXLINE(1665)							{
HXLINE(1665)								 ::openfl::_internal::renderer::DrawCommandType _g7 = data->prev;
HXDLIN(1665)								switch((int)(_hx_getEnumValueIndex(_g7))){
            									case (int)0: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data161 = data;
HXDLIN(1665)										data161->oPos = (data161->oPos + (int)2);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data162 = data;
HXDLIN(1665)										data162->bPos = (data162->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data163 = data;
HXDLIN(1665)										data163->iPos = (data163->iPos + (int)1);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data164 = data;
HXDLIN(1665)										data164->fPos = (data164->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data165 = data;
HXDLIN(1665)										data165->oPos = (data165->oPos + (int)4);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data166 = data;
HXDLIN(1665)										data166->iiPos = (data166->iiPos + (int)2);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data167 = data;
HXDLIN(1665)										data167->ffPos = (data167->ffPos + (int)1);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data168 = data;
HXDLIN(1665)										data168->fPos = (data168->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data169 = data;
HXDLIN(1665)										data169->oPos = (data169->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data170 = data;
HXDLIN(1665)										data170->fPos = (data170->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data171 = data;
HXDLIN(1665)										data171->fPos = (data171->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data172 = data;
HXDLIN(1665)										data172->fPos = (data172->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data173 = data;
HXDLIN(1665)										data173->fPos = (data173->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data174 = data;
HXDLIN(1665)										data174->oPos = (data174->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data175 = data;
HXDLIN(1665)										data175->fPos = (data175->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data176 = data;
HXDLIN(1665)										data176->fPos = (data176->fPos + (int)5);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data177 = data;
HXDLIN(1665)										data177->oPos = (data177->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data178 = data;
HXDLIN(1665)										data178->oPos = (data178->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data179 = data;
HXDLIN(1665)										data179->oPos = (data179->oPos + (int)2);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data180 = data;
HXDLIN(1665)										data180->bPos = (data180->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data181 = data;
HXDLIN(1665)										data181->oPos = (data181->oPos + (int)4);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data182 = data;
HXDLIN(1665)										data182->iiPos = (data182->iiPos + (int)2);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data183 = data;
HXDLIN(1665)										data183->ffPos = (data183->ffPos + (int)1);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data184 = data;
HXDLIN(1665)										data184->fPos = (data184->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data185 = data;
HXDLIN(1665)										data185->oPos = (data185->oPos + (int)4);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data186 = data;
HXDLIN(1665)										data186->iPos = (data186->iPos + (int)1);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data187 = data;
HXDLIN(1665)										data187->fPos = (data187->fPos + (int)2);
HXDLIN(1665)										 ::openfl::_internal::renderer::DrawCommandReader data188 = data;
HXDLIN(1665)										data188->bPos = (data188->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data189 = data;
HXDLIN(1665)										data189->fPos = (data189->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data190 = data;
HXDLIN(1665)										data190->fPos = (data190->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data191 = data;
HXDLIN(1665)										data191->oPos = (data191->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1665)										 ::openfl::_internal::renderer::DrawCommandReader data192 = data;
HXDLIN(1665)										data192->oPos = (data192->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1665)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::DRAW_ROUND_RECT_dyn();
HXDLIN(1665)							 ::openfl::_internal::renderer::DrawCommandReader this6 = data;
HXDLIN(1665)							 ::openfl::_internal::renderer::DrawCommandReader c27 = this6;
HXLINE(1666)							Float _hx_tmp19 = (c27->buffer->f->__get(c27->fPos) - offsetX);
HXDLIN(1666)							::Array< Float > c28 = c27->buffer->f;
HXDLIN(1666)							Float _hx_tmp20 = (c28->__get((c27->fPos + (int)1)) - offsetY);
HXDLIN(1666)							::Array< Float > c29 = c27->buffer->f;
HXDLIN(1666)							Float c30 = c29->__get((c27->fPos + (int)2));
HXDLIN(1666)							::Array< Float > c31 = c27->buffer->f;
HXDLIN(1666)							Float c32 = c31->__get((c27->fPos + (int)3));
HXDLIN(1666)							::Array< Float > c33 = c27->buffer->f;
HXDLIN(1666)							::openfl::_internal::renderer::cairo::CairoGraphics_obj::drawRoundRect(_hx_tmp19,_hx_tmp20,c30,c32,c33->__get((c27->fPos + (int)4)),c27->buffer->o->__get(c27->oPos));
            						}
            						break;
            						case (int)17: {
HXLINE(1670)							{
HXLINE(1670)								 ::openfl::_internal::renderer::DrawCommandType _g8 = data->prev;
HXDLIN(1670)								switch((int)(_hx_getEnumValueIndex(_g8))){
            									case (int)0: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data193 = data;
HXDLIN(1670)										data193->oPos = (data193->oPos + (int)2);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data194 = data;
HXDLIN(1670)										data194->bPos = (data194->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data195 = data;
HXDLIN(1670)										data195->iPos = (data195->iPos + (int)1);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data196 = data;
HXDLIN(1670)										data196->fPos = (data196->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data197 = data;
HXDLIN(1670)										data197->oPos = (data197->oPos + (int)4);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data198 = data;
HXDLIN(1670)										data198->iiPos = (data198->iiPos + (int)2);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data199 = data;
HXDLIN(1670)										data199->ffPos = (data199->ffPos + (int)1);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data200 = data;
HXDLIN(1670)										data200->fPos = (data200->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data201 = data;
HXDLIN(1670)										data201->oPos = (data201->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data202 = data;
HXDLIN(1670)										data202->fPos = (data202->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data203 = data;
HXDLIN(1670)										data203->fPos = (data203->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data204 = data;
HXDLIN(1670)										data204->fPos = (data204->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data205 = data;
HXDLIN(1670)										data205->fPos = (data205->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data206 = data;
HXDLIN(1670)										data206->oPos = (data206->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data207 = data;
HXDLIN(1670)										data207->fPos = (data207->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data208 = data;
HXDLIN(1670)										data208->fPos = (data208->fPos + (int)5);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data209 = data;
HXDLIN(1670)										data209->oPos = (data209->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data210 = data;
HXDLIN(1670)										data210->oPos = (data210->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data211 = data;
HXDLIN(1670)										data211->oPos = (data211->oPos + (int)2);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data212 = data;
HXDLIN(1670)										data212->bPos = (data212->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data213 = data;
HXDLIN(1670)										data213->oPos = (data213->oPos + (int)4);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data214 = data;
HXDLIN(1670)										data214->iiPos = (data214->iiPos + (int)2);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data215 = data;
HXDLIN(1670)										data215->ffPos = (data215->ffPos + (int)1);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data216 = data;
HXDLIN(1670)										data216->fPos = (data216->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data217 = data;
HXDLIN(1670)										data217->oPos = (data217->oPos + (int)4);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data218 = data;
HXDLIN(1670)										data218->iPos = (data218->iPos + (int)1);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data219 = data;
HXDLIN(1670)										data219->fPos = (data219->fPos + (int)2);
HXDLIN(1670)										 ::openfl::_internal::renderer::DrawCommandReader data220 = data;
HXDLIN(1670)										data220->bPos = (data220->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data221 = data;
HXDLIN(1670)										data221->fPos = (data221->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data222 = data;
HXDLIN(1670)										data222->fPos = (data222->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data223 = data;
HXDLIN(1670)										data223->oPos = (data223->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1670)										 ::openfl::_internal::renderer::DrawCommandReader data224 = data;
HXDLIN(1670)										data224->oPos = (data224->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1670)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::LINE_TO_dyn();
HXDLIN(1670)							 ::openfl::_internal::renderer::DrawCommandReader this7 = data;
HXDLIN(1670)							 ::openfl::_internal::renderer::DrawCommandReader c34 = this7;
HXLINE(1671)							 ::lime::graphics::cairo::Cairo _hx_tmp21 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1671)							Float _hx_tmp22 = (c34->buffer->f->__get(c34->fPos) - offsetX);
HXDLIN(1671)							::Array< Float > c35 = c34->buffer->f;
HXDLIN(1671)							_hx_tmp21->lineTo(_hx_tmp22,(c35->__get((c34->fPos + (int)1)) - offsetY));
HXLINE(1672)							positionX = c34->buffer->f->__get(c34->fPos);
HXLINE(1673)							::Array< Float > c36 = c34->buffer->f;
HXDLIN(1673)							positionY = c36->__get((c34->fPos + (int)1));
            						}
            						break;
            						case (int)18: {
HXLINE(1677)							{
HXLINE(1677)								 ::openfl::_internal::renderer::DrawCommandType _g9 = data->prev;
HXDLIN(1677)								switch((int)(_hx_getEnumValueIndex(_g9))){
            									case (int)0: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data225 = data;
HXDLIN(1677)										data225->oPos = (data225->oPos + (int)2);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data226 = data;
HXDLIN(1677)										data226->bPos = (data226->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data227 = data;
HXDLIN(1677)										data227->iPos = (data227->iPos + (int)1);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data228 = data;
HXDLIN(1677)										data228->fPos = (data228->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data229 = data;
HXDLIN(1677)										data229->oPos = (data229->oPos + (int)4);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data230 = data;
HXDLIN(1677)										data230->iiPos = (data230->iiPos + (int)2);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data231 = data;
HXDLIN(1677)										data231->ffPos = (data231->ffPos + (int)1);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data232 = data;
HXDLIN(1677)										data232->fPos = (data232->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data233 = data;
HXDLIN(1677)										data233->oPos = (data233->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data234 = data;
HXDLIN(1677)										data234->fPos = (data234->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data235 = data;
HXDLIN(1677)										data235->fPos = (data235->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data236 = data;
HXDLIN(1677)										data236->fPos = (data236->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data237 = data;
HXDLIN(1677)										data237->fPos = (data237->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data238 = data;
HXDLIN(1677)										data238->oPos = (data238->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data239 = data;
HXDLIN(1677)										data239->fPos = (data239->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data240 = data;
HXDLIN(1677)										data240->fPos = (data240->fPos + (int)5);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data241 = data;
HXDLIN(1677)										data241->oPos = (data241->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data242 = data;
HXDLIN(1677)										data242->oPos = (data242->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data243 = data;
HXDLIN(1677)										data243->oPos = (data243->oPos + (int)2);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data244 = data;
HXDLIN(1677)										data244->bPos = (data244->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data245 = data;
HXDLIN(1677)										data245->oPos = (data245->oPos + (int)4);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data246 = data;
HXDLIN(1677)										data246->iiPos = (data246->iiPos + (int)2);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data247 = data;
HXDLIN(1677)										data247->ffPos = (data247->ffPos + (int)1);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data248 = data;
HXDLIN(1677)										data248->fPos = (data248->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data249 = data;
HXDLIN(1677)										data249->oPos = (data249->oPos + (int)4);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data250 = data;
HXDLIN(1677)										data250->iPos = (data250->iPos + (int)1);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data251 = data;
HXDLIN(1677)										data251->fPos = (data251->fPos + (int)2);
HXDLIN(1677)										 ::openfl::_internal::renderer::DrawCommandReader data252 = data;
HXDLIN(1677)										data252->bPos = (data252->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data253 = data;
HXDLIN(1677)										data253->fPos = (data253->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data254 = data;
HXDLIN(1677)										data254->fPos = (data254->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data255 = data;
HXDLIN(1677)										data255->oPos = (data255->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1677)										 ::openfl::_internal::renderer::DrawCommandReader data256 = data;
HXDLIN(1677)										data256->oPos = (data256->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1677)							data->prev = ::openfl::_internal::renderer::DrawCommandType_obj::MOVE_TO_dyn();
HXDLIN(1677)							 ::openfl::_internal::renderer::DrawCommandReader this8 = data;
HXDLIN(1677)							 ::openfl::_internal::renderer::DrawCommandReader c37 = this8;
HXLINE(1678)							 ::lime::graphics::cairo::Cairo _hx_tmp23 = ::openfl::_internal::renderer::cairo::CairoGraphics_obj::cairo;
HXDLIN(1678)							Float _hx_tmp24 = (c37->buffer->f->__get(c37->fPos) - offsetX);
HXDLIN(1678)							::Array< Float > c38 = c37->buffer->f;
HXDLIN(1678)							_hx_tmp23->moveTo(_hx_tmp24,(c38->__get((c37->fPos + (int)1)) - offsetY));
HXLINE(1679)							positionX = c37->buffer->f->__get(c37->fPos);
HXLINE(1680)							::Array< Float > c39 = c37->buffer->f;
HXDLIN(1680)							positionY = c39->__get((c37->fPos + (int)1));
            						}
            						break;
            						default:{
HXLINE(1684)							{
HXLINE(1684)								 ::openfl::_internal::renderer::DrawCommandType _g10 = data->prev;
HXDLIN(1684)								switch((int)(_hx_getEnumValueIndex(_g10))){
            									case (int)0: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data257 = data;
HXDLIN(1684)										data257->oPos = (data257->oPos + (int)2);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data258 = data;
HXDLIN(1684)										data258->bPos = (data258->bPos + (int)2);
            									}
            									break;
            									case (int)1: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data259 = data;
HXDLIN(1684)										data259->iPos = (data259->iPos + (int)1);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data260 = data;
HXDLIN(1684)										data260->fPos = (data260->fPos + (int)1);
            									}
            									break;
            									case (int)2: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data261 = data;
HXDLIN(1684)										data261->oPos = (data261->oPos + (int)4);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data262 = data;
HXDLIN(1684)										data262->iiPos = (data262->iiPos + (int)2);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data263 = data;
HXDLIN(1684)										data263->ffPos = (data263->ffPos + (int)1);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data264 = data;
HXDLIN(1684)										data264->fPos = (data264->fPos + (int)1);
            									}
            									break;
            									case (int)3: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data265 = data;
HXDLIN(1684)										data265->oPos = (data265->oPos + (int)1);
            									}
            									break;
            									case (int)4: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data266 = data;
HXDLIN(1684)										data266->fPos = (data266->fPos + (int)6);
            									}
            									break;
            									case (int)5: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data267 = data;
HXDLIN(1684)										data267->fPos = (data267->fPos + (int)4);
            									}
            									break;
            									case (int)6: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data268 = data;
HXDLIN(1684)										data268->fPos = (data268->fPos + (int)3);
            									}
            									break;
            									case (int)7: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data269 = data;
HXDLIN(1684)										data269->fPos = (data269->fPos + (int)4);
            									}
            									break;
            									case (int)8: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data270 = data;
HXDLIN(1684)										data270->oPos = (data270->oPos + (int)3);
            									}
            									break;
            									case (int)9: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data271 = data;
HXDLIN(1684)										data271->fPos = (data271->fPos + (int)4);
            									}
            									break;
            									case (int)10: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data272 = data;
HXDLIN(1684)										data272->fPos = (data272->fPos + (int)5);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data273 = data;
HXDLIN(1684)										data273->oPos = (data273->oPos + (int)1);
            									}
            									break;
            									case (int)12: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data274 = data;
HXDLIN(1684)										data274->oPos = (data274->oPos + (int)4);
            									}
            									break;
            									case (int)13: {
            									}
            									break;
            									case (int)14: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data275 = data;
HXDLIN(1684)										data275->oPos = (data275->oPos + (int)2);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data276 = data;
HXDLIN(1684)										data276->bPos = (data276->bPos + (int)2);
            									}
            									break;
            									case (int)15: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data277 = data;
HXDLIN(1684)										data277->oPos = (data277->oPos + (int)4);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data278 = data;
HXDLIN(1684)										data278->iiPos = (data278->iiPos + (int)2);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data279 = data;
HXDLIN(1684)										data279->ffPos = (data279->ffPos + (int)1);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data280 = data;
HXDLIN(1684)										data280->fPos = (data280->fPos + (int)1);
            									}
            									break;
            									case (int)16: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data281 = data;
HXDLIN(1684)										data281->oPos = (data281->oPos + (int)4);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data282 = data;
HXDLIN(1684)										data282->iPos = (data282->iPos + (int)1);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data283 = data;
HXDLIN(1684)										data283->fPos = (data283->fPos + (int)2);
HXDLIN(1684)										 ::openfl::_internal::renderer::DrawCommandReader data284 = data;
HXDLIN(1684)										data284->bPos = (data284->bPos + (int)1);
            									}
            									break;
            									case (int)17: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data285 = data;
HXDLIN(1684)										data285->fPos = (data285->fPos + (int)2);
            									}
            									break;
            									case (int)18: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data286 = data;
HXDLIN(1684)										data286->fPos = (data286->fPos + (int)2);
            									}
            									break;
            									case (int)19: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data287 = data;
HXDLIN(1684)										data287->oPos = (data287->oPos + (int)1);
            									}
            									break;
            									case (int)20: {
HXLINE(1684)										 ::openfl::_internal::renderer::DrawCommandReader data288 = data;
HXDLIN(1684)										data288->oPos = (data288->oPos + (int)1);
            									}
            									break;
            									case (int)21: case (int)22: {
            									}
            									break;
            									default:{
            									}
            								}
            							}
HXLINE(1684)							data->prev = type;
            						}
            					}
            				}
            			}
HXLINE(1690)			data->destroy();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(CairoGraphics_obj,renderMask,(void))


CairoGraphics_obj::CairoGraphics_obj()
{
}

bool CairoGraphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { outValue = ( SIN45 ); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { outValue = ( TAN22 ); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { outValue = ( cairo ); return true; }
		if (HX_FIELD_EQ(inName,"isCCW") ) { outValue = isCCW_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { outValue = ( bounds ); return true; }
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { outValue = ( hasFill ); return true; }
		if (HX_FIELD_EQ(inName,"endFill") ) { outValue = endFill_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"hitTest") ) { outValue = hitTest_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { outValue = ( graphics ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { outValue = ( hasStroke ); return true; }
		if (HX_FIELD_EQ(inName,"closePath") ) { outValue = closePath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"endStroke") ) { outValue = endStroke_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { outValue = ( bitmapFill ); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { outValue = ( hitTesting ); return true; }
		if (HX_FIELD_EQ(inName,"worldAlpha") ) { outValue = ( worldAlpha ); return true; }
		if (HX_FIELD_EQ(inName,"renderMask") ) { outValue = renderMask_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { outValue = ( fillPattern ); return true; }
		if (HX_FIELD_EQ(inName,"tempMatrix3") ) { outValue = ( tempMatrix3 ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { outValue = ( bitmapRepeat ); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { outValue = ( fillCommands ); return true; }
		if (HX_FIELD_EQ(inName,"normalizeUVT") ) { outValue = normalizeUVT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"playCommands") ) { outValue = playCommands_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { outValue = ( pendingMatrix ); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { outValue = ( strokePattern ); return true; }
		if (HX_FIELD_EQ(inName,"drawRoundRect") ) { outValue = drawRoundRect_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { outValue = ( allowSmoothing ); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { outValue = ( strokeCommands ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"quadraticCurveTo") ) { outValue = quadraticCurveTo_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { outValue = ( fillPatternMatrix ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createImagePattern") ) { outValue = createImagePattern_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { outValue = ( inversePendingMatrix ); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"createGradientPattern") ) { outValue = createGradientPattern_dyn(); return true; }
	}
	return false;
}

bool CairoGraphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"SIN45") ) { SIN45=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"TAN22") ) { TAN22=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"cairo") ) { cairo=ioValue.Cast<  ::lime::graphics::cairo::Cairo >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bounds") ) { bounds=ioValue.Cast<  ::openfl::geom::Rectangle >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasFill") ) { hasFill=ioValue.Cast< bool >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"graphics") ) { graphics=ioValue.Cast<  ::openfl::display::Graphics >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"hasStroke") ) { hasStroke=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bitmapFill") ) { bitmapFill=ioValue.Cast<  ::openfl::display::BitmapData >(); return true; }
		if (HX_FIELD_EQ(inName,"hitTesting") ) { hitTesting=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"worldAlpha") ) { worldAlpha=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fillPattern") ) { fillPattern=ioValue.Cast<  ::Dynamic >(); return true; }
		if (HX_FIELD_EQ(inName,"tempMatrix3") ) { tempMatrix3=ioValue.Cast<  ::lime::math::Matrix3 >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"bitmapRepeat") ) { bitmapRepeat=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"fillCommands") ) { fillCommands=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"pendingMatrix") ) { pendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		if (HX_FIELD_EQ(inName,"strokePattern") ) { strokePattern=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"allowSmoothing") ) { allowSmoothing=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"strokeCommands") ) { strokeCommands=ioValue.Cast<  ::openfl::_internal::renderer::DrawCommandBuffer >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fillPatternMatrix") ) { fillPatternMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"inversePendingMatrix") ) { inversePendingMatrix=ioValue.Cast<  ::openfl::geom::Matrix >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CairoGraphics_obj_sMemberStorageInfo = 0;
static hx::StaticInfo CairoGraphics_obj_sStaticStorageInfo[] = {
	{hx::fsFloat,(void *) &CairoGraphics_obj::SIN45,HX_HCSTRING("SIN45","\x79","\x16","\xbe","\xfa")},
	{hx::fsFloat,(void *) &CairoGraphics_obj::TAN22,HX_HCSTRING("TAN22","\x41","\xf4","\xda","\x88")},
	{hx::fsBool,(void *) &CairoGraphics_obj::allowSmoothing,HX_HCSTRING("allowSmoothing","\xab","\xb7","\x66","\x68")},
	{hx::fsObject /*::openfl::display::BitmapData*/ ,(void *) &CairoGraphics_obj::bitmapFill,HX_HCSTRING("bitmapFill","\x12","\x2e","\x19","\x35")},
	{hx::fsBool,(void *) &CairoGraphics_obj::bitmapRepeat,HX_HCSTRING("bitmapRepeat","\xaa","\x38","\x9c","\x11")},
	{hx::fsObject /*::openfl::geom::Rectangle*/ ,(void *) &CairoGraphics_obj::bounds,HX_HCSTRING("bounds","\x75","\x86","\x1d","\x66")},
	{hx::fsObject /*::lime::graphics::cairo::Cairo*/ ,(void *) &CairoGraphics_obj::cairo,HX_HCSTRING("cairo","\x88","\x30","\x19","\x41")},
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &CairoGraphics_obj::fillCommands,HX_HCSTRING("fillCommands","\x6b","\xf6","\xc9","\xc2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CairoGraphics_obj::fillPattern,HX_HCSTRING("fillPattern","\x0d","\x86","\x12","\x35")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::fillPatternMatrix,HX_HCSTRING("fillPatternMatrix","\x2e","\xb8","\xae","\x97")},
	{hx::fsObject /*::openfl::display::Graphics*/ ,(void *) &CairoGraphics_obj::graphics,HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hasFill,HX_HCSTRING("hasFill","\xfd","\xee","\xff","\x12")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hasStroke,HX_HCSTRING("hasStroke","\xb2","\x66","\x1d","\x52")},
	{hx::fsBool,(void *) &CairoGraphics_obj::hitTesting,HX_HCSTRING("hitTesting","\xbd","\x65","\x48","\x19")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::inversePendingMatrix,HX_HCSTRING("inversePendingMatrix","\x28","\x14","\x8c","\xbb")},
	{hx::fsObject /*::openfl::geom::Matrix*/ ,(void *) &CairoGraphics_obj::pendingMatrix,HX_HCSTRING("pendingMatrix","\xf8","\x9d","\x96","\xb5")},
	{hx::fsObject /*::openfl::_internal::renderer::DrawCommandBuffer*/ ,(void *) &CairoGraphics_obj::strokeCommands,HX_HCSTRING("strokeCommands","\xa0","\x98","\x2a","\x67")},
	{hx::fsObject /*Dynamic*/ ,(void *) &CairoGraphics_obj::strokePattern,HX_HCSTRING("strokePattern","\x78","\xe1","\x21","\x7e")},
	{hx::fsObject /*::lime::math::Matrix3*/ ,(void *) &CairoGraphics_obj::tempMatrix3,HX_HCSTRING("tempMatrix3","\x1e","\xf2","\xbd","\x79")},
	{hx::fsFloat,(void *) &CairoGraphics_obj::worldAlpha,HX_HCSTRING("worldAlpha","\xac","\x57","\x43","\x8d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void CairoGraphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::tempMatrix3,"tempMatrix3");
	HX_MARK_MEMBER_NAME(CairoGraphics_obj::worldAlpha,"worldAlpha");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CairoGraphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::SIN45,"SIN45");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::TAN22,"TAN22");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::allowSmoothing,"allowSmoothing");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapFill,"bitmapFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bitmapRepeat,"bitmapRepeat");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::bounds,"bounds");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::cairo,"cairo");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillCommands,"fillCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPattern,"fillPattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::fillPatternMatrix,"fillPatternMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::graphics,"graphics");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasFill,"hasFill");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hasStroke,"hasStroke");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::hitTesting,"hitTesting");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::inversePendingMatrix,"inversePendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::pendingMatrix,"pendingMatrix");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokeCommands,"strokeCommands");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::strokePattern,"strokePattern");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::tempMatrix3,"tempMatrix3");
	HX_VISIT_MEMBER_NAME(CairoGraphics_obj::worldAlpha,"worldAlpha");
};

#endif

hx::Class CairoGraphics_obj::__mClass;

static ::String CairoGraphics_obj_sStaticFields[] = {
	HX_HCSTRING("SIN45","\x79","\x16","\xbe","\xfa"),
	HX_HCSTRING("TAN22","\x41","\xf4","\xda","\x88"),
	HX_HCSTRING("allowSmoothing","\xab","\xb7","\x66","\x68"),
	HX_HCSTRING("bitmapFill","\x12","\x2e","\x19","\x35"),
	HX_HCSTRING("bitmapRepeat","\xaa","\x38","\x9c","\x11"),
	HX_HCSTRING("bounds","\x75","\x86","\x1d","\x66"),
	HX_HCSTRING("cairo","\x88","\x30","\x19","\x41"),
	HX_HCSTRING("fillCommands","\x6b","\xf6","\xc9","\xc2"),
	HX_HCSTRING("fillPattern","\x0d","\x86","\x12","\x35"),
	HX_HCSTRING("fillPatternMatrix","\x2e","\xb8","\xae","\x97"),
	HX_HCSTRING("graphics","\xcb","\xf8","\x67","\x12"),
	HX_HCSTRING("hasFill","\xfd","\xee","\xff","\x12"),
	HX_HCSTRING("hasStroke","\xb2","\x66","\x1d","\x52"),
	HX_HCSTRING("hitTesting","\xbd","\x65","\x48","\x19"),
	HX_HCSTRING("inversePendingMatrix","\x28","\x14","\x8c","\xbb"),
	HX_HCSTRING("pendingMatrix","\xf8","\x9d","\x96","\xb5"),
	HX_HCSTRING("strokeCommands","\xa0","\x98","\x2a","\x67"),
	HX_HCSTRING("strokePattern","\x78","\xe1","\x21","\x7e"),
	HX_HCSTRING("tempMatrix3","\x1e","\xf2","\xbd","\x79"),
	HX_HCSTRING("worldAlpha","\xac","\x57","\x43","\x8d"),
	HX_HCSTRING("closePath","\x7d","\x65","\x20","\x14"),
	HX_HCSTRING("createGradientPattern","\xa4","\xee","\x44","\xf6"),
	HX_HCSTRING("createImagePattern","\x51","\xbd","\x5d","\xfb"),
	HX_HCSTRING("drawRoundRect","\xee","\xc3","\xaa","\xe2"),
	HX_HCSTRING("endFill","\xfe","\x87","\xe0","\x25"),
	HX_HCSTRING("endStroke","\xf3","\x01","\x17","\x51"),
	HX_HCSTRING("hitTest","\x45","\x60","\x7f","\xe2"),
	HX_HCSTRING("isCCW","\x0d","\x84","\x49","\xc1"),
	HX_HCSTRING("normalizeUVT","\x66","\x09","\x2f","\x47"),
	HX_HCSTRING("playCommands","\xdc","\xae","\xee","\x49"),
	HX_HCSTRING("quadraticCurveTo","\x12","\x48","\xc3","\x82"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	HX_HCSTRING("renderMask","\x62","\x3b","\x60","\xe5"),
	::String(null())
};

void CairoGraphics_obj::__register()
{
	hx::Object *dummy = new CairoGraphics_obj;
	CairoGraphics_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.cairo.CairoGraphics","\x72","\x72","\xef","\x3c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CairoGraphics_obj::__GetStatic;
	__mClass->mSetStaticField = &CairoGraphics_obj::__SetStatic;
	__mClass->mMarkFunc = CairoGraphics_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CairoGraphics_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CairoGraphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CairoGraphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CairoGraphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CairoGraphics_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CairoGraphics_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_49_boot)
HXDLIN(  49)		SIN45 = ((Float)0.70710678118654752440084436210485);
            	}
{
            	HX_STACKFRAME(&_hx_pos_7c423d109b848e15_50_boot)
HXDLIN(  50)		TAN22 = ((Float)0.4142135623730950488016887242097);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_57_boot)
HXDLIN(  57)		fillCommands =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_66_boot)
HXDLIN(  66)		strokeCommands =  ::openfl::_internal::renderer::DrawCommandBuffer_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_7c423d109b848e15_68_boot)
HXDLIN(  68)		tempMatrix3 =  ::lime::math::Matrix3_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null());
            	}
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace cairo
