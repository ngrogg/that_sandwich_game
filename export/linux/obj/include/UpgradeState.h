// Generated by Haxe 3.4.7
#ifndef INCLUDED_UpgradeState
#define INCLUDED_UpgradeState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
HX_DECLARE_CLASS0(UpgradeState)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,_hx_system,FlxSound)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES UpgradeState_obj : public  ::flixel::FlxState_obj
{
	public:
		typedef  ::flixel::FlxState_obj super;
		typedef UpgradeState_obj OBJ_;
		UpgradeState_obj();

	public:
		enum { _hx_ClassId = 0x264a4e59 };

		void __construct( ::Dynamic MaxSize);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="UpgradeState")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"UpgradeState"); }
		static hx::ObjectPtr< UpgradeState_obj > __new( ::Dynamic MaxSize);
		static hx::ObjectPtr< UpgradeState_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic MaxSize);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~UpgradeState_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("UpgradeState","\xf5","\x47","\x19","\xe7"); }

		static void __boot();
		static int FiniteState;
		static ::String _version;
		static ::String _GUID;
		static int _level;
		static int _rotation_speed;
		static int _num_bullets;
		static int _max_bread;
		static int _upgrades;
		static int newGame;
		static int _score;
		static int _sequence;
		 ::flixel::text::FlxText _breadText;
		 ::flixel::text::FlxText _bulletText;
		 ::flixel::text::FlxText _spinText;
		 ::flixel::text::FlxText _pointsText;
		 ::flixel::text::FlxText _helperText;
		 ::flixel::_hx_system::FlxSound snd_error;
		void create();

		void update(Float elapsed);

		void increaseBread(hx::Null< int >  Amount);
		::Dynamic increaseBread_dyn();

		void increaseBullets(hx::Null< int >  Amount);
		::Dynamic increaseBullets_dyn();

		void increaseRotation();
		::Dynamic increaseRotation_dyn();

};


#endif /* INCLUDED_UpgradeState */ 
